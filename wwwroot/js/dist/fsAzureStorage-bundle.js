!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.fsAzureBlobStorage=t():e.fsAzureBlobStorage=t()}(self,(()=>(()=>{var e={187:e=>{"use strict";var t,a="object"==typeof Reflect?Reflect:null,r=a&&"function"==typeof a.apply?a.apply:function(e,t,a){return Function.prototype.apply.call(e,t,a)};t=a&&"function"==typeof a.ownKeys?a.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var s=Number.isNaN||function(e){return e!=e};function n(){n.init.call(this)}e.exports=n,e.exports.once=function(e,t){return new Promise((function(a,r){function s(a){e.removeListener(t,n),r(a)}function n(){"function"==typeof e.removeListener&&e.removeListener("error",s),a([].slice.call(arguments))}g(e,t,n,{once:!0}),"error"!==t&&function(e,t,a){"function"==typeof e.on&&g(e,"error",t,{once:!0})}(e,s)}))},n.EventEmitter=n,n.prototype._events=void 0,n.prototype._eventsCount=0,n.prototype._maxListeners=void 0;var i=10;function o(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function m(e){return void 0===e._maxListeners?n.defaultMaxListeners:e._maxListeners}function l(e,t,a,r){var s,n,i,l;if(o(a),void 0===(n=e._events)?(n=e._events=Object.create(null),e._eventsCount=0):(void 0!==n.newListener&&(e.emit("newListener",t,a.listener?a.listener:a),n=e._events),i=n[t]),void 0===i)i=n[t]=a,++e._eventsCount;else if("function"==typeof i?i=n[t]=r?[a,i]:[i,a]:r?i.unshift(a):i.push(a),(s=m(e))>0&&i.length>s&&!i.warned){i.warned=!0;var d=new Error("Possible EventEmitter memory leak detected. "+i.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");d.name="MaxListenersExceededWarning",d.emitter=e,d.type=t,d.count=i.length,l=d,console&&console.warn&&console.warn(l)}return e}function d(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function c(e,t,a){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:a},s=d.bind(r);return s.listener=a,r.wrapFn=s,s}function p(e,t,a){var r=e._events;if(void 0===r)return[];var s=r[t];return void 0===s?[]:"function"==typeof s?a?[s.listener||s]:[s]:a?function(e){for(var t=new Array(e.length),a=0;a<t.length;++a)t[a]=e[a].listener||e[a];return t}(s):y(s,s.length)}function u(e){var t=this._events;if(void 0!==t){var a=t[e];if("function"==typeof a)return 1;if(void 0!==a)return a.length}return 0}function y(e,t){for(var a=new Array(t),r=0;r<t;++r)a[r]=e[r];return a}function g(e,t,a,r){if("function"==typeof e.on)r.once?e.once(t,a):e.on(t,a);else{if("function"!=typeof e.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,(function s(n){r.once&&e.removeEventListener(t,s),a(n)}))}}Object.defineProperty(n,"defaultMaxListeners",{enumerable:!0,get:function(){return i},set:function(e){if("number"!=typeof e||e<0||s(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");i=e}}),n.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},n.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||s(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},n.prototype.getMaxListeners=function(){return m(this)},n.prototype.emit=function(e){for(var t=[],a=1;a<arguments.length;a++)t.push(arguments[a]);var s="error"===e,n=this._events;if(void 0!==n)s=s&&void 0===n.error;else if(!s)return!1;if(s){var i;if(t.length>0&&(i=t[0]),i instanceof Error)throw i;var o=new Error("Unhandled error."+(i?" ("+i.message+")":""));throw o.context=i,o}var m=n[e];if(void 0===m)return!1;if("function"==typeof m)r(m,this,t);else{var l=m.length,d=y(m,l);for(a=0;a<l;++a)r(d[a],this,t)}return!0},n.prototype.addListener=function(e,t){return l(this,e,t,!1)},n.prototype.on=n.prototype.addListener,n.prototype.prependListener=function(e,t){return l(this,e,t,!0)},n.prototype.once=function(e,t){return o(t),this.on(e,c(this,e,t)),this},n.prototype.prependOnceListener=function(e,t){return o(t),this.prependListener(e,c(this,e,t)),this},n.prototype.removeListener=function(e,t){var a,r,s,n,i;if(o(t),void 0===(r=this._events))return this;if(void 0===(a=r[e]))return this;if(a===t||a.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,a.listener||t));else if("function"!=typeof a){for(s=-1,n=a.length-1;n>=0;n--)if(a[n]===t||a[n].listener===t){i=a[n].listener,s=n;break}if(s<0)return this;0===s?a.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(a,s),1===a.length&&(r[e]=a[0]),void 0!==r.removeListener&&this.emit("removeListener",e,i||t)}return this},n.prototype.off=n.prototype.removeListener,n.prototype.removeAllListeners=function(e){var t,a,r;if(void 0===(a=this._events))return this;if(void 0===a.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==a[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete a[e]),this;if(0===arguments.length){var s,n=Object.keys(a);for(r=0;r<n.length;++r)"removeListener"!==(s=n[r])&&this.removeAllListeners(s);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=a[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},n.prototype.listeners=function(e){return p(this,e,!0)},n.prototype.rawListeners=function(e){return p(this,e,!1)},n.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):u.call(e,t)},n.prototype.listenerCount=u,n.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]}},598:()=>{}},t={};function a(r){var s=t[r];if(void 0!==s)return s.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,a),n.exports}a.d=(e,t)=>{for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{"use strict";a.r(r),a.d(r,{uploadFiles:()=>Jc});var e={};function t(e){return this instanceof t?(this.v=e,this):new t(e)}function s(e,a,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var s,n=r.apply(e,a||[]),i=[];return s={},o("next"),o("throw"),o("return"),s[Symbol.asyncIterator]=function(){return this},s;function o(e){n[e]&&(s[e]=function(t){return new Promise((function(a,r){i.push([e,t,a,r])>1||m(e,t)}))})}function m(e,a){try{(r=n[e](a)).value instanceof t?Promise.resolve(r.value.v).then(l,d):c(i[0][2],r)}catch(e){c(i[0][3],e)}var r}function l(e){m("next",e)}function d(e){m("throw",e)}function c(e,t){e(t),i.shift(),i.length&&m(i[0][0],i[0][1])}}function n(e){var a,r;return a={},s("next"),s("throw",(function(e){throw e})),s("return"),a[Symbol.iterator]=function(){return this},a;function s(s,n){a[s]=e[s]?function(a){return(r=!r)?{value:t(e[s](a)),done:!1}:n?n(a):a}:n}}function i(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,a=e[Symbol.asyncIterator];return a?a.call(e):(e=function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],r=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(a){t[a]=e[a]&&function(t){return new Promise((function(r,s){!function(e,t,a,r){Promise.resolve(r).then((function(t){e({value:t,done:a})}),t)}(r,s,(t=e[a](t)).done,t.value)}))}}}a.r(e),a.d(e,{AccessPolicy:()=>st,AppendBlobAppendBlockExceptionHeaders:()=>Lr,AppendBlobAppendBlockFromUrlExceptionHeaders:()=>jr,AppendBlobAppendBlockFromUrlHeaders:()=>_r,AppendBlobAppendBlockHeaders:()=>Dr,AppendBlobCreateExceptionHeaders:()=>kr,AppendBlobCreateHeaders:()=>Ar,AppendBlobSealExceptionHeaders:()=>Vr,AppendBlobSealHeaders:()=>Ur,ArrowConfiguration:()=>Pt,ArrowField:()=>zt,BlobAbortCopyFromURLExceptionHeaders:()=>or,BlobAbortCopyFromURLHeaders:()=>ir,BlobAcquireLeaseExceptionHeaders:()=>$a,BlobAcquireLeaseHeaders:()=>Fa,BlobBreakLeaseExceptionHeaders:()=>Za,BlobBreakLeaseHeaders:()=>Ya,BlobChangeLeaseExceptionHeaders:()=>Ja,BlobChangeLeaseHeaders:()=>Wa,BlobCopyFromURLExceptionHeaders:()=>nr,BlobCopyFromURLHeaders:()=>sr,BlobCreateSnapshotExceptionHeaders:()=>tr,BlobCreateSnapshotHeaders:()=>er,BlobDeleteExceptionHeaders:()=>Ea,BlobDeleteHeaders:()=>Oa,BlobDeleteImmutabilityPolicyExceptionHeaders:()=>La,BlobDeleteImmutabilityPolicyHeaders:()=>Da,BlobDownloadExceptionHeaders:()=>za,BlobDownloadHeaders:()=>Pa,BlobFlatListSegment:()=>it,BlobGetAccountInfoExceptionHeaders:()=>cr,BlobGetAccountInfoHeaders:()=>dr,BlobGetPropertiesExceptionHeaders:()=>wa,BlobGetPropertiesHeaders:()=>Ra,BlobGetTagsExceptionHeaders:()=>gr,BlobGetTagsHeaders:()=>yr,BlobHierarchyListSegment:()=>ct,BlobItemInternal:()=>ot,BlobName:()=>mt,BlobPrefix:()=>pt,BlobPropertiesInternal:()=>lt,BlobQueryExceptionHeaders:()=>ur,BlobQueryHeaders:()=>pr,BlobReleaseLeaseExceptionHeaders:()=>Ga,BlobReleaseLeaseHeaders:()=>Ka,BlobRenewLeaseExceptionHeaders:()=>Xa,BlobRenewLeaseHeaders:()=>Qa,BlobServiceProperties:()=>Le,BlobServiceStatistics:()=>Ke,BlobSetExpiryExceptionHeaders:()=>Ma,BlobSetExpiryHeaders:()=>Ta,BlobSetHttpHeadersExceptionHeaders:()=>Ha,BlobSetHttpHeadersHeaders:()=>Ia,BlobSetImmutabilityPolicyExceptionHeaders:()=>ka,BlobSetImmutabilityPolicyHeaders:()=>Aa,BlobSetLegalHoldExceptionHeaders:()=>ja,BlobSetLegalHoldHeaders:()=>_a,BlobSetMetadataExceptionHeaders:()=>Va,BlobSetMetadataHeaders:()=>Ua,BlobSetTagsExceptionHeaders:()=>xr,BlobSetTagsHeaders:()=>hr,BlobSetTierExceptionHeaders:()=>lr,BlobSetTierHeaders:()=>mr,BlobStartCopyFromURLExceptionHeaders:()=>rr,BlobStartCopyFromURLHeaders:()=>ar,BlobTag:()=>at,BlobTags:()=>tt,BlobUndeleteExceptionHeaders:()=>Ba,BlobUndeleteHeaders:()=>qa,Block:()=>gt,BlockBlobCommitBlockListExceptionHeaders:()=>Zr,BlockBlobCommitBlockListHeaders:()=>Yr,BlockBlobGetBlockListExceptionHeaders:()=>ts,BlockBlobGetBlockListHeaders:()=>es,BlockBlobPutBlobFromUrlExceptionHeaders:()=>Gr,BlockBlobPutBlobFromUrlHeaders:()=>Kr,BlockBlobStageBlockExceptionHeaders:()=>Xr,BlockBlobStageBlockFromURLExceptionHeaders:()=>Jr,BlockBlobStageBlockFromURLHeaders:()=>Wr,BlockBlobStageBlockHeaders:()=>Qr,BlockBlobUploadExceptionHeaders:()=>$r,BlockBlobUploadHeaders:()=>Fr,BlockList:()=>yt,BlockLookupList:()=>ut,ClearRange:()=>bt,ContainerAcquireLeaseExceptionHeaders:()=>la,ContainerAcquireLeaseHeaders:()=>ma,ContainerBreakLeaseExceptionHeaders:()=>ga,ContainerBreakLeaseHeaders:()=>ya,ContainerChangeLeaseExceptionHeaders:()=>xa,ContainerChangeLeaseHeaders:()=>ha,ContainerCreateExceptionHeaders:()=>Vt,ContainerCreateHeaders:()=>Ut,ContainerDeleteExceptionHeaders:()=>Gt,ContainerDeleteHeaders:()=>Kt,ContainerFilterBlobsExceptionHeaders:()=>oa,ContainerFilterBlobsHeaders:()=>ia,ContainerGetAccessPolicyExceptionHeaders:()=>Jt,ContainerGetAccessPolicyHeaders:()=>Wt,ContainerGetAccountInfoExceptionHeaders:()=>Ca,ContainerGetAccountInfoHeaders:()=>va,ContainerGetPropertiesExceptionHeaders:()=>$t,ContainerGetPropertiesHeaders:()=>Ft,ContainerItem:()=>Xe,ContainerListBlobFlatSegmentExceptionHeaders:()=>Na,ContainerListBlobFlatSegmentHeaders:()=>ba,ContainerListBlobHierarchySegmentExceptionHeaders:()=>Sa,ContainerListBlobHierarchySegmentHeaders:()=>fa,ContainerProperties:()=>We,ContainerReleaseLeaseExceptionHeaders:()=>ca,ContainerReleaseLeaseHeaders:()=>da,ContainerRenameExceptionHeaders:()=>ra,ContainerRenameHeaders:()=>aa,ContainerRenewLeaseExceptionHeaders:()=>ua,ContainerRenewLeaseHeaders:()=>pa,ContainerRestoreExceptionHeaders:()=>ta,ContainerRestoreHeaders:()=>ea,ContainerSetAccessPolicyExceptionHeaders:()=>Zt,ContainerSetAccessPolicyHeaders:()=>Yt,ContainerSetMetadataExceptionHeaders:()=>Xt,ContainerSetMetadataHeaders:()=>Qt,ContainerSubmitBatchExceptionHeaders:()=>na,ContainerSubmitBatchHeaders:()=>sa,CorsRule:()=>Ve,DelimitedTextConfiguration:()=>vt,FilterBlobItem:()=>et,FilterBlobSegment:()=>Ze,GeoReplication:()=>Ge,JsonTextConfiguration:()=>Ct,KeyInfo:()=>Je,ListBlobsFlatSegmentResponse:()=>nt,ListBlobsHierarchySegmentResponse:()=>dt,ListContainersSegmentResponse:()=>Qe,Logging:()=>_e,Metrics:()=>Ue,PageBlobClearPagesExceptionHeaders:()=>Cr,PageBlobClearPagesHeaders:()=>vr,PageBlobCopyIncrementalExceptionHeaders:()=>Hr,PageBlobCopyIncrementalHeaders:()=>Ir,PageBlobCreateExceptionHeaders:()=>Nr,PageBlobCreateHeaders:()=>br,PageBlobGetPageRangesDiffExceptionHeaders:()=>Er,PageBlobGetPageRangesDiffHeaders:()=>Or,PageBlobGetPageRangesExceptionHeaders:()=>wr,PageBlobGetPageRangesHeaders:()=>Rr,PageBlobResizeExceptionHeaders:()=>Br,PageBlobResizeHeaders:()=>qr,PageBlobUpdateSequenceNumberExceptionHeaders:()=>Mr,PageBlobUpdateSequenceNumberHeaders:()=>Tr,PageBlobUploadPagesExceptionHeaders:()=>Sr,PageBlobUploadPagesFromURLExceptionHeaders:()=>zr,PageBlobUploadPagesFromURLHeaders:()=>Pr,PageBlobUploadPagesHeaders:()=>fr,PageList:()=>ht,PageRange:()=>xt,QueryFormat:()=>St,QueryRequest:()=>Nt,QuerySerialization:()=>ft,RetentionPolicy:()=>je,ServiceFilterBlobsExceptionHeaders:()=>jt,ServiceFilterBlobsHeaders:()=>_t,ServiceGetAccountInfoExceptionHeaders:()=>kt,ServiceGetAccountInfoHeaders:()=>At,ServiceGetPropertiesExceptionHeaders:()=>Et,ServiceGetPropertiesHeaders:()=>Ot,ServiceGetStatisticsExceptionHeaders:()=>Bt,ServiceGetStatisticsHeaders:()=>qt,ServiceGetUserDelegationKeyExceptionHeaders:()=>Ht,ServiceGetUserDelegationKeyHeaders:()=>It,ServiceListContainersSegmentExceptionHeaders:()=>Mt,ServiceListContainersSegmentHeaders:()=>Tt,ServiceSetPropertiesExceptionHeaders:()=>wt,ServiceSetPropertiesHeaders:()=>Rt,ServiceSubmitBatchExceptionHeaders:()=>Lt,ServiceSubmitBatchHeaders:()=>Dt,SignedIdentifier:()=>rt,StaticWebsite:()=>Fe,StorageError:()=>$e,UserDelegationKey:()=>Ye}),Object.create,Object.create;const o="$",m="_";var l,d=new Uint8Array(16);function c(){if(!l&&!(l="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return l(d)}const p=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,u=function(e){return"string"==typeof e&&p.test(e)};for(var y=[],g=0;g<256;++g)y.push((g+256).toString(16).substr(1));const h=function(e,t,a){var r=(e=e||{}).random||(e.rng||c)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){a=a||0;for(var s=0;s<16;++s)t[a+s]=r[s];return t}return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=(y[e[t+0]]+y[e[t+1]]+y[e[t+2]]+y[e[t+3]]+"-"+y[e[t+4]]+y[e[t+5]]+"-"+y[e[t+6]]+y[e[t+7]]+"-"+y[e[t+8]]+y[e[t+9]]+"-"+y[e[t+10]]+y[e[t+11]]+y[e[t+12]]+y[e[t+13]]+y[e[t+14]]+y[e[t+15]]).toLowerCase();if(!u(a))throw TypeError("Stringified UUID is invalid");return a}(r)},x=/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i,b="undefined"!=typeof process&&!!process.version&&!!process.versions&&!!process.versions.node;function N(){return h()}const f=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function S(e,t,a){return e&&t?e.split(t).join(a||""):e}function v(e){const t=e;return t&&"function"==typeof t.getToken&&(void 0===t.signRequest||t.getToken.length>0)}const C=new Error("ProxyPolicy is not supported in browser environment");function P(e){return{create:(e,t)=>{throw C}}}var z="object"==typeof globalThis?globalThis:"object"==typeof self?self:"object"==typeof window?window:"object"==typeof a.g?a.g:{},R="1.4.0",w=/^(\d+)\.(\d+)\.(\d+)(-(.+))?$/,O=function(e){var t=new Set([e]),a=new Set,r=e.match(w);if(!r)return function(){return!1};var s=+r[1],n=+r[2],i=+r[3];if(null!=r[4])return function(t){return t===e};function o(e){return a.add(e),!1}function m(e){return t.add(e),!0}return function(e){if(t.has(e))return!0;if(a.has(e))return!1;var r=e.match(w);if(!r)return o(e);var l=+r[1],d=+r[2],c=+r[3];return null!=r[4]||s!==l?o(e):0===s?n===d&&i<=c?m(e):o(e):n<=d?m(e):o(e)}}(R),E=R.split(".")[0],q=Symbol.for("opentelemetry.js.api."+E),B=z;function T(e,t,a,r){var s;void 0===r&&(r=!1);var n=B[q]=null!==(s=B[q])&&void 0!==s?s:{version:R};if(!r&&n[e]){var i=new Error("@opentelemetry/api: Attempted duplicate registration of API: "+e);return a.error(i.stack||i.message),!1}return n.version!==R?(i=new Error("@opentelemetry/api: All API registration versions must match"),a.error(i.stack||i.message),!1):(n[e]=t,a.debug("@opentelemetry/api: Registered a global for "+e+" v"+R+"."),!0)}function M(e){var t,a,r=null===(t=B[q])||void 0===t?void 0:t.version;if(r&&O(r))return null===(a=B[q])||void 0===a?void 0:a[e]}function I(e,t){t.debug("@opentelemetry/api: Unregistering a global for "+e+" v"+R+".");var a=B[q];a&&delete a[e]}var H,A=new function e(t){var a=this;a._currentContext=t?new Map(t):new Map,a.getValue=function(e){return a._currentContext.get(e)},a.setValue=function(t,r){var s=new e(a._currentContext);return s._currentContext.set(t,r),s},a.deleteValue=function(t){var r=new e(a._currentContext);return r._currentContext.delete(t),r}},k=function(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var r,s,n=a.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)i.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(a=n.return)&&a.call(n)}finally{if(s)throw s.error}}return i},D=function(e,t,a){if(a||2===arguments.length)for(var r,s=0,n=t.length;s<n;s++)!r&&s in t||(r||(r=Array.prototype.slice.call(t,0,s)),r[s]=t[s]);return e.concat(r||Array.prototype.slice.call(t))},L=function(){function e(){}return e.prototype.active=function(){return A},e.prototype.with=function(e,t,a){for(var r=[],s=3;s<arguments.length;s++)r[s-3]=arguments[s];return t.call.apply(t,D([a],k(r),!1))},e.prototype.bind=function(e,t){return t},e.prototype.enable=function(){return this},e.prototype.disable=function(){return this},e}(),_=function(){function e(e){this._namespace=e.namespace||"DiagComponentLogger"}return e.prototype.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return j("debug",this._namespace,e)},e.prototype.error=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return j("error",this._namespace,e)},e.prototype.info=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return j("info",this._namespace,e)},e.prototype.warn=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return j("warn",this._namespace,e)},e.prototype.verbose=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return j("verbose",this._namespace,e)},e}();function j(e,t,a){var r=M("diag");if(r)return a.unshift(t),r[e].apply(r,function(e,t,a){if(a||2===arguments.length)for(var r,s=0,n=t.length;s<n;s++)!r&&s in t||(r||(r=Array.prototype.slice.call(t,0,s)),r[s]=t[s]);return e.concat(r||Array.prototype.slice.call(t))}([],function(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var r,s,n=a.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)i.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(a=n.return)&&a.call(n)}finally{if(s)throw s.error}}return i}(a),!1))}!function(e){e[e.NONE=0]="NONE",e[e.ERROR=30]="ERROR",e[e.WARN=50]="WARN",e[e.INFO=60]="INFO",e[e.DEBUG=70]="DEBUG",e[e.VERBOSE=80]="VERBOSE",e[e.ALL=9999]="ALL"}(H||(H={}));var U,V=function(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var r,s,n=a.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)i.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(a=n.return)&&a.call(n)}finally{if(s)throw s.error}}return i},F=function(e,t,a){if(a||2===arguments.length)for(var r,s=0,n=t.length;s<n;s++)!r&&s in t||(r||(r=Array.prototype.slice.call(t,0,s)),r[s]=t[s]);return e.concat(r||Array.prototype.slice.call(t))},$=function(){function e(){function e(e){return function(){for(var t=[],a=0;a<arguments.length;a++)t[a]=arguments[a];var r=M("diag");if(r)return r[e].apply(r,F([],V(t),!1))}}var t=this;t.setLogger=function(e,a){var r,s,n;if(void 0===a&&(a={logLevel:H.INFO}),e===t){var i=new Error("Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation");return t.error(null!==(r=i.stack)&&void 0!==r?r:i.message),!1}"number"==typeof a&&(a={logLevel:a});var o=M("diag"),m=function(e,t){function a(a,r){var s=t[a];return"function"==typeof s&&e>=r?s.bind(t):function(){}}return e<H.NONE?e=H.NONE:e>H.ALL&&(e=H.ALL),t=t||{},{error:a("error",H.ERROR),warn:a("warn",H.WARN),info:a("info",H.INFO),debug:a("debug",H.DEBUG),verbose:a("verbose",H.VERBOSE)}}(null!==(s=a.logLevel)&&void 0!==s?s:H.INFO,e);if(o&&!a.suppressOverrideMessage){var l=null!==(n=(new Error).stack)&&void 0!==n?n:"<failed to generate stacktrace>";o.warn("Current logger will be overwritten from "+l),m.warn("Current logger will overwrite one already registered from "+l)}return T("diag",m,t,!0)},t.disable=function(){I("diag",t)},t.createComponentLogger=function(e){return new _(e)},t.verbose=e("verbose"),t.debug=e("debug"),t.info=e("info"),t.warn=e("warn"),t.error=e("error")}return e.instance=function(){return this._instance||(this._instance=new e),this._instance},e}(),K=function(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var r,s,n=a.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)i.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(a=n.return)&&a.call(n)}finally{if(s)throw s.error}}return i},G=function(e,t,a){if(a||2===arguments.length)for(var r,s=0,n=t.length;s<n;s++)!r&&s in t||(r||(r=Array.prototype.slice.call(t,0,s)),r[s]=t[s]);return e.concat(r||Array.prototype.slice.call(t))},Q="context",X=new L,W=function(){function e(){}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalContextManager=function(e){return T(Q,e,$.instance())},e.prototype.active=function(){return this._getContextManager().active()},e.prototype.with=function(e,t,a){for(var r,s=[],n=3;n<arguments.length;n++)s[n-3]=arguments[n];return(r=this._getContextManager()).with.apply(r,G([e,t,a],K(s),!1))},e.prototype.bind=function(e,t){return this._getContextManager().bind(e,t)},e.prototype._getContextManager=function(){return M(Q)||X},e.prototype.disable=function(){this._getContextManager().disable(),I(Q,$.instance())},e}();!function(e){e[e.NONE=0]="NONE",e[e.SAMPLED=1]="SAMPLED"}(U||(U={}));var J="0000000000000000",Y="00000000000000000000000000000000",Z={traceId:Y,spanId:J,traceFlags:U.NONE},ee=function(){function e(e){void 0===e&&(e=Z),this._spanContext=e}return e.prototype.spanContext=function(){return this._spanContext},e.prototype.setAttribute=function(e,t){return this},e.prototype.setAttributes=function(e){return this},e.prototype.addEvent=function(e,t){return this},e.prototype.setStatus=function(e){return this},e.prototype.updateName=function(e){return this},e.prototype.end=function(e){},e.prototype.isRecording=function(){return!1},e.prototype.recordException=function(e,t){},e}(),te=("OpenTelemetry Context Key SPAN",Symbol.for("OpenTelemetry Context Key SPAN"));function ae(e){return e.getValue(te)||void 0}function re(){return ae(W.getInstance().active())}function se(e,t){return e.setValue(te,t)}function ne(e){return e.deleteValue(te)}function ie(e,t){return se(e,new ee(t))}function oe(e){var t;return null===(t=ae(e))||void 0===t?void 0:t.spanContext()}var me=/^([0-9a-f]{32})$/i,le=/^[0-9a-f]{16}$/i;function de(e){return a=e.traceId,me.test(a)&&a!==Y&&(t=e.spanId,le.test(t)&&t!==J);var t,a}function ce(e){return new ee(e)}var pe,ue=W.getInstance(),ye=function(){function e(){}return e.prototype.startSpan=function(e,t,a){if(void 0===a&&(a=ue.active()),Boolean(null==t?void 0:t.root))return new ee;var r,s=a&&oe(a);return"object"==typeof(r=s)&&"string"==typeof r.spanId&&"string"==typeof r.traceId&&"number"==typeof r.traceFlags&&de(s)?new ee(s):new ee},e.prototype.startActiveSpan=function(e,t,a,r){var s,n,i;if(!(arguments.length<2)){2===arguments.length?i=t:3===arguments.length?(s=t,i=a):(s=t,n=a,i=r);var o=null!=n?n:ue.active(),m=this.startSpan(e,s,o),l=se(o,m);return ue.with(l,i,void 0,m)}},e}(),ge=new ye,he=function(){function e(e,t,a,r){this._provider=e,this.name=t,this.version=a,this.options=r}return e.prototype.startSpan=function(e,t,a){return this._getTracer().startSpan(e,t,a)},e.prototype.startActiveSpan=function(e,t,a,r){var s=this._getTracer();return Reflect.apply(s.startActiveSpan,s,arguments)},e.prototype._getTracer=function(){if(this._delegate)return this._delegate;var e=this._provider.getDelegateTracer(this.name,this.version,this.options);return e?(this._delegate=e,this._delegate):ge},e}(),xe=new(function(){function e(){}return e.prototype.getTracer=function(e,t,a){return new ye},e}()),be=function(){function e(){}return e.prototype.getTracer=function(e,t,a){var r;return null!==(r=this.getDelegateTracer(e,t,a))&&void 0!==r?r:new he(this,e,t,a)},e.prototype.getDelegate=function(){var e;return null!==(e=this._delegate)&&void 0!==e?e:xe},e.prototype.setDelegate=function(e){this._delegate=e},e.prototype.getDelegateTracer=function(e,t,a){var r;return null===(r=this._delegate)||void 0===r?void 0:r.getTracer(e,t,a)},e}(),Ne="trace",fe=function(){function e(){this._proxyTracerProvider=new be,this.wrapSpanContext=ce,this.isSpanContextValid=de,this.deleteSpan=ne,this.getSpan=ae,this.getActiveSpan=re,this.getSpanContext=oe,this.setSpan=se,this.setSpanContext=ie}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalTracerProvider=function(e){var t=T(Ne,this._proxyTracerProvider,$.instance());return t&&this._proxyTracerProvider.setDelegate(e),t},e.prototype.getTracerProvider=function(){return M(Ne)||this._proxyTracerProvider},e.prototype.getTracer=function(e,t){return this.getTracerProvider().getTracer(e,t)},e.prototype.disable=function(){I(Ne,$.instance()),this._proxyTracerProvider=new be},e}(),Se=fe.getInstance(),ve=W.getInstance();function Ce(e,t){return Se.setSpan(e,t)}!function(e){e[e.INTERNAL=0]="INTERNAL",e[e.SERVER=1]="SERVER",e[e.CLIENT=2]="CLIENT",e[e.PRODUCER=3]="PRODUCER",e[e.CONSUMER=4]="CONSUMER"}(pe||(pe={}));const Pe=ve;var ze;function Re(e){const{requestOptions:t,tracingOptions:a}=e,r=function(e,t){var a={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(a[r[s]]=e[r[s]])}return a}(e,["requestOptions","tracingOptions"]);let s=r;return t&&(s=Object.assign(Object.assign({},s),t)),a&&(s.tracingContext=a.tracingContext,s.spanOptions=null==a?void 0:a.spanOptions),s}function we(e){let t="";for(let a=0;a<e.length;a++)t+=String.fromCharCode(e[a]);return btoa(t)}function Oe(e){const t=atob(e),a=new Uint8Array(t.length);for(let e=0;e<t.length;e++)a[e]=t.charCodeAt(e);return a}!function(e){e[e.UNSET=0]="UNSET",e[e.OK=1]="OK",e[e.ERROR=2]="ERROR"}(ze||(ze={}));class Ee{constructor(e={},t){this.modelMappers=e,this.isXML=t}validateConstraints(e,t,a){const r=(e,r)=>{throw new Error(`"${a}" with value "${t}" should satisfy the constraint "${e}": ${r}.`)};if(e.constraints&&null!=t){const a=t,{ExclusiveMaximum:s,ExclusiveMinimum:n,InclusiveMaximum:i,InclusiveMinimum:o,MaxItems:m,MaxLength:l,MinItems:d,MinLength:c,MultipleOf:p,Pattern:u,UniqueItems:y}=e.constraints;null!=s&&a>=s&&r("ExclusiveMaximum",s),null!=n&&a<=n&&r("ExclusiveMinimum",n),null!=i&&a>i&&r("InclusiveMaximum",i),null!=o&&a<o&&r("InclusiveMinimum",o);const g=t;if(null!=m&&g.length>m&&r("MaxItems",m),null!=l&&g.length>l&&r("MaxLength",l),null!=d&&g.length<d&&r("MinItems",d),null!=c&&g.length<c&&r("MinLength",c),null!=p&&a%p!=0&&r("MultipleOf",p),u){const e="string"==typeof u?new RegExp(u):u;"string"==typeof t&&null!==t.match(e)||r("Pattern",u)}y&&g.some(((e,t,a)=>a.indexOf(e)!==t))&&r("UniqueItems",y)}}serialize(e,t,a,r={}){var s,n,i;const l={rootName:null!==(s=r.rootName)&&void 0!==s?s:"",includeRoot:null!==(n=r.includeRoot)&&void 0!==n&&n,xmlCharKey:null!==(i=r.xmlCharKey)&&void 0!==i?i:m};let d={};const c=e.type.name;a||(a=e.serializedName),null!==c.match(/^Sequence$/i)&&(d=[]),e.isConstant&&(t=e.defaultValue);const{required:p,nullable:u}=e;if(p&&u&&void 0===t)throw new Error(`${a} cannot be undefined.`);if(p&&!u&&null==t)throw new Error(`${a} cannot be null or undefined.`);if(!p&&!1===u&&null===t)throw new Error(`${a} cannot be null.`);return null==t||null!==c.match(/^any$/i)?d=t:null!==c.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i)?d=function(e,t,a){if(null!=a)if(null!==e.match(/^Number$/i)){if("number"!=typeof a)throw new Error(`${t} with value ${a} must be of type number.`)}else if(null!==e.match(/^String$/i)){if("string"!=typeof a.valueOf())throw new Error(`${t} with value "${a}" must be of type string.`)}else if(null!==e.match(/^Uuid$/i)){if("string"!=typeof a.valueOf()||(r=a,!x.test(r)))throw new Error(`${t} with value "${a}" must be of type string and a valid uuid.`)}else if(null!==e.match(/^Boolean$/i)){if("boolean"!=typeof a)throw new Error(`${t} with value ${a} must be of type boolean.`)}else if(null!==e.match(/^Stream$/i)){const e=typeof a;if(!("string"===e||"function"===e||a instanceof ArrayBuffer||ArrayBuffer.isView(a)||("function"==typeof Blob||"object"==typeof Blob)&&a instanceof Blob))throw new Error(`${t} must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.`)}var r;return a}(c,a,t):null!==c.match(/^Enum$/i)?d=function(e,t,a){if(!t)throw new Error(`Please provide a set of allowedValues to validate ${e} as an Enum Type.`);if(!t.some((e=>"string"==typeof e.valueOf()?e.toLowerCase()===a.toLowerCase():e===a)))throw new Error(`${a} is not a valid value for ${e}. The valid values are: ${JSON.stringify(t)}.`);return a}(a,e.type.allowedValues,t):null!==c.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i)?d=function(e,t,a){if(null!=t)if(null!==e.match(/^Date$/i)){if(!(t instanceof Date||"string"==typeof t.valueOf()&&!isNaN(Date.parse(t))))throw new Error(`${a} must be an instanceof Date or a string in ISO8601 format.`);t=t instanceof Date?t.toISOString().substring(0,10):new Date(t).toISOString().substring(0,10)}else if(null!==e.match(/^DateTime$/i)){if(!(t instanceof Date||"string"==typeof t.valueOf()&&!isNaN(Date.parse(t))))throw new Error(`${a} must be an instanceof Date or a string in ISO8601 format.`);t=t instanceof Date?t.toISOString():new Date(t).toISOString()}else if(null!==e.match(/^DateTimeRfc1123$/i)){if(!(t instanceof Date||"string"==typeof t.valueOf()&&!isNaN(Date.parse(t))))throw new Error(`${a} must be an instanceof Date or a string in RFC-1123 format.`);t=t instanceof Date?t.toUTCString():new Date(t).toUTCString()}else if(null!==e.match(/^UnixTime$/i)){if(!(t instanceof Date||"string"==typeof t.valueOf()&&!isNaN(Date.parse(t))))throw new Error(`${a} must be an instanceof Date or a string in RFC-1123/ISO8601 format for it to be serialized in UnixTime/Epoch format.`);t=function(e){if(e)return"string"==typeof e.valueOf()&&(e=new Date(e)),Math.floor(e.getTime()/1e3)}(t)}else if(null!==e.match(/^TimeSpan$/i)&&!function(e){return f.test(e)}(t))throw new Error(`${a} must be a string in ISO 8601 format. Instead was "${t}".`);return t}(c,t,a):null!==c.match(/^ByteArray$/i)?d=function(e,t){let a="";if(null!=t){if(!(t instanceof Uint8Array))throw new Error(`${e} must be of type Uint8Array.`);a=we(t)}return a}(a,t):null!==c.match(/^Base64Url$/i)?d=function(e,t){let a="";if(null!=t){if(!(t instanceof Uint8Array))throw new Error(`${e} must be of type Uint8Array.`);a=function(e){if(e){if(!(e instanceof Uint8Array))throw new Error("Please provide an input of type Uint8Array for converting to Base64Url.");return function(e,t){let a=e.length;for(;a-1>=0&&"="===e[a-1];)--a;return e.substr(0,a)}(we(e)).replace(/\+/g,"-").replace(/\//g,"_")}}(t)||""}return a}(a,t):null!==c.match(/^Sequence$/i)?d=function(e,t,a,r,s,n){if(!Array.isArray(a))throw new Error(`${r} must be of type Array.`);const i=t.type.element;if(!i||"object"!=typeof i)throw new Error(`element" metadata for an Array must be defined in the mapper and it must of type "object" in ${r}.`);const m=[];for(let t=0;t<a.length;t++){const l=e.serialize(i,a[t],r,n);if(s&&i.xmlNamespace){const e=i.xmlNamespacePrefix?`xmlns:${i.xmlNamespacePrefix}`:"xmlns";"Composite"===i.type.name?(m[t]=Object.assign({},l),m[t][o]={[e]:i.xmlNamespace}):(m[t]={},m[t][n.xmlCharKey]=l,m[t][o]={[e]:i.xmlNamespace})}else m[t]=l}return m}(this,e,t,a,Boolean(this.isXML),l):null!==c.match(/^Dictionary$/i)?d=function(e,t,a,r,s,n){if("object"!=typeof a)throw new Error(`${r} must be of type object.`);const i=t.type.value;if(!i||"object"!=typeof i)throw new Error(`"value" metadata for a Dictionary must be defined in the mapper and it must of type "object" in ${r}.`);const m={};for(const t of Object.keys(a)){const o=e.serialize(i,a[t],r,n);m[t]=Me(i,o,s,n)}if(s&&t.xmlNamespace){const e=t.xmlNamespacePrefix?`xmlns:${t.xmlNamespacePrefix}`:"xmlns",a=m;return a[o]={[e]:t.xmlNamespace},a}return m}(this,e,t,a,Boolean(this.isXML),l):null!==c.match(/^Composite$/i)&&(d=function(e,t,a,r,s,n){if(Ae(e,t)&&(t=He(e,t,a,"clientName")),null!=a){const i={},m=Te(e,t,r);for(const l of Object.keys(m)){const d=m[l];if(d.readOnly)continue;let c,p=i;if(e.isXML)c=d.xmlIsWrapped?d.xmlName:d.xmlElementName||d.xmlName;else{const e=qe(d.serializedName);c=e.pop();for(const t of e)null!=p[t]||null==a[l]&&void 0===d.defaultValue||(p[t]={}),p=p[t]}if(null!=p){if(s&&t.xmlNamespace){const e=t.xmlNamespacePrefix?`xmlns:${t.xmlNamespacePrefix}`:"xmlns";p[o]=Object.assign(Object.assign({},p[o]),{[e]:t.xmlNamespace})}const i=""!==d.serializedName?r+"."+d.serializedName:r;let m=a[l];const u=Ae(e,t);u&&u.clientName===l&&null==m&&(m=t.serializedName);const y=e.serialize(d,m,i,n);if(void 0!==y&&null!=c){const e=Me(d,y,s,n);s&&d.xmlIsAttribute?(p[o]=p[o]||{},p[o][c]=y):s&&d.xmlIsWrapped?p[c]={[d.xmlElementName]:e}:p[c]=e}}}const l=function(e,t,a){const r=t.type.additionalProperties;if(!r&&t.type.className){const r=Be(e,t,a);return null==r?void 0:r.type.additionalProperties}return r}(e,t,r);if(l){const t=Object.keys(m);for(const s in a)t.every((e=>e!==s))&&(i[s]=e.serialize(l,a[s],r+'["'+s+'"]',n))}return i}return a}(this,e,t,a,Boolean(this.isXML),l)),d}deserialize(e,t,a,r={}){var s,n,i;const l={rootName:null!==(s=r.rootName)&&void 0!==s?s:"",includeRoot:null!==(n=r.includeRoot)&&void 0!==n&&n,xmlCharKey:null!==(i=r.xmlCharKey)&&void 0!==i?i:m};if(null==t)return this.isXML&&"Sequence"===e.type.name&&!e.xmlIsWrapped&&(t=[]),void 0!==e.defaultValue&&(t=e.defaultValue),t;let d;const c=e.type.name;if(a||(a=e.serializedName),null!==c.match(/^Composite$/i))d=function(e,t,a,r,s){var n,i;const l=null!==(n=s.xmlCharKey)&&void 0!==n?n:m;Ae(e,t)&&(t=He(e,t,a,"serializedName"));const d=Te(e,t,r);let c={};const p=[];for(const n of Object.keys(d)){const m=d[n],u=qe(d[n].serializedName);p.push(u[0]);const{serializedName:y,xmlName:g,xmlElementName:h}=m;let x=r;""!==y&&void 0!==y&&(x=r+"."+y);const b=m.headerCollectionPrefix;if(b){const t={};for(const r of Object.keys(a))r.startsWith(b)&&(t[r.substring(b.length)]=e.deserialize(m.type.value,a[r],x,s)),p.push(r);c[n]=t}else if(e.isXML)if(m.xmlIsAttribute&&a[o])c[n]=e.deserialize(m,a[o][g],x,s);else if(m.xmlIsMsText)void 0!==a[l]?c[n]=a[l]:"string"==typeof a&&(c[n]=a);else{const t=h||g||y;if(m.xmlIsWrapped){const t=a[g],r=null!==(i=null==t?void 0:t[h])&&void 0!==i?i:[];c[n]=e.deserialize(m,r,x,s)}else{const r=a[t];c[n]=e.deserialize(m,r,x,s)}}else{let r,i=a;for(const e of u){if(!i)break;i=i[e]}r=i;const o=t.type.polymorphicDiscriminator;let l;if(o&&n===o.clientName&&null==r&&(r=t.serializedName),Array.isArray(a[n])&&""===d[n].serializedName){r=a[n];const t=e.deserialize(m,r,x,s);for(const[e,a]of Object.entries(c))Object.prototype.hasOwnProperty.call(t,e)||(t[e]=a);c=t}else void 0===r&&void 0===m.defaultValue||(l=e.deserialize(m,r,x,s),c[n]=l)}}const u=t.type.additionalProperties;if(u){const t=e=>{for(const t in d)if(qe(d[t].serializedName)[0]===e)return!1;return!0};for(const n in a)t(n)&&(c[n]=e.deserialize(u,a[n],r+'["'+n+'"]',s))}else if(a)for(const e of Object.keys(a))void 0!==c[e]||p.includes(e)||Ie(e,s)||(c[e]=a[e]);return c}(this,e,t,a,l);else{if(this.isXML){const e=l.xmlCharKey,a=t;null!=a[o]&&null!=a[e]&&(t=a[e])}null!==c.match(/^Number$/i)?(d=parseFloat(t),isNaN(d)&&(d=t)):null!==c.match(/^Boolean$/i)?d="true"===t||"false"!==t&&t:null!==c.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i)?d=t:null!==c.match(/^(Date|DateTime|DateTimeRfc1123)$/i)?d=new Date(t):null!==c.match(/^UnixTime$/i)?d=function(e){if(e)return new Date(1e3*e)}(t):null!==c.match(/^ByteArray$/i)?d=Oe(t):null!==c.match(/^Base64Url$/i)?d=function(e){if(e){if(e&&"string"!=typeof e.valueOf())throw new Error("Please provide an input of type string for converting to Uint8Array");return Oe(e=e.replace(/-/g,"+").replace(/_/g,"/"))}}(t):null!==c.match(/^Sequence$/i)?d=function(e,t,a,r,s){const n=t.type.element;if(!n||"object"!=typeof n)throw new Error(`element" metadata for an Array must be defined in the mapper and it must of type "object" in ${r}`);if(a){Array.isArray(a)||(a=[a]);const t=[];for(let i=0;i<a.length;i++)t[i]=e.deserialize(n,a[i],`${r}[${i}]`,s);return t}return a}(this,e,t,a,l):null!==c.match(/^Dictionary$/i)&&(d=function(e,t,a,r,s){const n=t.type.value;if(!n||"object"!=typeof n)throw new Error(`"value" metadata for a Dictionary must be defined in the mapper and it must of type "object" in ${r}`);if(a){const t={};for(const i of Object.keys(a))t[i]=e.deserialize(n,a[i],r,s);return t}return a}(this,e,t,a,l))}return e.isConstant&&(d=e.defaultValue),d}}function qe(e){const t=[];let a="";if(e){const r=e.split(".");for(const e of r)"\\"===e.charAt(e.length-1)?a+=e.substr(0,e.length-1)+".":(a+=e,t.push(a),a="")}return t}function Be(e,t,a){const r=t.type.className;if(!r)throw new Error(`Class name for model "${a}" is not provided in the mapper "${JSON.stringify(t,void 0,2)}".`);return e.modelMappers[r]}function Te(e,t,a){let r=t.type.modelProperties;if(!r){const s=Be(e,t,a);if(!s)throw new Error(`mapper() cannot be null or undefined for model "${t.type.className}".`);if(r=null==s?void 0:s.type.modelProperties,!r)throw new Error(`modelProperties cannot be null or undefined in the mapper "${JSON.stringify(s)}" of type "${t.type.className}" for object "${a}".`)}return r}function Me(e,t,a,r){if(!a||!e.xmlNamespace)return t;const s={[e.xmlNamespacePrefix?`xmlns:${e.xmlNamespacePrefix}`:"xmlns"]:e.xmlNamespace};if(["Composite"].includes(e.type.name)){if(t[o])return t;{const e=Object.assign({},t);return e[o]=s,e}}const n={};return n[r.xmlCharKey]=t,n[o]=s,n}function Ie(e,t){return[o,t.xmlCharKey].includes(e)}function He(e,t,a,r){const s=Ae(e,t);if(s){const n=s[r];if(null!=n){const r=a[n];if(null!=r){const a=t.type.uberParent||t.type.className,s=r===a?r:a+"."+r,n=e.modelMappers.discriminators[s];n&&(t=n)}}}return t}function Ae(e,t){return t.type.polymorphicDiscriminator||ke(e,t.type.uberParent)||ke(e,t.type.className)}function ke(e,t){return t&&e.modelMappers[t]&&e.modelMappers[t].type.polymorphicDiscriminator}const De=function(e){const t={};for(const e of["Base64Url","Boolean","ByteArray","Composite","Date","DateTime","DateTimeRfc1123","Dictionary","Enum","Number","Object","Sequence","String","Stream","TimeSpan","UnixTime"])t[e]=e;return t}(),Le={serializedName:"BlobServiceProperties",xmlName:"StorageServiceProperties",type:{name:"Composite",className:"BlobServiceProperties",modelProperties:{blobAnalyticsLogging:{serializedName:"Logging",xmlName:"Logging",type:{name:"Composite",className:"Logging"}},hourMetrics:{serializedName:"HourMetrics",xmlName:"HourMetrics",type:{name:"Composite",className:"Metrics"}},minuteMetrics:{serializedName:"MinuteMetrics",xmlName:"MinuteMetrics",type:{name:"Composite",className:"Metrics"}},cors:{serializedName:"Cors",xmlName:"Cors",xmlIsWrapped:!0,xmlElementName:"CorsRule",type:{name:"Sequence",element:{type:{name:"Composite",className:"CorsRule"}}}},defaultServiceVersion:{serializedName:"DefaultServiceVersion",xmlName:"DefaultServiceVersion",type:{name:"String"}},deleteRetentionPolicy:{serializedName:"DeleteRetentionPolicy",xmlName:"DeleteRetentionPolicy",type:{name:"Composite",className:"RetentionPolicy"}},staticWebsite:{serializedName:"StaticWebsite",xmlName:"StaticWebsite",type:{name:"Composite",className:"StaticWebsite"}}}}},_e={serializedName:"Logging",type:{name:"Composite",className:"Logging",modelProperties:{version:{serializedName:"Version",required:!0,xmlName:"Version",type:{name:"String"}},deleteProperty:{serializedName:"Delete",required:!0,xmlName:"Delete",type:{name:"Boolean"}},read:{serializedName:"Read",required:!0,xmlName:"Read",type:{name:"Boolean"}},write:{serializedName:"Write",required:!0,xmlName:"Write",type:{name:"Boolean"}},retentionPolicy:{serializedName:"RetentionPolicy",xmlName:"RetentionPolicy",type:{name:"Composite",className:"RetentionPolicy"}}}}},je={serializedName:"RetentionPolicy",type:{name:"Composite",className:"RetentionPolicy",modelProperties:{enabled:{serializedName:"Enabled",required:!0,xmlName:"Enabled",type:{name:"Boolean"}},days:{constraints:{InclusiveMinimum:1},serializedName:"Days",xmlName:"Days",type:{name:"Number"}}}}},Ue={serializedName:"Metrics",type:{name:"Composite",className:"Metrics",modelProperties:{version:{serializedName:"Version",xmlName:"Version",type:{name:"String"}},enabled:{serializedName:"Enabled",required:!0,xmlName:"Enabled",type:{name:"Boolean"}},includeAPIs:{serializedName:"IncludeAPIs",xmlName:"IncludeAPIs",type:{name:"Boolean"}},retentionPolicy:{serializedName:"RetentionPolicy",xmlName:"RetentionPolicy",type:{name:"Composite",className:"RetentionPolicy"}}}}},Ve={serializedName:"CorsRule",type:{name:"Composite",className:"CorsRule",modelProperties:{allowedOrigins:{serializedName:"AllowedOrigins",required:!0,xmlName:"AllowedOrigins",type:{name:"String"}},allowedMethods:{serializedName:"AllowedMethods",required:!0,xmlName:"AllowedMethods",type:{name:"String"}},allowedHeaders:{serializedName:"AllowedHeaders",required:!0,xmlName:"AllowedHeaders",type:{name:"String"}},exposedHeaders:{serializedName:"ExposedHeaders",required:!0,xmlName:"ExposedHeaders",type:{name:"String"}},maxAgeInSeconds:{constraints:{InclusiveMinimum:0},serializedName:"MaxAgeInSeconds",required:!0,xmlName:"MaxAgeInSeconds",type:{name:"Number"}}}}},Fe={serializedName:"StaticWebsite",type:{name:"Composite",className:"StaticWebsite",modelProperties:{enabled:{serializedName:"Enabled",required:!0,xmlName:"Enabled",type:{name:"Boolean"}},indexDocument:{serializedName:"IndexDocument",xmlName:"IndexDocument",type:{name:"String"}},errorDocument404Path:{serializedName:"ErrorDocument404Path",xmlName:"ErrorDocument404Path",type:{name:"String"}},defaultIndexDocumentPath:{serializedName:"DefaultIndexDocumentPath",xmlName:"DefaultIndexDocumentPath",type:{name:"String"}}}}},$e={serializedName:"StorageError",type:{name:"Composite",className:"StorageError",modelProperties:{message:{serializedName:"Message",xmlName:"Message",type:{name:"String"}},code:{serializedName:"Code",xmlName:"Code",type:{name:"String"}}}}},Ke={serializedName:"BlobServiceStatistics",xmlName:"StorageServiceStats",type:{name:"Composite",className:"BlobServiceStatistics",modelProperties:{geoReplication:{serializedName:"GeoReplication",xmlName:"GeoReplication",type:{name:"Composite",className:"GeoReplication"}}}}},Ge={serializedName:"GeoReplication",type:{name:"Composite",className:"GeoReplication",modelProperties:{status:{serializedName:"Status",required:!0,xmlName:"Status",type:{name:"Enum",allowedValues:["live","bootstrap","unavailable"]}},lastSyncOn:{serializedName:"LastSyncTime",required:!0,xmlName:"LastSyncTime",type:{name:"DateTimeRfc1123"}}}}},Qe={serializedName:"ListContainersSegmentResponse",xmlName:"EnumerationResults",type:{name:"Composite",className:"ListContainersSegmentResponse",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},prefix:{serializedName:"Prefix",xmlName:"Prefix",type:{name:"String"}},marker:{serializedName:"Marker",xmlName:"Marker",type:{name:"String"}},maxPageSize:{serializedName:"MaxResults",xmlName:"MaxResults",type:{name:"Number"}},containerItems:{serializedName:"ContainerItems",required:!0,xmlName:"Containers",xmlIsWrapped:!0,xmlElementName:"Container",type:{name:"Sequence",element:{type:{name:"Composite",className:"ContainerItem"}}}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},Xe={serializedName:"ContainerItem",xmlName:"Container",type:{name:"Composite",className:"ContainerItem",modelProperties:{name:{serializedName:"Name",required:!0,xmlName:"Name",type:{name:"String"}},deleted:{serializedName:"Deleted",xmlName:"Deleted",type:{name:"Boolean"}},version:{serializedName:"Version",xmlName:"Version",type:{name:"String"}},properties:{serializedName:"Properties",xmlName:"Properties",type:{name:"Composite",className:"ContainerProperties"}},metadata:{serializedName:"Metadata",xmlName:"Metadata",type:{name:"Dictionary",value:{type:{name:"String"}}}}}}},We={serializedName:"ContainerProperties",type:{name:"Composite",className:"ContainerProperties",modelProperties:{lastModified:{serializedName:"Last-Modified",required:!0,xmlName:"Last-Modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"Etag",required:!0,xmlName:"Etag",type:{name:"String"}},leaseStatus:{serializedName:"LeaseStatus",xmlName:"LeaseStatus",type:{name:"Enum",allowedValues:["locked","unlocked"]}},leaseState:{serializedName:"LeaseState",xmlName:"LeaseState",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseDuration:{serializedName:"LeaseDuration",xmlName:"LeaseDuration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},publicAccess:{serializedName:"PublicAccess",xmlName:"PublicAccess",type:{name:"Enum",allowedValues:["container","blob"]}},hasImmutabilityPolicy:{serializedName:"HasImmutabilityPolicy",xmlName:"HasImmutabilityPolicy",type:{name:"Boolean"}},hasLegalHold:{serializedName:"HasLegalHold",xmlName:"HasLegalHold",type:{name:"Boolean"}},defaultEncryptionScope:{serializedName:"DefaultEncryptionScope",xmlName:"DefaultEncryptionScope",type:{name:"String"}},preventEncryptionScopeOverride:{serializedName:"DenyEncryptionScopeOverride",xmlName:"DenyEncryptionScopeOverride",type:{name:"Boolean"}},deletedOn:{serializedName:"DeletedTime",xmlName:"DeletedTime",type:{name:"DateTimeRfc1123"}},remainingRetentionDays:{serializedName:"RemainingRetentionDays",xmlName:"RemainingRetentionDays",type:{name:"Number"}},isImmutableStorageWithVersioningEnabled:{serializedName:"ImmutableStorageWithVersioningEnabled",xmlName:"ImmutableStorageWithVersioningEnabled",type:{name:"Boolean"}}}}},Je={serializedName:"KeyInfo",type:{name:"Composite",className:"KeyInfo",modelProperties:{startsOn:{serializedName:"Start",required:!0,xmlName:"Start",type:{name:"String"}},expiresOn:{serializedName:"Expiry",required:!0,xmlName:"Expiry",type:{name:"String"}}}}},Ye={serializedName:"UserDelegationKey",type:{name:"Composite",className:"UserDelegationKey",modelProperties:{signedObjectId:{serializedName:"SignedOid",required:!0,xmlName:"SignedOid",type:{name:"String"}},signedTenantId:{serializedName:"SignedTid",required:!0,xmlName:"SignedTid",type:{name:"String"}},signedStartsOn:{serializedName:"SignedStart",required:!0,xmlName:"SignedStart",type:{name:"String"}},signedExpiresOn:{serializedName:"SignedExpiry",required:!0,xmlName:"SignedExpiry",type:{name:"String"}},signedService:{serializedName:"SignedService",required:!0,xmlName:"SignedService",type:{name:"String"}},signedVersion:{serializedName:"SignedVersion",required:!0,xmlName:"SignedVersion",type:{name:"String"}},value:{serializedName:"Value",required:!0,xmlName:"Value",type:{name:"String"}}}}},Ze={serializedName:"FilterBlobSegment",xmlName:"EnumerationResults",type:{name:"Composite",className:"FilterBlobSegment",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},where:{serializedName:"Where",required:!0,xmlName:"Where",type:{name:"String"}},blobs:{serializedName:"Blobs",required:!0,xmlName:"Blobs",xmlIsWrapped:!0,xmlElementName:"Blob",type:{name:"Sequence",element:{type:{name:"Composite",className:"FilterBlobItem"}}}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},et={serializedName:"FilterBlobItem",xmlName:"Blob",type:{name:"Composite",className:"FilterBlobItem",modelProperties:{name:{serializedName:"Name",required:!0,xmlName:"Name",type:{name:"String"}},containerName:{serializedName:"ContainerName",required:!0,xmlName:"ContainerName",type:{name:"String"}},tags:{serializedName:"Tags",xmlName:"Tags",type:{name:"Composite",className:"BlobTags"}}}}},tt={serializedName:"BlobTags",xmlName:"Tags",type:{name:"Composite",className:"BlobTags",modelProperties:{blobTagSet:{serializedName:"BlobTagSet",required:!0,xmlName:"TagSet",xmlIsWrapped:!0,xmlElementName:"Tag",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobTag"}}}}}}},at={serializedName:"BlobTag",xmlName:"Tag",type:{name:"Composite",className:"BlobTag",modelProperties:{key:{serializedName:"Key",required:!0,xmlName:"Key",type:{name:"String"}},value:{serializedName:"Value",required:!0,xmlName:"Value",type:{name:"String"}}}}},rt={serializedName:"SignedIdentifier",xmlName:"SignedIdentifier",type:{name:"Composite",className:"SignedIdentifier",modelProperties:{id:{serializedName:"Id",required:!0,xmlName:"Id",type:{name:"String"}},accessPolicy:{serializedName:"AccessPolicy",xmlName:"AccessPolicy",type:{name:"Composite",className:"AccessPolicy"}}}}},st={serializedName:"AccessPolicy",type:{name:"Composite",className:"AccessPolicy",modelProperties:{startsOn:{serializedName:"Start",xmlName:"Start",type:{name:"String"}},expiresOn:{serializedName:"Expiry",xmlName:"Expiry",type:{name:"String"}},permissions:{serializedName:"Permission",xmlName:"Permission",type:{name:"String"}}}}},nt={serializedName:"ListBlobsFlatSegmentResponse",xmlName:"EnumerationResults",type:{name:"Composite",className:"ListBlobsFlatSegmentResponse",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},containerName:{serializedName:"ContainerName",required:!0,xmlName:"ContainerName",xmlIsAttribute:!0,type:{name:"String"}},prefix:{serializedName:"Prefix",xmlName:"Prefix",type:{name:"String"}},marker:{serializedName:"Marker",xmlName:"Marker",type:{name:"String"}},maxPageSize:{serializedName:"MaxResults",xmlName:"MaxResults",type:{name:"Number"}},segment:{serializedName:"Segment",xmlName:"Blobs",type:{name:"Composite",className:"BlobFlatListSegment"}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},it={serializedName:"BlobFlatListSegment",xmlName:"Blobs",type:{name:"Composite",className:"BlobFlatListSegment",modelProperties:{blobItems:{serializedName:"BlobItems",required:!0,xmlName:"BlobItems",xmlElementName:"Blob",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobItemInternal"}}}}}}},ot={serializedName:"BlobItemInternal",xmlName:"Blob",type:{name:"Composite",className:"BlobItemInternal",modelProperties:{name:{serializedName:"Name",xmlName:"Name",type:{name:"Composite",className:"BlobName"}},deleted:{serializedName:"Deleted",required:!0,xmlName:"Deleted",type:{name:"Boolean"}},snapshot:{serializedName:"Snapshot",required:!0,xmlName:"Snapshot",type:{name:"String"}},versionId:{serializedName:"VersionId",xmlName:"VersionId",type:{name:"String"}},isCurrentVersion:{serializedName:"IsCurrentVersion",xmlName:"IsCurrentVersion",type:{name:"Boolean"}},properties:{serializedName:"Properties",xmlName:"Properties",type:{name:"Composite",className:"BlobPropertiesInternal"}},metadata:{serializedName:"Metadata",xmlName:"Metadata",type:{name:"Dictionary",value:{type:{name:"String"}}}},blobTags:{serializedName:"BlobTags",xmlName:"Tags",type:{name:"Composite",className:"BlobTags"}},objectReplicationMetadata:{serializedName:"ObjectReplicationMetadata",xmlName:"OrMetadata",type:{name:"Dictionary",value:{type:{name:"String"}}}},hasVersionsOnly:{serializedName:"HasVersionsOnly",xmlName:"HasVersionsOnly",type:{name:"Boolean"}}}}},mt={serializedName:"BlobName",type:{name:"Composite",className:"BlobName",modelProperties:{encoded:{serializedName:"Encoded",xmlName:"Encoded",xmlIsAttribute:!0,type:{name:"Boolean"}},content:{serializedName:"content",xmlName:"content",type:{name:"String"}}}}},lt={serializedName:"BlobPropertiesInternal",xmlName:"Properties",type:{name:"Composite",className:"BlobPropertiesInternal",modelProperties:{createdOn:{serializedName:"Creation-Time",xmlName:"Creation-Time",type:{name:"DateTimeRfc1123"}},lastModified:{serializedName:"Last-Modified",required:!0,xmlName:"Last-Modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"Etag",required:!0,xmlName:"Etag",type:{name:"String"}},contentLength:{serializedName:"Content-Length",xmlName:"Content-Length",type:{name:"Number"}},contentType:{serializedName:"Content-Type",xmlName:"Content-Type",type:{name:"String"}},contentEncoding:{serializedName:"Content-Encoding",xmlName:"Content-Encoding",type:{name:"String"}},contentLanguage:{serializedName:"Content-Language",xmlName:"Content-Language",type:{name:"String"}},contentMD5:{serializedName:"Content-MD5",xmlName:"Content-MD5",type:{name:"ByteArray"}},contentDisposition:{serializedName:"Content-Disposition",xmlName:"Content-Disposition",type:{name:"String"}},cacheControl:{serializedName:"Cache-Control",xmlName:"Cache-Control",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},blobType:{serializedName:"BlobType",xmlName:"BlobType",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},leaseStatus:{serializedName:"LeaseStatus",xmlName:"LeaseStatus",type:{name:"Enum",allowedValues:["locked","unlocked"]}},leaseState:{serializedName:"LeaseState",xmlName:"LeaseState",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseDuration:{serializedName:"LeaseDuration",xmlName:"LeaseDuration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},copyId:{serializedName:"CopyId",xmlName:"CopyId",type:{name:"String"}},copyStatus:{serializedName:"CopyStatus",xmlName:"CopyStatus",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},copySource:{serializedName:"CopySource",xmlName:"CopySource",type:{name:"String"}},copyProgress:{serializedName:"CopyProgress",xmlName:"CopyProgress",type:{name:"String"}},copyCompletedOn:{serializedName:"CopyCompletionTime",xmlName:"CopyCompletionTime",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"CopyStatusDescription",xmlName:"CopyStatusDescription",type:{name:"String"}},serverEncrypted:{serializedName:"ServerEncrypted",xmlName:"ServerEncrypted",type:{name:"Boolean"}},incrementalCopy:{serializedName:"IncrementalCopy",xmlName:"IncrementalCopy",type:{name:"Boolean"}},destinationSnapshot:{serializedName:"DestinationSnapshot",xmlName:"DestinationSnapshot",type:{name:"String"}},deletedOn:{serializedName:"DeletedTime",xmlName:"DeletedTime",type:{name:"DateTimeRfc1123"}},remainingRetentionDays:{serializedName:"RemainingRetentionDays",xmlName:"RemainingRetentionDays",type:{name:"Number"}},accessTier:{serializedName:"AccessTier",xmlName:"AccessTier",type:{name:"Enum",allowedValues:["P4","P6","P10","P15","P20","P30","P40","P50","P60","P70","P80","Hot","Cool","Archive"]}},accessTierInferred:{serializedName:"AccessTierInferred",xmlName:"AccessTierInferred",type:{name:"Boolean"}},archiveStatus:{serializedName:"ArchiveStatus",xmlName:"ArchiveStatus",type:{name:"Enum",allowedValues:["rehydrate-pending-to-hot","rehydrate-pending-to-cool"]}},customerProvidedKeySha256:{serializedName:"CustomerProvidedKeySha256",xmlName:"CustomerProvidedKeySha256",type:{name:"String"}},encryptionScope:{serializedName:"EncryptionScope",xmlName:"EncryptionScope",type:{name:"String"}},accessTierChangedOn:{serializedName:"AccessTierChangeTime",xmlName:"AccessTierChangeTime",type:{name:"DateTimeRfc1123"}},tagCount:{serializedName:"TagCount",xmlName:"TagCount",type:{name:"Number"}},expiresOn:{serializedName:"Expiry-Time",xmlName:"Expiry-Time",type:{name:"DateTimeRfc1123"}},isSealed:{serializedName:"Sealed",xmlName:"Sealed",type:{name:"Boolean"}},rehydratePriority:{serializedName:"RehydratePriority",xmlName:"RehydratePriority",type:{name:"Enum",allowedValues:["High","Standard"]}},lastAccessedOn:{serializedName:"LastAccessTime",xmlName:"LastAccessTime",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiresOn:{serializedName:"ImmutabilityPolicyUntilDate",xmlName:"ImmutabilityPolicyUntilDate",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"ImmutabilityPolicyMode",xmlName:"ImmutabilityPolicyMode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}},legalHold:{serializedName:"LegalHold",xmlName:"LegalHold",type:{name:"Boolean"}}}}},dt={serializedName:"ListBlobsHierarchySegmentResponse",xmlName:"EnumerationResults",type:{name:"Composite",className:"ListBlobsHierarchySegmentResponse",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},containerName:{serializedName:"ContainerName",required:!0,xmlName:"ContainerName",xmlIsAttribute:!0,type:{name:"String"}},prefix:{serializedName:"Prefix",xmlName:"Prefix",type:{name:"String"}},marker:{serializedName:"Marker",xmlName:"Marker",type:{name:"String"}},maxPageSize:{serializedName:"MaxResults",xmlName:"MaxResults",type:{name:"Number"}},delimiter:{serializedName:"Delimiter",xmlName:"Delimiter",type:{name:"String"}},segment:{serializedName:"Segment",xmlName:"Blobs",type:{name:"Composite",className:"BlobHierarchyListSegment"}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},ct={serializedName:"BlobHierarchyListSegment",xmlName:"Blobs",type:{name:"Composite",className:"BlobHierarchyListSegment",modelProperties:{blobPrefixes:{serializedName:"BlobPrefixes",xmlName:"BlobPrefixes",xmlElementName:"BlobPrefix",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobPrefix"}}}},blobItems:{serializedName:"BlobItems",required:!0,xmlName:"BlobItems",xmlElementName:"Blob",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobItemInternal"}}}}}}},pt={serializedName:"BlobPrefix",type:{name:"Composite",className:"BlobPrefix",modelProperties:{name:{serializedName:"Name",xmlName:"Name",type:{name:"Composite",className:"BlobName"}}}}},ut={serializedName:"BlockLookupList",xmlName:"BlockList",type:{name:"Composite",className:"BlockLookupList",modelProperties:{committed:{serializedName:"Committed",xmlName:"Committed",xmlElementName:"Committed",type:{name:"Sequence",element:{type:{name:"String"}}}},uncommitted:{serializedName:"Uncommitted",xmlName:"Uncommitted",xmlElementName:"Uncommitted",type:{name:"Sequence",element:{type:{name:"String"}}}},latest:{serializedName:"Latest",xmlName:"Latest",xmlElementName:"Latest",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},yt={serializedName:"BlockList",type:{name:"Composite",className:"BlockList",modelProperties:{committedBlocks:{serializedName:"CommittedBlocks",xmlName:"CommittedBlocks",xmlIsWrapped:!0,xmlElementName:"Block",type:{name:"Sequence",element:{type:{name:"Composite",className:"Block"}}}},uncommittedBlocks:{serializedName:"UncommittedBlocks",xmlName:"UncommittedBlocks",xmlIsWrapped:!0,xmlElementName:"Block",type:{name:"Sequence",element:{type:{name:"Composite",className:"Block"}}}}}}},gt={serializedName:"Block",type:{name:"Composite",className:"Block",modelProperties:{name:{serializedName:"Name",required:!0,xmlName:"Name",type:{name:"String"}},size:{serializedName:"Size",required:!0,xmlName:"Size",type:{name:"Number"}}}}},ht={serializedName:"PageList",type:{name:"Composite",className:"PageList",modelProperties:{pageRange:{serializedName:"PageRange",xmlName:"PageRange",xmlElementName:"PageRange",type:{name:"Sequence",element:{type:{name:"Composite",className:"PageRange"}}}},clearRange:{serializedName:"ClearRange",xmlName:"ClearRange",xmlElementName:"ClearRange",type:{name:"Sequence",element:{type:{name:"Composite",className:"ClearRange"}}}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},xt={serializedName:"PageRange",xmlName:"PageRange",type:{name:"Composite",className:"PageRange",modelProperties:{start:{serializedName:"Start",required:!0,xmlName:"Start",type:{name:"Number"}},end:{serializedName:"End",required:!0,xmlName:"End",type:{name:"Number"}}}}},bt={serializedName:"ClearRange",xmlName:"ClearRange",type:{name:"Composite",className:"ClearRange",modelProperties:{start:{serializedName:"Start",required:!0,xmlName:"Start",type:{name:"Number"}},end:{serializedName:"End",required:!0,xmlName:"End",type:{name:"Number"}}}}},Nt={serializedName:"QueryRequest",xmlName:"QueryRequest",type:{name:"Composite",className:"QueryRequest",modelProperties:{queryType:{serializedName:"QueryType",required:!0,xmlName:"QueryType",type:{name:"String"}},expression:{serializedName:"Expression",required:!0,xmlName:"Expression",type:{name:"String"}},inputSerialization:{serializedName:"InputSerialization",xmlName:"InputSerialization",type:{name:"Composite",className:"QuerySerialization"}},outputSerialization:{serializedName:"OutputSerialization",xmlName:"OutputSerialization",type:{name:"Composite",className:"QuerySerialization"}}}}},ft={serializedName:"QuerySerialization",type:{name:"Composite",className:"QuerySerialization",modelProperties:{format:{serializedName:"Format",xmlName:"Format",type:{name:"Composite",className:"QueryFormat"}}}}},St={serializedName:"QueryFormat",type:{name:"Composite",className:"QueryFormat",modelProperties:{type:{serializedName:"Type",required:!0,xmlName:"Type",type:{name:"Enum",allowedValues:["delimited","json","arrow","parquet"]}},delimitedTextConfiguration:{serializedName:"DelimitedTextConfiguration",xmlName:"DelimitedTextConfiguration",type:{name:"Composite",className:"DelimitedTextConfiguration"}},jsonTextConfiguration:{serializedName:"JsonTextConfiguration",xmlName:"JsonTextConfiguration",type:{name:"Composite",className:"JsonTextConfiguration"}},arrowConfiguration:{serializedName:"ArrowConfiguration",xmlName:"ArrowConfiguration",type:{name:"Composite",className:"ArrowConfiguration"}},parquetTextConfiguration:{serializedName:"ParquetTextConfiguration",xmlName:"ParquetTextConfiguration",type:{name:"any"}}}}},vt={serializedName:"DelimitedTextConfiguration",xmlName:"DelimitedTextConfiguration",type:{name:"Composite",className:"DelimitedTextConfiguration",modelProperties:{columnSeparator:{serializedName:"ColumnSeparator",xmlName:"ColumnSeparator",type:{name:"String"}},fieldQuote:{serializedName:"FieldQuote",xmlName:"FieldQuote",type:{name:"String"}},recordSeparator:{serializedName:"RecordSeparator",xmlName:"RecordSeparator",type:{name:"String"}},escapeChar:{serializedName:"EscapeChar",xmlName:"EscapeChar",type:{name:"String"}},headersPresent:{serializedName:"HeadersPresent",xmlName:"HasHeaders",type:{name:"Boolean"}}}}},Ct={serializedName:"JsonTextConfiguration",xmlName:"JsonTextConfiguration",type:{name:"Composite",className:"JsonTextConfiguration",modelProperties:{recordSeparator:{serializedName:"RecordSeparator",xmlName:"RecordSeparator",type:{name:"String"}}}}},Pt={serializedName:"ArrowConfiguration",xmlName:"ArrowConfiguration",type:{name:"Composite",className:"ArrowConfiguration",modelProperties:{schema:{serializedName:"Schema",required:!0,xmlName:"Schema",xmlIsWrapped:!0,xmlElementName:"Field",type:{name:"Sequence",element:{type:{name:"Composite",className:"ArrowField"}}}}}}},zt={serializedName:"ArrowField",xmlName:"Field",type:{name:"Composite",className:"ArrowField",modelProperties:{type:{serializedName:"Type",required:!0,xmlName:"Type",type:{name:"String"}},name:{serializedName:"Name",xmlName:"Name",type:{name:"String"}},precision:{serializedName:"Precision",xmlName:"Precision",type:{name:"Number"}},scale:{serializedName:"Scale",xmlName:"Scale",type:{name:"Number"}}}}},Rt={serializedName:"Service_setPropertiesHeaders",type:{name:"Composite",className:"ServiceSetPropertiesHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},wt={serializedName:"Service_setPropertiesExceptionHeaders",type:{name:"Composite",className:"ServiceSetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ot={serializedName:"Service_getPropertiesHeaders",type:{name:"Composite",className:"ServiceGetPropertiesHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Et={serializedName:"Service_getPropertiesExceptionHeaders",type:{name:"Composite",className:"ServiceGetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},qt={serializedName:"Service_getStatisticsHeaders",type:{name:"Composite",className:"ServiceGetStatisticsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Bt={serializedName:"Service_getStatisticsExceptionHeaders",type:{name:"Composite",className:"ServiceGetStatisticsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Tt={serializedName:"Service_listContainersSegmentHeaders",type:{name:"Composite",className:"ServiceListContainersSegmentHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Mt={serializedName:"Service_listContainersSegmentExceptionHeaders",type:{name:"Composite",className:"ServiceListContainersSegmentExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},It={serializedName:"Service_getUserDelegationKeyHeaders",type:{name:"Composite",className:"ServiceGetUserDelegationKeyHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ht={serializedName:"Service_getUserDelegationKeyExceptionHeaders",type:{name:"Composite",className:"ServiceGetUserDelegationKeyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},At={serializedName:"Service_getAccountInfoHeaders",type:{name:"Composite",className:"ServiceGetAccountInfoHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},skuName:{serializedName:"x-ms-sku-name",xmlName:"x-ms-sku-name",type:{name:"Enum",allowedValues:["Standard_LRS","Standard_GRS","Standard_RAGRS","Standard_ZRS","Premium_LRS"]}},accountKind:{serializedName:"x-ms-account-kind",xmlName:"x-ms-account-kind",type:{name:"Enum",allowedValues:["Storage","BlobStorage","StorageV2","FileStorage","BlockBlobStorage"]}},isHierarchicalNamespaceEnabled:{serializedName:"x-ms-is-hns-enabled",xmlName:"x-ms-is-hns-enabled",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},kt={serializedName:"Service_getAccountInfoExceptionHeaders",type:{name:"Composite",className:"ServiceGetAccountInfoExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Dt={serializedName:"Service_submitBatchHeaders",type:{name:"Composite",className:"ServiceSubmitBatchHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Lt={serializedName:"Service_submitBatchExceptionHeaders",type:{name:"Composite",className:"ServiceSubmitBatchExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},_t={serializedName:"Service_filterBlobsHeaders",type:{name:"Composite",className:"ServiceFilterBlobsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},jt={serializedName:"Service_filterBlobsExceptionHeaders",type:{name:"Composite",className:"ServiceFilterBlobsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ut={serializedName:"Container_createHeaders",type:{name:"Composite",className:"ContainerCreateHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Vt={serializedName:"Container_createExceptionHeaders",type:{name:"Composite",className:"ContainerCreateExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ft={serializedName:"Container_getPropertiesHeaders",type:{name:"Composite",className:"ContainerGetPropertiesHeaders",modelProperties:{metadata:{serializedName:"x-ms-meta",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}},headerCollectionPrefix:"x-ms-meta-"},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobPublicAccess:{serializedName:"x-ms-blob-public-access",xmlName:"x-ms-blob-public-access",type:{name:"Enum",allowedValues:["container","blob"]}},hasImmutabilityPolicy:{serializedName:"x-ms-has-immutability-policy",xmlName:"x-ms-has-immutability-policy",type:{name:"Boolean"}},hasLegalHold:{serializedName:"x-ms-has-legal-hold",xmlName:"x-ms-has-legal-hold",type:{name:"Boolean"}},defaultEncryptionScope:{serializedName:"x-ms-default-encryption-scope",xmlName:"x-ms-default-encryption-scope",type:{name:"String"}},denyEncryptionScopeOverride:{serializedName:"x-ms-deny-encryption-scope-override",xmlName:"x-ms-deny-encryption-scope-override",type:{name:"Boolean"}},isImmutableStorageWithVersioningEnabled:{serializedName:"x-ms-immutable-storage-with-versioning-enabled",xmlName:"x-ms-immutable-storage-with-versioning-enabled",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},$t={serializedName:"Container_getPropertiesExceptionHeaders",type:{name:"Composite",className:"ContainerGetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Kt={serializedName:"Container_deleteHeaders",type:{name:"Composite",className:"ContainerDeleteHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Gt={serializedName:"Container_deleteExceptionHeaders",type:{name:"Composite",className:"ContainerDeleteExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Qt={serializedName:"Container_setMetadataHeaders",type:{name:"Composite",className:"ContainerSetMetadataHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Xt={serializedName:"Container_setMetadataExceptionHeaders",type:{name:"Composite",className:"ContainerSetMetadataExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Wt={serializedName:"Container_getAccessPolicyHeaders",type:{name:"Composite",className:"ContainerGetAccessPolicyHeaders",modelProperties:{blobPublicAccess:{serializedName:"x-ms-blob-public-access",xmlName:"x-ms-blob-public-access",type:{name:"Enum",allowedValues:["container","blob"]}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Jt={serializedName:"Container_getAccessPolicyExceptionHeaders",type:{name:"Composite",className:"ContainerGetAccessPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Yt={serializedName:"Container_setAccessPolicyHeaders",type:{name:"Composite",className:"ContainerSetAccessPolicyHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Zt={serializedName:"Container_setAccessPolicyExceptionHeaders",type:{name:"Composite",className:"ContainerSetAccessPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ea={serializedName:"Container_restoreHeaders",type:{name:"Composite",className:"ContainerRestoreHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ta={serializedName:"Container_restoreExceptionHeaders",type:{name:"Composite",className:"ContainerRestoreExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},aa={serializedName:"Container_renameHeaders",type:{name:"Composite",className:"ContainerRenameHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ra={serializedName:"Container_renameExceptionHeaders",type:{name:"Composite",className:"ContainerRenameExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},sa={serializedName:"Container_submitBatchHeaders",type:{name:"Composite",className:"ContainerSubmitBatchHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}}}}},na={serializedName:"Container_submitBatchExceptionHeaders",type:{name:"Composite",className:"ContainerSubmitBatchExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ia={serializedName:"Container_filterBlobsHeaders",type:{name:"Composite",className:"ContainerFilterBlobsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},oa={serializedName:"Container_filterBlobsExceptionHeaders",type:{name:"Composite",className:"ContainerFilterBlobsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ma={serializedName:"Container_acquireLeaseHeaders",type:{name:"Composite",className:"ContainerAcquireLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},la={serializedName:"Container_acquireLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerAcquireLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},da={serializedName:"Container_releaseLeaseHeaders",type:{name:"Composite",className:"ContainerReleaseLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ca={serializedName:"Container_releaseLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerReleaseLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},pa={serializedName:"Container_renewLeaseHeaders",type:{name:"Composite",className:"ContainerRenewLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ua={serializedName:"Container_renewLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerRenewLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ya={serializedName:"Container_breakLeaseHeaders",type:{name:"Composite",className:"ContainerBreakLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseTime:{serializedName:"x-ms-lease-time",xmlName:"x-ms-lease-time",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ga={serializedName:"Container_breakLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerBreakLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ha={serializedName:"Container_changeLeaseHeaders",type:{name:"Composite",className:"ContainerChangeLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},xa={serializedName:"Container_changeLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerChangeLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ba={serializedName:"Container_listBlobFlatSegmentHeaders",type:{name:"Composite",className:"ContainerListBlobFlatSegmentHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Na={serializedName:"Container_listBlobFlatSegmentExceptionHeaders",type:{name:"Composite",className:"ContainerListBlobFlatSegmentExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},fa={serializedName:"Container_listBlobHierarchySegmentHeaders",type:{name:"Composite",className:"ContainerListBlobHierarchySegmentHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Sa={serializedName:"Container_listBlobHierarchySegmentExceptionHeaders",type:{name:"Composite",className:"ContainerListBlobHierarchySegmentExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},va={serializedName:"Container_getAccountInfoHeaders",type:{name:"Composite",className:"ContainerGetAccountInfoHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},skuName:{serializedName:"x-ms-sku-name",xmlName:"x-ms-sku-name",type:{name:"Enum",allowedValues:["Standard_LRS","Standard_GRS","Standard_RAGRS","Standard_ZRS","Premium_LRS"]}},accountKind:{serializedName:"x-ms-account-kind",xmlName:"x-ms-account-kind",type:{name:"Enum",allowedValues:["Storage","BlobStorage","StorageV2","FileStorage","BlockBlobStorage"]}}}}},Ca={serializedName:"Container_getAccountInfoExceptionHeaders",type:{name:"Composite",className:"ContainerGetAccountInfoExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Pa={serializedName:"Blob_downloadHeaders",type:{name:"Composite",className:"BlobDownloadHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},metadata:{serializedName:"x-ms-meta",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}},headerCollectionPrefix:"x-ms-meta-"},objectReplicationPolicyId:{serializedName:"x-ms-or-policy-id",xmlName:"x-ms-or-policy-id",type:{name:"String"}},objectReplicationRules:{serializedName:"x-ms-or",xmlName:"x-ms-or",type:{name:"Dictionary",value:{type:{name:"String"}}},headerCollectionPrefix:"x-ms-or-"},contentLength:{serializedName:"content-length",xmlName:"content-length",type:{name:"Number"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},contentRange:{serializedName:"content-range",xmlName:"content-range",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},contentEncoding:{serializedName:"content-encoding",xmlName:"content-encoding",type:{name:"String"}},cacheControl:{serializedName:"cache-control",xmlName:"cache-control",type:{name:"String"}},contentDisposition:{serializedName:"content-disposition",xmlName:"content-disposition",type:{name:"String"}},contentLanguage:{serializedName:"content-language",xmlName:"content-language",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},blobType:{serializedName:"x-ms-blob-type",xmlName:"x-ms-blob-type",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},copyCompletedOn:{serializedName:"x-ms-copy-completion-time",xmlName:"x-ms-copy-completion-time",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"x-ms-copy-status-description",xmlName:"x-ms-copy-status-description",type:{name:"String"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyProgress:{serializedName:"x-ms-copy-progress",xmlName:"x-ms-copy-progress",type:{name:"String"}},copySource:{serializedName:"x-ms-copy-source",xmlName:"x-ms-copy-source",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},isCurrentVersion:{serializedName:"x-ms-is-current-version",xmlName:"x-ms-is-current-version",type:{name:"Boolean"}},acceptRanges:{serializedName:"accept-ranges",xmlName:"accept-ranges",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-server-encrypted",xmlName:"x-ms-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},blobContentMD5:{serializedName:"x-ms-blob-content-md5",xmlName:"x-ms-blob-content-md5",type:{name:"ByteArray"}},tagCount:{serializedName:"x-ms-tag-count",xmlName:"x-ms-tag-count",type:{name:"Number"}},isSealed:{serializedName:"x-ms-blob-sealed",xmlName:"x-ms-blob-sealed",type:{name:"Boolean"}},lastAccessed:{serializedName:"x-ms-last-access-time",xmlName:"x-ms-last-access-time",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiresOn:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}},legalHold:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}},contentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}}}}},za={serializedName:"Blob_downloadExceptionHeaders",type:{name:"Composite",className:"BlobDownloadExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ra={serializedName:"Blob_getPropertiesHeaders",type:{name:"Composite",className:"BlobGetPropertiesHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},createdOn:{serializedName:"x-ms-creation-time",xmlName:"x-ms-creation-time",type:{name:"DateTimeRfc1123"}},metadata:{serializedName:"x-ms-meta",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}},headerCollectionPrefix:"x-ms-meta-"},objectReplicationPolicyId:{serializedName:"x-ms-or-policy-id",xmlName:"x-ms-or-policy-id",type:{name:"String"}},objectReplicationRules:{serializedName:"x-ms-or",xmlName:"x-ms-or",type:{name:"Dictionary",value:{type:{name:"String"}}},headerCollectionPrefix:"x-ms-or-"},blobType:{serializedName:"x-ms-blob-type",xmlName:"x-ms-blob-type",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},copyCompletedOn:{serializedName:"x-ms-copy-completion-time",xmlName:"x-ms-copy-completion-time",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"x-ms-copy-status-description",xmlName:"x-ms-copy-status-description",type:{name:"String"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyProgress:{serializedName:"x-ms-copy-progress",xmlName:"x-ms-copy-progress",type:{name:"String"}},copySource:{serializedName:"x-ms-copy-source",xmlName:"x-ms-copy-source",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},isIncrementalCopy:{serializedName:"x-ms-incremental-copy",xmlName:"x-ms-incremental-copy",type:{name:"Boolean"}},destinationSnapshot:{serializedName:"x-ms-copy-destination-snapshot",xmlName:"x-ms-copy-destination-snapshot",type:{name:"String"}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},contentLength:{serializedName:"content-length",xmlName:"content-length",type:{name:"Number"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},contentEncoding:{serializedName:"content-encoding",xmlName:"content-encoding",type:{name:"String"}},contentDisposition:{serializedName:"content-disposition",xmlName:"content-disposition",type:{name:"String"}},contentLanguage:{serializedName:"content-language",xmlName:"content-language",type:{name:"String"}},cacheControl:{serializedName:"cache-control",xmlName:"cache-control",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},acceptRanges:{serializedName:"accept-ranges",xmlName:"accept-ranges",type:{name:"String"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-server-encrypted",xmlName:"x-ms-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},accessTier:{serializedName:"x-ms-access-tier",xmlName:"x-ms-access-tier",type:{name:"String"}},accessTierInferred:{serializedName:"x-ms-access-tier-inferred",xmlName:"x-ms-access-tier-inferred",type:{name:"Boolean"}},archiveStatus:{serializedName:"x-ms-archive-status",xmlName:"x-ms-archive-status",type:{name:"String"}},accessTierChangedOn:{serializedName:"x-ms-access-tier-change-time",xmlName:"x-ms-access-tier-change-time",type:{name:"DateTimeRfc1123"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},isCurrentVersion:{serializedName:"x-ms-is-current-version",xmlName:"x-ms-is-current-version",type:{name:"Boolean"}},tagCount:{serializedName:"x-ms-tag-count",xmlName:"x-ms-tag-count",type:{name:"Number"}},expiresOn:{serializedName:"x-ms-expiry-time",xmlName:"x-ms-expiry-time",type:{name:"DateTimeRfc1123"}},isSealed:{serializedName:"x-ms-blob-sealed",xmlName:"x-ms-blob-sealed",type:{name:"Boolean"}},rehydratePriority:{serializedName:"x-ms-rehydrate-priority",xmlName:"x-ms-rehydrate-priority",type:{name:"Enum",allowedValues:["High","Standard"]}},lastAccessed:{serializedName:"x-ms-last-access-time",xmlName:"x-ms-last-access-time",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiresOn:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}},legalHold:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},wa={serializedName:"Blob_getPropertiesExceptionHeaders",type:{name:"Composite",className:"BlobGetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Oa={serializedName:"Blob_deleteHeaders",type:{name:"Composite",className:"BlobDeleteHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ea={serializedName:"Blob_deleteExceptionHeaders",type:{name:"Composite",className:"BlobDeleteExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},qa={serializedName:"Blob_undeleteHeaders",type:{name:"Composite",className:"BlobUndeleteHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ba={serializedName:"Blob_undeleteExceptionHeaders",type:{name:"Composite",className:"BlobUndeleteExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ta={serializedName:"Blob_setExpiryHeaders",type:{name:"Composite",className:"BlobSetExpiryHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Ma={serializedName:"Blob_setExpiryExceptionHeaders",type:{name:"Composite",className:"BlobSetExpiryExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ia={serializedName:"Blob_setHttpHeadersHeaders",type:{name:"Composite",className:"BlobSetHttpHeadersHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ha={serializedName:"Blob_setHttpHeadersExceptionHeaders",type:{name:"Composite",className:"BlobSetHttpHeadersExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Aa={serializedName:"Blob_setImmutabilityPolicyHeaders",type:{name:"Composite",className:"BlobSetImmutabilityPolicyHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiry:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}}}}},ka={serializedName:"Blob_setImmutabilityPolicyExceptionHeaders",type:{name:"Composite",className:"BlobSetImmutabilityPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Da={serializedName:"Blob_deleteImmutabilityPolicyHeaders",type:{name:"Composite",className:"BlobDeleteImmutabilityPolicyHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},La={serializedName:"Blob_deleteImmutabilityPolicyExceptionHeaders",type:{name:"Composite",className:"BlobDeleteImmutabilityPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},_a={serializedName:"Blob_setLegalHoldHeaders",type:{name:"Composite",className:"BlobSetLegalHoldHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},legalHold:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}}}}},ja={serializedName:"Blob_setLegalHoldExceptionHeaders",type:{name:"Composite",className:"BlobSetLegalHoldExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ua={serializedName:"Blob_setMetadataHeaders",type:{name:"Composite",className:"BlobSetMetadataHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Va={serializedName:"Blob_setMetadataExceptionHeaders",type:{name:"Composite",className:"BlobSetMetadataExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Fa={serializedName:"Blob_acquireLeaseHeaders",type:{name:"Composite",className:"BlobAcquireLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},$a={serializedName:"Blob_acquireLeaseExceptionHeaders",type:{name:"Composite",className:"BlobAcquireLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ka={serializedName:"Blob_releaseLeaseHeaders",type:{name:"Composite",className:"BlobReleaseLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Ga={serializedName:"Blob_releaseLeaseExceptionHeaders",type:{name:"Composite",className:"BlobReleaseLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Qa={serializedName:"Blob_renewLeaseHeaders",type:{name:"Composite",className:"BlobRenewLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Xa={serializedName:"Blob_renewLeaseExceptionHeaders",type:{name:"Composite",className:"BlobRenewLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Wa={serializedName:"Blob_changeLeaseHeaders",type:{name:"Composite",className:"BlobChangeLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Ja={serializedName:"Blob_changeLeaseExceptionHeaders",type:{name:"Composite",className:"BlobChangeLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ya={serializedName:"Blob_breakLeaseHeaders",type:{name:"Composite",className:"BlobBreakLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseTime:{serializedName:"x-ms-lease-time",xmlName:"x-ms-lease-time",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Za={serializedName:"Blob_breakLeaseExceptionHeaders",type:{name:"Composite",className:"BlobBreakLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},er={serializedName:"Blob_createSnapshotHeaders",type:{name:"Composite",className:"BlobCreateSnapshotHeaders",modelProperties:{snapshot:{serializedName:"x-ms-snapshot",xmlName:"x-ms-snapshot",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},tr={serializedName:"Blob_createSnapshotExceptionHeaders",type:{name:"Composite",className:"BlobCreateSnapshotExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ar={serializedName:"Blob_startCopyFromURLHeaders",type:{name:"Composite",className:"BlobStartCopyFromURLHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},rr={serializedName:"Blob_startCopyFromURLExceptionHeaders",type:{name:"Composite",className:"BlobStartCopyFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},sr={serializedName:"Blob_copyFromURLHeaders",type:{name:"Composite",className:"BlobCopyFromURLHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyStatus:{defaultValue:"success",isConstant:!0,serializedName:"x-ms-copy-status",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},nr={serializedName:"Blob_copyFromURLExceptionHeaders",type:{name:"Composite",className:"BlobCopyFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ir={serializedName:"Blob_abortCopyFromURLHeaders",type:{name:"Composite",className:"BlobAbortCopyFromURLHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},or={serializedName:"Blob_abortCopyFromURLExceptionHeaders",type:{name:"Composite",className:"BlobAbortCopyFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},mr={serializedName:"Blob_setTierHeaders",type:{name:"Composite",className:"BlobSetTierHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},lr={serializedName:"Blob_setTierExceptionHeaders",type:{name:"Composite",className:"BlobSetTierExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},dr={serializedName:"Blob_getAccountInfoHeaders",type:{name:"Composite",className:"BlobGetAccountInfoHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},skuName:{serializedName:"x-ms-sku-name",xmlName:"x-ms-sku-name",type:{name:"Enum",allowedValues:["Standard_LRS","Standard_GRS","Standard_RAGRS","Standard_ZRS","Premium_LRS"]}},accountKind:{serializedName:"x-ms-account-kind",xmlName:"x-ms-account-kind",type:{name:"Enum",allowedValues:["Storage","BlobStorage","StorageV2","FileStorage","BlockBlobStorage"]}}}}},cr={serializedName:"Blob_getAccountInfoExceptionHeaders",type:{name:"Composite",className:"BlobGetAccountInfoExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},pr={serializedName:"Blob_queryHeaders",type:{name:"Composite",className:"BlobQueryHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},metadata:{serializedName:"x-ms-meta",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}}},contentLength:{serializedName:"content-length",xmlName:"content-length",type:{name:"Number"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},contentRange:{serializedName:"content-range",xmlName:"content-range",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},contentEncoding:{serializedName:"content-encoding",xmlName:"content-encoding",type:{name:"String"}},cacheControl:{serializedName:"cache-control",xmlName:"cache-control",type:{name:"String"}},contentDisposition:{serializedName:"content-disposition",xmlName:"content-disposition",type:{name:"String"}},contentLanguage:{serializedName:"content-language",xmlName:"content-language",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},blobType:{serializedName:"x-ms-blob-type",xmlName:"x-ms-blob-type",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},copyCompletionTime:{serializedName:"x-ms-copy-completion-time",xmlName:"x-ms-copy-completion-time",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"x-ms-copy-status-description",xmlName:"x-ms-copy-status-description",type:{name:"String"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyProgress:{serializedName:"x-ms-copy-progress",xmlName:"x-ms-copy-progress",type:{name:"String"}},copySource:{serializedName:"x-ms-copy-source",xmlName:"x-ms-copy-source",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},acceptRanges:{serializedName:"accept-ranges",xmlName:"accept-ranges",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-server-encrypted",xmlName:"x-ms-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},blobContentMD5:{serializedName:"x-ms-blob-content-md5",xmlName:"x-ms-blob-content-md5",type:{name:"ByteArray"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}},contentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}}}}},ur={serializedName:"Blob_queryExceptionHeaders",type:{name:"Composite",className:"BlobQueryExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},yr={serializedName:"Blob_getTagsHeaders",type:{name:"Composite",className:"BlobGetTagsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},gr={serializedName:"Blob_getTagsExceptionHeaders",type:{name:"Composite",className:"BlobGetTagsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},hr={serializedName:"Blob_setTagsHeaders",type:{name:"Composite",className:"BlobSetTagsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},xr={serializedName:"Blob_setTagsExceptionHeaders",type:{name:"Composite",className:"BlobSetTagsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},br={serializedName:"PageBlob_createHeaders",type:{name:"Composite",className:"PageBlobCreateHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Nr={serializedName:"PageBlob_createExceptionHeaders",type:{name:"Composite",className:"PageBlobCreateExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},fr={serializedName:"PageBlob_uploadPagesHeaders",type:{name:"Composite",className:"PageBlobUploadPagesHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Sr={serializedName:"PageBlob_uploadPagesExceptionHeaders",type:{name:"Composite",className:"PageBlobUploadPagesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},vr={serializedName:"PageBlob_clearPagesHeaders",type:{name:"Composite",className:"PageBlobClearPagesHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Cr={serializedName:"PageBlob_clearPagesExceptionHeaders",type:{name:"Composite",className:"PageBlobClearPagesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Pr={serializedName:"PageBlob_uploadPagesFromURLHeaders",type:{name:"Composite",className:"PageBlobUploadPagesFromURLHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},zr={serializedName:"PageBlob_uploadPagesFromURLExceptionHeaders",type:{name:"Composite",className:"PageBlobUploadPagesFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Rr={serializedName:"PageBlob_getPageRangesHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},blobContentLength:{serializedName:"x-ms-blob-content-length",xmlName:"x-ms-blob-content-length",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},wr={serializedName:"PageBlob_getPageRangesExceptionHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Or={serializedName:"PageBlob_getPageRangesDiffHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesDiffHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},blobContentLength:{serializedName:"x-ms-blob-content-length",xmlName:"x-ms-blob-content-length",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Er={serializedName:"PageBlob_getPageRangesDiffExceptionHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesDiffExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},qr={serializedName:"PageBlob_resizeHeaders",type:{name:"Composite",className:"PageBlobResizeHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Br={serializedName:"PageBlob_resizeExceptionHeaders",type:{name:"Composite",className:"PageBlobResizeExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Tr={serializedName:"PageBlob_updateSequenceNumberHeaders",type:{name:"Composite",className:"PageBlobUpdateSequenceNumberHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Mr={serializedName:"PageBlob_updateSequenceNumberExceptionHeaders",type:{name:"Composite",className:"PageBlobUpdateSequenceNumberExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ir={serializedName:"PageBlob_copyIncrementalHeaders",type:{name:"Composite",className:"PageBlobCopyIncrementalHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Hr={serializedName:"PageBlob_copyIncrementalExceptionHeaders",type:{name:"Composite",className:"PageBlobCopyIncrementalExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ar={serializedName:"AppendBlob_createHeaders",type:{name:"Composite",className:"AppendBlobCreateHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},kr={serializedName:"AppendBlob_createExceptionHeaders",type:{name:"Composite",className:"AppendBlobCreateExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Dr={serializedName:"AppendBlob_appendBlockHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobAppendOffset:{serializedName:"x-ms-blob-append-offset",xmlName:"x-ms-blob-append-offset",type:{name:"String"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Lr={serializedName:"AppendBlob_appendBlockExceptionHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},_r={serializedName:"AppendBlob_appendBlockFromUrlHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockFromUrlHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobAppendOffset:{serializedName:"x-ms-blob-append-offset",xmlName:"x-ms-blob-append-offset",type:{name:"String"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},jr={serializedName:"AppendBlob_appendBlockFromUrlExceptionHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockFromUrlExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ur={serializedName:"AppendBlob_sealHeaders",type:{name:"Composite",className:"AppendBlobSealHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isSealed:{serializedName:"x-ms-blob-sealed",xmlName:"x-ms-blob-sealed",type:{name:"Boolean"}}}}},Vr={serializedName:"AppendBlob_sealExceptionHeaders",type:{name:"Composite",className:"AppendBlobSealExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Fr={serializedName:"BlockBlob_uploadHeaders",type:{name:"Composite",className:"BlockBlobUploadHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},$r={serializedName:"BlockBlob_uploadExceptionHeaders",type:{name:"Composite",className:"BlockBlobUploadExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Kr={serializedName:"BlockBlob_putBlobFromUrlHeaders",type:{name:"Composite",className:"BlockBlobPutBlobFromUrlHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Gr={serializedName:"BlockBlob_putBlobFromUrlExceptionHeaders",type:{name:"Composite",className:"BlockBlobPutBlobFromUrlExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Qr={serializedName:"BlockBlob_stageBlockHeaders",type:{name:"Composite",className:"BlockBlobStageBlockHeaders",modelProperties:{contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Xr={serializedName:"BlockBlob_stageBlockExceptionHeaders",type:{name:"Composite",className:"BlockBlobStageBlockExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Wr={serializedName:"BlockBlob_stageBlockFromURLHeaders",type:{name:"Composite",className:"BlockBlobStageBlockFromURLHeaders",modelProperties:{contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Jr={serializedName:"BlockBlob_stageBlockFromURLExceptionHeaders",type:{name:"Composite",className:"BlockBlobStageBlockFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Yr={serializedName:"BlockBlob_commitBlockListHeaders",type:{name:"Composite",className:"BlockBlobCommitBlockListHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Zr={serializedName:"BlockBlob_commitBlockListExceptionHeaders",type:{name:"Composite",className:"BlockBlobCommitBlockListExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},es={serializedName:"BlockBlob_getBlockListHeaders",type:{name:"Composite",className:"BlockBlobGetBlockListHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},blobContentLength:{serializedName:"x-ms-blob-content-length",xmlName:"x-ms-blob-content-length",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ts={serializedName:"BlockBlob_getBlockListExceptionHeaders",type:{name:"Composite",className:"BlockBlobGetBlockListExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}};var as;!function(e){e.Csv=",",e.Ssv=" ",e.Tsv="\t",e.Pipes="|",e.Multi="Multi"}(as||(as={}));const rs={parameterPath:["options","contentType"],mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},ss={parameterPath:"blobServiceProperties",mapper:Le},ns={parameterPath:"accept",mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},is={parameterPath:"url",mapper:{serializedName:"url",required:!0,xmlName:"url",type:{name:"String"}},skipEncoding:!0},os={parameterPath:"restype",mapper:{defaultValue:"service",isConstant:!0,serializedName:"restype",type:{name:"String"}}},ms={parameterPath:"comp",mapper:{defaultValue:"properties",isConstant:!0,serializedName:"comp",type:{name:"String"}}},ls={parameterPath:["options","timeoutInSeconds"],mapper:{constraints:{InclusiveMinimum:0},serializedName:"timeout",xmlName:"timeout",type:{name:"Number"}}},ds={parameterPath:"version",mapper:{defaultValue:"2021-10-04",isConstant:!0,serializedName:"x-ms-version",type:{name:"String"}}},cs={parameterPath:["options","requestId"],mapper:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}}},ps={parameterPath:"accept",mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},us={parameterPath:"comp",mapper:{defaultValue:"list",isConstant:!0,serializedName:"comp",type:{name:"String"}}},ys={parameterPath:["options","prefix"],mapper:{serializedName:"prefix",xmlName:"prefix",type:{name:"String"}}},gs={parameterPath:["options","marker"],mapper:{serializedName:"marker",xmlName:"marker",type:{name:"String"}}},hs={parameterPath:["options","maxPageSize"],mapper:{constraints:{InclusiveMinimum:1},serializedName:"maxresults",xmlName:"maxresults",type:{name:"Number"}}},xs={parameterPath:["options","include"],mapper:{serializedName:"include",xmlName:"include",xmlElementName:"ListContainersIncludeType",type:{name:"Sequence",element:{type:{name:"Enum",allowedValues:["metadata","deleted","system"]}}}},collectionFormat:as.Csv},bs={parameterPath:"keyInfo",mapper:Je},Ns={parameterPath:"restype",mapper:{defaultValue:"account",isConstant:!0,serializedName:"restype",type:{name:"String"}}},fs={parameterPath:"body",mapper:{serializedName:"body",required:!0,xmlName:"body",type:{name:"Stream"}}},Ss={parameterPath:"comp",mapper:{defaultValue:"batch",isConstant:!0,serializedName:"comp",type:{name:"String"}}},vs={parameterPath:"contentLength",mapper:{serializedName:"Content-Length",required:!0,xmlName:"Content-Length",type:{name:"Number"}}},Cs={parameterPath:"multipartContentType",mapper:{serializedName:"Content-Type",required:!0,xmlName:"Content-Type",type:{name:"String"}}},Ps={parameterPath:"comp",mapper:{defaultValue:"blobs",isConstant:!0,serializedName:"comp",type:{name:"String"}}},zs={parameterPath:["options","where"],mapper:{serializedName:"where",xmlName:"where",type:{name:"String"}}},Rs={parameterPath:"restype",mapper:{defaultValue:"container",isConstant:!0,serializedName:"restype",type:{name:"String"}}},ws={parameterPath:["options","metadata"],mapper:{serializedName:"x-ms-meta",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}},headerCollectionPrefix:"x-ms-meta-"}},Os={parameterPath:["options","access"],mapper:{serializedName:"x-ms-blob-public-access",xmlName:"x-ms-blob-public-access",type:{name:"Enum",allowedValues:["container","blob"]}}},Es={parameterPath:["options","leaseAccessConditions","leaseId"],mapper:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}}},qs={parameterPath:["options","modifiedAccessConditions","ifModifiedSince"],mapper:{serializedName:"If-Modified-Since",xmlName:"If-Modified-Since",type:{name:"DateTimeRfc1123"}}},Bs={parameterPath:["options","modifiedAccessConditions","ifUnmodifiedSince"],mapper:{serializedName:"If-Unmodified-Since",xmlName:"If-Unmodified-Since",type:{name:"DateTimeRfc1123"}}},Ts={parameterPath:"comp",mapper:{defaultValue:"metadata",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Ms={parameterPath:"comp",mapper:{defaultValue:"acl",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Is={parameterPath:"comp",mapper:{defaultValue:"undelete",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Hs={parameterPath:"comp",mapper:{defaultValue:"lease",isConstant:!0,serializedName:"comp",type:{name:"String"}}},As={parameterPath:"action",mapper:{defaultValue:"acquire",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},ks={parameterPath:["options","duration"],mapper:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Number"}}},Ds={parameterPath:["options","proposedLeaseId"],mapper:{serializedName:"x-ms-proposed-lease-id",xmlName:"x-ms-proposed-lease-id",type:{name:"String"}}},Ls={parameterPath:"action",mapper:{defaultValue:"release",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},_s={parameterPath:"leaseId",mapper:{serializedName:"x-ms-lease-id",required:!0,xmlName:"x-ms-lease-id",type:{name:"String"}}},js={parameterPath:"action",mapper:{defaultValue:"renew",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},Us={parameterPath:"action",mapper:{defaultValue:"break",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},Vs={parameterPath:["options","breakPeriod"],mapper:{serializedName:"x-ms-lease-break-period",xmlName:"x-ms-lease-break-period",type:{name:"Number"}}},Fs={parameterPath:"action",mapper:{defaultValue:"change",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},$s={parameterPath:"proposedLeaseId",mapper:{serializedName:"x-ms-proposed-lease-id",required:!0,xmlName:"x-ms-proposed-lease-id",type:{name:"String"}}},Ks={parameterPath:["options","include"],mapper:{serializedName:"include",xmlName:"include",xmlElementName:"ListBlobsIncludeItem",type:{name:"Sequence",element:{type:{name:"Enum",allowedValues:["copy","deleted","metadata","snapshots","uncommittedblobs","versions","tags","immutabilitypolicy","legalhold","deletedwithversions"]}}}},collectionFormat:as.Csv},Gs={parameterPath:["options","snapshot"],mapper:{serializedName:"snapshot",xmlName:"snapshot",type:{name:"String"}}},Qs={parameterPath:["options","versionId"],mapper:{serializedName:"versionid",xmlName:"versionid",type:{name:"String"}}},Xs={parameterPath:["options","range"],mapper:{serializedName:"x-ms-range",xmlName:"x-ms-range",type:{name:"String"}}},Ws={parameterPath:["options","cpkInfo","encryptionKey"],mapper:{serializedName:"x-ms-encryption-key",xmlName:"x-ms-encryption-key",type:{name:"String"}}},Js={parameterPath:["options","cpkInfo","encryptionKeySha256"],mapper:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}}},Ys={parameterPath:["options","cpkInfo","encryptionAlgorithm"],mapper:{serializedName:"x-ms-encryption-algorithm",xmlName:"x-ms-encryption-algorithm",type:{name:"String"}}},Zs={parameterPath:["options","modifiedAccessConditions","ifMatch"],mapper:{serializedName:"If-Match",xmlName:"If-Match",type:{name:"String"}}},en={parameterPath:["options","modifiedAccessConditions","ifNoneMatch"],mapper:{serializedName:"If-None-Match",xmlName:"If-None-Match",type:{name:"String"}}},tn={parameterPath:["options","modifiedAccessConditions","ifTags"],mapper:{serializedName:"x-ms-if-tags",xmlName:"x-ms-if-tags",type:{name:"String"}}},an={parameterPath:["options","blobHttpHeaders","blobCacheControl"],mapper:{serializedName:"x-ms-blob-cache-control",xmlName:"x-ms-blob-cache-control",type:{name:"String"}}},rn={parameterPath:["options","blobHttpHeaders","blobContentType"],mapper:{serializedName:"x-ms-blob-content-type",xmlName:"x-ms-blob-content-type",type:{name:"String"}}},sn={parameterPath:["options","blobHttpHeaders","blobContentMD5"],mapper:{serializedName:"x-ms-blob-content-md5",xmlName:"x-ms-blob-content-md5",type:{name:"ByteArray"}}},nn={parameterPath:["options","blobHttpHeaders","blobContentEncoding"],mapper:{serializedName:"x-ms-blob-content-encoding",xmlName:"x-ms-blob-content-encoding",type:{name:"String"}}},on={parameterPath:["options","blobHttpHeaders","blobContentLanguage"],mapper:{serializedName:"x-ms-blob-content-language",xmlName:"x-ms-blob-content-language",type:{name:"String"}}},mn={parameterPath:["options","blobHttpHeaders","blobContentDisposition"],mapper:{serializedName:"x-ms-blob-content-disposition",xmlName:"x-ms-blob-content-disposition",type:{name:"String"}}},ln={parameterPath:"comp",mapper:{defaultValue:"immutabilityPolicies",isConstant:!0,serializedName:"comp",type:{name:"String"}}},dn={parameterPath:["options","immutabilityPolicyExpiry"],mapper:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}}},cn={parameterPath:["options","immutabilityPolicyMode"],mapper:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}}},pn={parameterPath:["options","encryptionScope"],mapper:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}}},un={parameterPath:["options","tier"],mapper:{serializedName:"x-ms-access-tier",xmlName:"x-ms-access-tier",type:{name:"Enum",allowedValues:["P4","P6","P10","P15","P20","P30","P40","P50","P60","P70","P80","Hot","Cool","Archive"]}}},yn={parameterPath:["options","rehydratePriority"],mapper:{serializedName:"x-ms-rehydrate-priority",xmlName:"x-ms-rehydrate-priority",type:{name:"Enum",allowedValues:["High","Standard"]}}},gn={parameterPath:["options","sourceModifiedAccessConditions","sourceIfModifiedSince"],mapper:{serializedName:"x-ms-source-if-modified-since",xmlName:"x-ms-source-if-modified-since",type:{name:"DateTimeRfc1123"}}},hn={parameterPath:["options","sourceModifiedAccessConditions","sourceIfUnmodifiedSince"],mapper:{serializedName:"x-ms-source-if-unmodified-since",xmlName:"x-ms-source-if-unmodified-since",type:{name:"DateTimeRfc1123"}}},xn={parameterPath:["options","sourceModifiedAccessConditions","sourceIfMatch"],mapper:{serializedName:"x-ms-source-if-match",xmlName:"x-ms-source-if-match",type:{name:"String"}}},bn={parameterPath:["options","sourceModifiedAccessConditions","sourceIfNoneMatch"],mapper:{serializedName:"x-ms-source-if-none-match",xmlName:"x-ms-source-if-none-match",type:{name:"String"}}},Nn={parameterPath:["options","sourceModifiedAccessConditions","sourceIfTags"],mapper:{serializedName:"x-ms-source-if-tags",xmlName:"x-ms-source-if-tags",type:{name:"String"}}},fn={parameterPath:"copySource",mapper:{serializedName:"x-ms-copy-source",required:!0,xmlName:"x-ms-copy-source",type:{name:"String"}}},Sn={parameterPath:["options","blobTagsString"],mapper:{serializedName:"x-ms-tags",xmlName:"x-ms-tags",type:{name:"String"}}},vn={parameterPath:["options","legalHold"],mapper:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}}},Cn={parameterPath:["options","sourceContentMD5"],mapper:{serializedName:"x-ms-source-content-md5",xmlName:"x-ms-source-content-md5",type:{name:"ByteArray"}}},Pn={parameterPath:["options","copySourceAuthorization"],mapper:{serializedName:"x-ms-copy-source-authorization",xmlName:"x-ms-copy-source-authorization",type:{name:"String"}}},zn={parameterPath:["options","copySourceTags"],mapper:{serializedName:"x-ms-copy-source-tag-option",xmlName:"x-ms-copy-source-tag-option",type:{name:"Enum",allowedValues:["REPLACE","COPY"]}}},Rn={parameterPath:["options","queryRequest"],mapper:Nt},wn={parameterPath:"comp",mapper:{defaultValue:"tags",isConstant:!0,serializedName:"comp",type:{name:"String"}}},On={parameterPath:["options","tags"],mapper:tt},En={parameterPath:["options","transactionalContentMD5"],mapper:{serializedName:"Content-MD5",xmlName:"Content-MD5",type:{name:"ByteArray"}}},qn={parameterPath:["options","transactionalContentCrc64"],mapper:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}}},Bn={parameterPath:"blobContentLength",mapper:{serializedName:"x-ms-blob-content-length",required:!0,xmlName:"x-ms-blob-content-length",type:{name:"Number"}}},Tn={parameterPath:["options","blobSequenceNumber"],mapper:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}}},Mn={parameterPath:["options","contentType"],mapper:{defaultValue:"application/octet-stream",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},In={parameterPath:"body",mapper:{serializedName:"body",required:!0,xmlName:"body",type:{name:"Stream"}}},Hn={parameterPath:"accept",mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},An={parameterPath:"comp",mapper:{defaultValue:"page",isConstant:!0,serializedName:"comp",type:{name:"String"}}},kn={parameterPath:"pageWrite",mapper:{defaultValue:"update",isConstant:!0,serializedName:"x-ms-page-write",type:{name:"String"}}},Dn={parameterPath:["options","sequenceNumberAccessConditions","ifSequenceNumberLessThanOrEqualTo"],mapper:{serializedName:"x-ms-if-sequence-number-le",xmlName:"x-ms-if-sequence-number-le",type:{name:"Number"}}},Ln={parameterPath:["options","sequenceNumberAccessConditions","ifSequenceNumberLessThan"],mapper:{serializedName:"x-ms-if-sequence-number-lt",xmlName:"x-ms-if-sequence-number-lt",type:{name:"Number"}}},_n={parameterPath:["options","sequenceNumberAccessConditions","ifSequenceNumberEqualTo"],mapper:{serializedName:"x-ms-if-sequence-number-eq",xmlName:"x-ms-if-sequence-number-eq",type:{name:"Number"}}},jn={parameterPath:"sourceUrl",mapper:{serializedName:"x-ms-copy-source",required:!0,xmlName:"x-ms-copy-source",type:{name:"String"}}},Un={parameterPath:["options","sourceContentCrc64"],mapper:{serializedName:"x-ms-source-content-crc64",xmlName:"x-ms-source-content-crc64",type:{name:"ByteArray"}}},Vn={parameterPath:"comp",mapper:{defaultValue:"pagelist",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Fn={parameterPath:"comp",mapper:{defaultValue:"appendblock",isConstant:!0,serializedName:"comp",type:{name:"String"}}},$n={parameterPath:["options","appendPositionAccessConditions","maxSize"],mapper:{serializedName:"x-ms-blob-condition-maxsize",xmlName:"x-ms-blob-condition-maxsize",type:{name:"Number"}}},Kn={parameterPath:["options","appendPositionAccessConditions","appendPosition"],mapper:{serializedName:"x-ms-blob-condition-appendpos",xmlName:"x-ms-blob-condition-appendpos",type:{name:"Number"}}},Gn={parameterPath:["options","sourceRange"],mapper:{serializedName:"x-ms-source-range",xmlName:"x-ms-source-range",type:{name:"String"}}},Qn={parameterPath:"blobType",mapper:{defaultValue:"BlockBlob",isConstant:!0,serializedName:"x-ms-blob-type",type:{name:"String"}}},Xn={parameterPath:"comp",mapper:{defaultValue:"block",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Wn={parameterPath:"blockId",mapper:{serializedName:"blockid",required:!0,xmlName:"blockid",type:{name:"String"}}},Jn={parameterPath:"blocks",mapper:ut},Yn={parameterPath:"comp",mapper:{defaultValue:"blocklist",isConstant:!0,serializedName:"comp",type:{name:"String"}}};class Zn{constructor(e){this.client=e}setProperties(e,t){const a={blobServiceProperties:e,options:Re(t||{})};return this.client.sendOperationRequest(a,ti)}getProperties(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,ai)}getStatistics(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,ri)}listContainersSegment(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,si)}getUserDelegationKey(e,t){const a={keyInfo:e,options:Re(t||{})};return this.client.sendOperationRequest(a,ni)}getAccountInfo(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,ii)}submitBatch(e,t,a,r){const s={contentLength:e,multipartContentType:t,body:a,options:Re(r||{})};return this.client.sendOperationRequest(s,oi)}filterBlobs(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,mi)}}const ei=new Ee(e,!0),ti={path:"/",httpMethod:"PUT",responses:{202:{headersMapper:Rt},default:{bodyMapper:$e,headersMapper:wt}},requestBody:ss,queryParameters:[os,ms,ls],urlParameters:[is],headerParameters:[rs,ns,ds,cs],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:ei},ai={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:Le,headersMapper:Ot},default:{bodyMapper:$e,headersMapper:Et}},queryParameters:[os,ms,ls],urlParameters:[is],headerParameters:[ds,cs,ps],isXML:!0,serializer:ei},ri={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:Ke,headersMapper:qt},default:{bodyMapper:$e,headersMapper:Bt}},queryParameters:[os,ls,{parameterPath:"comp",mapper:{defaultValue:"stats",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[is],headerParameters:[ds,cs,ps],isXML:!0,serializer:ei},si={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:Qe,headersMapper:Tt},default:{bodyMapper:$e,headersMapper:Mt}},queryParameters:[ls,us,ys,gs,hs,xs],urlParameters:[is],headerParameters:[ds,cs,ps],isXML:!0,serializer:ei},ni={path:"/",httpMethod:"POST",responses:{200:{bodyMapper:Ye,headersMapper:It},default:{bodyMapper:$e,headersMapper:Ht}},requestBody:bs,queryParameters:[os,ls,{parameterPath:"comp",mapper:{defaultValue:"userdelegationkey",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[is],headerParameters:[rs,ns,ds,cs],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:ei},ii={path:"/",httpMethod:"GET",responses:{200:{headersMapper:At},default:{bodyMapper:$e,headersMapper:kt}},queryParameters:[ms,Ns],urlParameters:[is],headerParameters:[ds,ps],isXML:!0,serializer:ei},oi={path:"/",httpMethod:"POST",responses:{202:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:Dt},default:{bodyMapper:$e,headersMapper:Lt}},requestBody:fs,queryParameters:[ls,Ss],urlParameters:[is],headerParameters:[rs,ns,ds,cs,vs,Cs],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:ei},mi={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:Ze,headersMapper:_t},default:{bodyMapper:$e,headersMapper:jt}},queryParameters:[ls,gs,hs,Ps,zs],urlParameters:[is],headerParameters:[ds,cs,ps],isXML:!0,serializer:ei};class li{constructor(e){this.client=e}create(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,ci)}getProperties(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,pi)}delete(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,ui)}setMetadata(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,yi)}getAccessPolicy(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,gi)}setAccessPolicy(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,hi)}restore(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,xi)}rename(e,t){const a={sourceContainerName:e,options:Re(t||{})};return this.client.sendOperationRequest(a,bi)}submitBatch(e,t,a,r){const s={contentLength:e,multipartContentType:t,body:a,options:Re(r||{})};return this.client.sendOperationRequest(s,Ni)}filterBlobs(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,fi)}acquireLease(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,Si)}releaseLease(e,t){const a={leaseId:e,options:Re(t||{})};return this.client.sendOperationRequest(a,vi)}renewLease(e,t){const a={leaseId:e,options:Re(t||{})};return this.client.sendOperationRequest(a,Ci)}breakLease(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,Pi)}changeLease(e,t,a){const r={leaseId:e,proposedLeaseId:t,options:Re(a||{})};return this.client.sendOperationRequest(r,zi)}listBlobFlatSegment(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,Ri)}listBlobHierarchySegment(e,t){const a={delimiter:e,options:Re(t||{})};return this.client.sendOperationRequest(a,wi)}getAccountInfo(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,Oi)}}const di=new Ee(e,!0),ci={path:"/{containerName}",httpMethod:"PUT",responses:{201:{headersMapper:Ut},default:{bodyMapper:$e,headersMapper:Vt}},queryParameters:[ls,Rs],urlParameters:[is],headerParameters:[ds,cs,ps,ws,Os,{parameterPath:["options","containerEncryptionScope","defaultEncryptionScope"],mapper:{serializedName:"x-ms-default-encryption-scope",xmlName:"x-ms-default-encryption-scope",type:{name:"String"}}},{parameterPath:["options","containerEncryptionScope","preventEncryptionScopeOverride"],mapper:{serializedName:"x-ms-deny-encryption-scope-override",xmlName:"x-ms-deny-encryption-scope-override",type:{name:"Boolean"}}}],isXML:!0,serializer:di},pi={path:"/{containerName}",httpMethod:"GET",responses:{200:{headersMapper:Ft},default:{bodyMapper:$e,headersMapper:$t}},queryParameters:[ls,Rs],urlParameters:[is],headerParameters:[ds,cs,ps,Es],isXML:!0,serializer:di},ui={path:"/{containerName}",httpMethod:"DELETE",responses:{202:{headersMapper:Kt},default:{bodyMapper:$e,headersMapper:Gt}},queryParameters:[ls,Rs],urlParameters:[is],headerParameters:[ds,cs,ps,Es,qs,Bs],isXML:!0,serializer:di},yi={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:Qt},default:{bodyMapper:$e,headersMapper:Xt}},queryParameters:[ls,Rs,Ts],urlParameters:[is],headerParameters:[ds,cs,ps,ws,Es,qs],isXML:!0,serializer:di},gi={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedIdentifier"}}},serializedName:"SignedIdentifiers",xmlName:"SignedIdentifiers",xmlIsWrapped:!0,xmlElementName:"SignedIdentifier"},headersMapper:Wt},default:{bodyMapper:$e,headersMapper:Jt}},queryParameters:[ls,Rs,Ms],urlParameters:[is],headerParameters:[ds,cs,ps,Es],isXML:!0,serializer:di},hi={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:Yt},default:{bodyMapper:$e,headersMapper:Zt}},requestBody:{parameterPath:["options","containerAcl"],mapper:{serializedName:"containerAcl",xmlName:"SignedIdentifiers",xmlIsWrapped:!0,xmlElementName:"SignedIdentifier",type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedIdentifier"}}}}},queryParameters:[ls,Rs,Ms],urlParameters:[is],headerParameters:[rs,ns,ds,cs,Os,Es,qs,Bs],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:di},xi={path:"/{containerName}",httpMethod:"PUT",responses:{201:{headersMapper:ea},default:{bodyMapper:$e,headersMapper:ta}},queryParameters:[ls,Rs,Is],urlParameters:[is],headerParameters:[ds,cs,ps,{parameterPath:["options","deletedContainerName"],mapper:{serializedName:"x-ms-deleted-container-name",xmlName:"x-ms-deleted-container-name",type:{name:"String"}}},{parameterPath:["options","deletedContainerVersion"],mapper:{serializedName:"x-ms-deleted-container-version",xmlName:"x-ms-deleted-container-version",type:{name:"String"}}}],isXML:!0,serializer:di},bi={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:aa},default:{bodyMapper:$e,headersMapper:ra}},queryParameters:[ls,Rs,{parameterPath:"comp",mapper:{defaultValue:"rename",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[is],headerParameters:[ds,cs,ps,{parameterPath:"sourceContainerName",mapper:{serializedName:"x-ms-source-container-name",required:!0,xmlName:"x-ms-source-container-name",type:{name:"String"}}},{parameterPath:["options","sourceLeaseId"],mapper:{serializedName:"x-ms-source-lease-id",xmlName:"x-ms-source-lease-id",type:{name:"String"}}}],isXML:!0,serializer:di},Ni={path:"/{containerName}",httpMethod:"POST",responses:{202:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:sa},default:{bodyMapper:$e,headersMapper:na}},requestBody:fs,queryParameters:[ls,Ss,Rs],urlParameters:[is],headerParameters:[rs,ns,ds,cs,vs,Cs],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:di},fi={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:Ze,headersMapper:ia},default:{bodyMapper:$e,headersMapper:oa}},queryParameters:[ls,gs,hs,Ps,zs,Rs],urlParameters:[is],headerParameters:[ds,cs,ps],isXML:!0,serializer:di},Si={path:"/{containerName}",httpMethod:"PUT",responses:{201:{headersMapper:ma},default:{bodyMapper:$e,headersMapper:la}},queryParameters:[ls,Rs,Hs],urlParameters:[is],headerParameters:[ds,cs,ps,qs,Bs,As,ks,Ds],isXML:!0,serializer:di},vi={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:da},default:{bodyMapper:$e,headersMapper:ca}},queryParameters:[ls,Rs,Hs],urlParameters:[is],headerParameters:[ds,cs,ps,qs,Bs,Ls,_s],isXML:!0,serializer:di},Ci={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:pa},default:{bodyMapper:$e,headersMapper:ua}},queryParameters:[ls,Rs,Hs],urlParameters:[is],headerParameters:[ds,cs,ps,qs,Bs,_s,js],isXML:!0,serializer:di},Pi={path:"/{containerName}",httpMethod:"PUT",responses:{202:{headersMapper:ya},default:{bodyMapper:$e,headersMapper:ga}},queryParameters:[ls,Rs,Hs],urlParameters:[is],headerParameters:[ds,cs,ps,qs,Bs,Us,Vs],isXML:!0,serializer:di},zi={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:ha},default:{bodyMapper:$e,headersMapper:xa}},queryParameters:[ls,Rs,Hs],urlParameters:[is],headerParameters:[ds,cs,ps,qs,Bs,_s,Fs,$s],isXML:!0,serializer:di},Ri={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:nt,headersMapper:ba},default:{bodyMapper:$e,headersMapper:Na}},queryParameters:[ls,us,ys,gs,hs,Rs,Ks],urlParameters:[is],headerParameters:[ds,cs,ps],isXML:!0,serializer:di},wi={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:dt,headersMapper:fa},default:{bodyMapper:$e,headersMapper:Sa}},queryParameters:[ls,us,ys,gs,hs,Rs,Ks,{parameterPath:"delimiter",mapper:{serializedName:"delimiter",required:!0,xmlName:"delimiter",type:{name:"String"}}}],urlParameters:[is],headerParameters:[ds,cs,ps],isXML:!0,serializer:di},Oi={path:"/{containerName}",httpMethod:"GET",responses:{200:{headersMapper:va},default:{bodyMapper:$e,headersMapper:Ca}},queryParameters:[ms,Ns],urlParameters:[is],headerParameters:[ds,ps],isXML:!0,serializer:di};var Ei;!function(e){e[e.OFF=0]="OFF",e[e.ERROR=1]="ERROR",e[e.WARNING=2]="WARNING",e[e.INFO=3]="INFO"}(Ei||(Ei={}));class qi{constructor(e,t){this._nextPolicy=e,this._options=t}shouldLog(e){return this._options.shouldLog(e)}log(e,t){this._options.log(e,t)}}class Bi{constructor(e){this._logger=e}shouldLog(e){return!!this._logger&&e!==Ei.OFF&&e<=this._logger.minimumLogLevel}log(e,t){this._logger&&this.shouldLog(e)&&this._logger.log(e,t)}}function Ti(e){return function(t,a){const r=Se.getTracer("azure/core-tracing",void 0),s=(null==a?void 0:a.tracingOptions)||{},n=Object.assign({kind:pe.INTERNAL},s.spanOptions),i=e.packagePrefix?`${e.packagePrefix}.${t}`:t;let o;o=function(){var e;if("undefined"==typeof process)return!1;const t=null===(e=process.env.AZURE_TRACING_DISABLED)||void 0===e?void 0:e.toLowerCase();return"false"!==t&&"0"!==t&&Boolean(t)}()?Se.wrapSpanContext(Z):r.startSpan(i,n,s.tracingContext),e.namespace&&o.setAttribute("az.namespace",e.namespace);let m=s.spanOptions||{};o.isRecording()&&e.namespace&&(m=Object.assign(Object.assign({},s.spanOptions),{attributes:Object.assign(Object.assign({},n.attributes),{"az.namespace":e.namespace})}));const l=Object.assign(Object.assign({},s),{spanOptions:m,tracingContext:Ce(s.tracingContext||Pe.active(),o)});return{span:o,updatedOptions:Object.assign(Object.assign({},a),{tracingOptions:l})}}}const Mi="undefined"!=typeof process&&process.env&&process.env.DEBUG||void 0;let Ii,Hi=[],Ai=[];const ki=[];Mi&&Li(Mi);const Di=Object.assign((e=>ji(e)),{enable:Li,enabled:_i,disable:function(){const e=Ii||"";return Li(""),e},log:function(...e){if(e.length>0){const t=String(e[0]);t.includes(":error")?console.error(...e):t.includes(":warning")?console.warn(...e):t.includes(":info")?console.info(...e):(t.includes(":verbose"),console.debug(...e))}}});function Li(e){Ii=e,Hi=[],Ai=[];const t=/\*/g,a=e.split(",").map((e=>e.trim().replace(t,".*?")));for(const e of a)e.startsWith("-")?Ai.push(new RegExp(`^${e.substr(1)}$`)):Hi.push(new RegExp(`^${e}$`));for(const e of ki)e.enabled=_i(e.namespace)}function _i(e){if(e.endsWith("*"))return!0;for(const t of Ai)if(t.test(e))return!1;for(const t of Hi)if(t.test(e))return!0;return!1}function ji(e){const t=Object.assign((function(...a){t.enabled&&(a.length>0&&(a[0]=`${e} ${a[0]}`),t.log(...a))}),{enabled:_i(e),destroy:Ui,log:Di.log,namespace:e,extend:Vi});return ki.push(t),t}function Ui(){const e=ki.indexOf(this);return e>=0&&(ki.splice(e,1),!0)}function Vi(e){const t=ji(`${this.namespace}:${e}`);return t.log=this.log,t}const Fi=Di,$i=new Set,Ki="undefined"!=typeof process&&process.env&&process.env.AZURE_LOG_LEVEL||void 0;let Gi;const Qi=Fi("azure");Qi.log=(...e)=>{Fi.log(...e)};const Xi=["verbose","info","warning","error"];Ki&&(to(Ki)?function(e){if(e&&!to(e))throw new Error(`Unknown log level '${e}'. Acceptable values: ${Xi.join(",")}`);Gi=e;const t=[];for(const e of $i)eo(e)&&t.push(e.namespace);Fi.enable(t.join(","))}(Ki):console.error(`AZURE_LOG_LEVEL set to unknown log level '${Ki}'; logging is not enabled. Acceptable values: ${Xi.join(", ")}.`));const Wi={verbose:400,info:300,warning:200,error:100};function Ji(e){const t=Qi.extend(e);return Yi(Qi,t),{error:Zi(t,"error"),warning:Zi(t,"warning"),info:Zi(t,"info"),verbose:Zi(t,"verbose")}}function Yi(e,t){t.log=(...t)=>{e.log(...t)}}function Zi(e,t){const a=Object.assign(e.extend(t),{level:t});if(Yi(e,a),eo(a)){const e=Fi.disable();Fi.enable(e+","+a.namespace)}return $i.add(a),a}function eo(e){return!!(Gi&&Wi[e.level]<=Wi[Gi])}function to(e){return Xi.includes(e)}const ao=Ji("core-http"),ro=Ti({packagePrefix:"",namespace:""});function so(e={}){return{create:(t,a)=>new no(t,a,e)}}class no extends qi{constructor(e,t,a){super(e,t),this.userAgent=a.userAgent}async sendRequest(e){if(!e.tracingContext)return this._nextPolicy.sendRequest(e);const t=this.tryCreateSpan(e);if(!t)return this._nextPolicy.sendRequest(e);try{const a=await this._nextPolicy.sendRequest(e);return this.tryProcessResponse(t,a),a}catch(e){throw this.tryProcessError(t,e),e}}tryCreateSpan(e){var t;try{const{span:a}=ro(`HTTP ${e.method}`,{tracingOptions:{spanOptions:Object.assign(Object.assign({},e.spanOptions),{kind:pe.CLIENT}),tracingContext:e.tracingContext}});if(!a.isRecording())return void a.end();const r=null===(t=e.tracingContext)||void 0===t?void 0:t.getValue(Symbol.for("az.namespace"));"string"==typeof r&&a.setAttribute("az.namespace",r),a.setAttributes({"http.method":e.method,"http.url":e.url,requestId:e.requestId}),this.userAgent&&a.setAttribute("http.user_agent",this.userAgent);const s=a.spanContext(),n=function(e){const t=[];if(e.traceId||t.push("traceId"),e.spanId||t.push("spanId"),t.length)return;const a=(e.traceFlags||0).toString(16),r=1===a.length?`0${a}`:a;return`00-${e.traceId}-${e.spanId}-${r}`}(s);if(n&&function(e){return Se.isSpanContextValid(e)}(s)){e.headers.set("traceparent",n);const t=s.traceState&&s.traceState.serialize();t&&e.headers.set("tracestate",t)}return a}catch(e){return void ao.warning(`Skipping creating a tracing span due to an error: ${e.message}`)}}tryProcessError(e,t){try{e.setStatus({code:ze.ERROR,message:t.message}),t.statusCode&&e.setAttribute("http.status_code",t.statusCode),e.end()}catch(e){ao.warning(`Skipping tracing span processing due to an error: ${e.message}`)}}tryProcessResponse(e,t){try{e.setAttribute("http.status_code",t.status);const a=t.headers.get("x-ms-request-id");a&&e.setAttribute("serviceRequestId",a),e.setStatus({code:ze.OK}),e.end()}catch(e){ao.warning(`Skipping tracing span processing due to an error: ${e.message}`)}}}const io={enable:!0};class oo extends qi{constructor(e,t,a){super(e,t),this.keepAliveOptions=a}async sendRequest(e){return e.keepAlive=this.keepAliveOptions.enable,this._nextPolicy.sendRequest(e)}}function mo(e="x-ms-client-request-id"){return{create:(t,a)=>new lo(t,a,e)}}class lo extends qi{constructor(e,t,a){super(e,t),this._requestIdHeaderName=a}sendRequest(e){return e.headers.contains(this._requestIdHeaderName)||e.headers.set(this._requestIdHeaderName,e.requestId),this._nextPolicy.sendRequest(e)}}class co{constructor(){this._rawQuery={}}any(){return Object.keys(this._rawQuery).length>0}keys(){return Object.keys(this._rawQuery)}set(e,t){const a=t;if(e)if(null!=a){const t=Array.isArray(a)?a:a.toString();this._rawQuery[e]=t}else delete this._rawQuery[e]}get(e){return e?this._rawQuery[e]:void 0}toString(){let e="";for(const t in this._rawQuery){e&&(e+="&");const a=this._rawQuery[t];if(Array.isArray(a)){const r=[];for(const e of a)r.push(`${t}=${e}`);e+=r.join("&")}else e+=`${t}=${a}`}return e}static parse(e){const t=new co;if(e){e.startsWith("?")&&(e=e.substring(1));let a="ParameterName",r="",s="";for(let n=0;n<e.length;++n){const i=e[n];switch(a){case"ParameterName":switch(i){case"=":a="ParameterValue";break;case"&":r="",s="";break;default:r+=i}break;case"ParameterValue":"&"===i?(t.set(r,s),r="",s="",a="ParameterName"):s+=i;break;default:throw new Error("Unrecognized URLQuery parse state: "+a)}}"ParameterValue"===a&&t.set(r,s)}return t}}class po{setScheme(e){e?this.set(e,"SCHEME"):this._scheme=void 0}getScheme(){return this._scheme}setHost(e){e?this.set(e,"SCHEME_OR_HOST"):this._host=void 0}getHost(){return this._host}setPort(e){null==e||""===e?this._port=void 0:this.set(e.toString(),"PORT")}getPort(){return this._port}setPath(e){if(e){const t=e.indexOf("://");if(-1!==t){const a=e.lastIndexOf("/",t);this.set(-1===a?e:e.substr(a+1),"SCHEME")}else this.set(e,"PATH")}else this._path=void 0}appendPath(e){if(e){let t=this.getPath();t&&(t.endsWith("/")||(t+="/"),e.startsWith("/")&&(e=e.substring(1)),e=t+e),this.set(e,"PATH")}}getPath(){return this._path}setQuery(e){this._query=e?co.parse(e):void 0}setQueryParameter(e,t){e&&(this._query||(this._query=new co),this._query.set(e,t))}getQueryParameterValue(e){return this._query?this._query.get(e):void 0}getQuery(){return this._query?this._query.toString():void 0}set(e,t){const a=new yo(e,t);for(;a.next();){const e=a.current();let t;if(e)switch(e.type){case"SCHEME":this._scheme=e.text||void 0;break;case"HOST":this._host=e.text||void 0;break;case"PORT":this._port=e.text||void 0;break;case"PATH":t=e.text||void 0,this._path&&"/"!==this._path&&"/"===t||(this._path=t);break;case"QUERY":this._query=co.parse(e.text);break;default:throw new Error(`Unrecognized URLTokenType: ${e.type}`)}}}toString(){let e="";return this._scheme&&(e+=`${this._scheme}://`),this._host&&(e+=this._host),this._port&&(e+=`:${this._port}`),this._path&&(this._path.startsWith("/")||(e+="/"),e+=this._path),this._query&&this._query.any()&&(e+=`?${this._query.toString()}`),e}replaceAll(e,t){e&&(this.setScheme(S(this.getScheme(),e,t)),this.setHost(S(this.getHost(),e,t)),this.setPort(S(this.getPort(),e,t)),this.setPath(S(this.getPath(),e,t)),this.setQuery(S(this.getQuery(),e,t)))}static parse(e){const t=new po;return t.set(e,"SCHEME_OR_HOST"),t}}class uo{constructor(e,t){this.text=e,this.type=t}static scheme(e){return new uo(e,"SCHEME")}static host(e){return new uo(e,"HOST")}static port(e){return new uo(e,"PORT")}static path(e){return new uo(e,"PATH")}static query(e){return new uo(e,"QUERY")}}class yo{constructor(e,t){this._text=e,this._textLength=e?e.length:0,this._currentState=null!=t?t:"SCHEME_OR_HOST",this._currentIndex=0}current(){return this._currentToken}next(){if(go(this))switch(this._currentState){case"SCHEME":!function(e){const t=function(e){return No(e,(e=>function(e){const t=e.charCodeAt(0);return 48<=t&&t<=57||65<=t&&t<=90||97<=t&&t<=122}(e)))}(e);e._currentToken=uo.scheme(t),go(e)?e._currentState="HOST":e._currentState="DONE"}(this);break;case"SCHEME_OR_HOST":!function(e){const t=fo(e,":","/","?");go(e)?":"===ho(e)?"://"===bo(e,3)?(e._currentToken=uo.scheme(t),e._currentState="HOST"):(e._currentToken=uo.host(t),e._currentState="PORT"):(e._currentToken=uo.host(t),"/"===ho(e)?e._currentState="PATH":e._currentState="QUERY"):(e._currentToken=uo.host(t),e._currentState="DONE")}(this);break;case"HOST":!function(e){"://"===bo(e,3)&&xo(e,3);const t=fo(e,":","/","?");e._currentToken=uo.host(t),go(e)?":"===ho(e)?e._currentState="PORT":"/"===ho(e)?e._currentState="PATH":e._currentState="QUERY":e._currentState="DONE"}(this);break;case"PORT":!function(e){":"===ho(e)&&xo(e);const t=fo(e,"/","?");e._currentToken=uo.port(t),go(e)?"/"===ho(e)?e._currentState="PATH":e._currentState="QUERY":e._currentState="DONE"}(this);break;case"PATH":!function(e){const t=fo(e,"?");e._currentToken=uo.path(t),go(e)?e._currentState="QUERY":e._currentState="DONE"}(this);break;case"QUERY":!function(e){"?"===ho(e)&&xo(e);const t=function(e){let t="";return e._currentIndex<e._textLength&&(t=e._text.substring(e._currentIndex),e._currentIndex=e._textLength),t}(e);e._currentToken=uo.query(t),e._currentState="DONE"}(this);break;default:throw new Error(`Unrecognized URLTokenizerState: ${this._currentState}`)}else this._currentToken=void 0;return!!this._currentToken}}function go(e){return e._currentIndex<e._textLength}function ho(e){return e._text[e._currentIndex]}function xo(e,t){go(e)&&(t||(t=1),e._currentIndex+=t)}function bo(e,t){let a=e._currentIndex+t;return e._textLength<a&&(a=e._textLength),e._text.substring(e._currentIndex,a)}function No(e,t){let a="";for(;go(e);){const r=ho(e);if(!t(r))break;a+=r,xo(e)}return a}function fo(e,...t){return No(e,(e=>-1===t.indexOf(e)))}const So="REDACTED",vo=["x-ms-client-request-id","x-ms-return-client-request-id","x-ms-useragent","x-ms-correlation-request-id","x-ms-request-id","client-request-id","ms-cv","return-client-request-id","traceparent","Access-Control-Allow-Credentials","Access-Control-Allow-Headers","Access-Control-Allow-Methods","Access-Control-Allow-Origin","Access-Control-Expose-Headers","Access-Control-Max-Age","Access-Control-Request-Headers","Access-Control-Request-Method","Origin","Accept","Accept-Encoding","Cache-Control","Connection","Content-Length","Content-Type","Date","ETag","Expires","If-Match","If-Modified-Since","If-None-Match","If-Unmodified-Since","Last-Modified","Pragma","Request-Id","Retry-After","Server","Transfer-Encoding","User-Agent","WWW-Authenticate"],Co=["api-version"];class Po{constructor({allowedHeaderNames:e=[],allowedQueryParameters:t=[]}={}){e=Array.isArray(e)?vo.concat(e):vo,t=Array.isArray(t)?Co.concat(t):Co,this.allowedHeaderNames=new Set(e.map((e=>e.toLowerCase()))),this.allowedQueryParameters=new Set(t.map((e=>e.toLowerCase())))}sanitize(e){const t=new Set;return JSON.stringify(e,((e,a)=>{if(a instanceof Error)return Object.assign(Object.assign({},a),{name:a.name,message:a.message});if("_headersMap"===e)return this.sanitizeHeaders(a);if("url"===e)return this.sanitizeUrl(a);if("query"===e)return this.sanitizeQuery(a);if("body"!==e&&"response"!==e&&"operationSpec"!==e){if(Array.isArray(a)||!("object"!=typeof(r=a)||null===r||Array.isArray(r)||r instanceof RegExp||r instanceof Date)){if(t.has(a))return"[Circular]";t.add(a)}var r;return a}}),2)}sanitizeHeaders(e){return this.sanitizeObject(e,this.allowedHeaderNames,((e,t)=>e[t].value))}sanitizeQuery(e){return this.sanitizeObject(e,this.allowedQueryParameters,((e,t)=>e[t]))}sanitizeObject(e,t,a){if("object"!=typeof e||null===e)return e;const r={};for(const s of Object.keys(e))t.has(s.toLowerCase())?r[s]=a(e,s):r[s]=So;return r}sanitizeUrl(e){if("string"!=typeof e||null===e)return e;const t=po.parse(e),a=t.getQuery();if(!a)return e;const r=co.parse(a);for(const e of r.keys())this.allowedQueryParameters.has(e.toLowerCase())||r.set(e,So);return t.setQuery(r.toString()),t.toString()}}const zo={},Ro=new Po;class wo extends Error{constructor(e,t,a,r,s){super(e),this.name="RestError",this.code=t,this.statusCode=a,this.request=r,this.response=s,Object.setPrototypeOf(this,wo.prototype)}[zo](){return`RestError: ${this.message} \n ${Ro.sanitize(this)}`}}if(wo.REQUEST_SEND_ERROR="REQUEST_SEND_ERROR",wo.PARSE_ERROR="PARSE_ERROR",!(self.document&&self.DOMParser&&self.Node&&self.XMLSerializer))throw new Error('This library depends on the following DOM objects: ["document", "DOMParser", "Node", "XMLSerializer"] to parse XML, but some of these are undefined. You may provide a polyfill to make these globally available in order to support your environment. For more information, please refer to https://aka.ms/azsdk/js/web-workers. ');let Oo,Eo,qo,Bo,To;function Mo(){return Oo||(Oo=document.implementation.createDocument(null,null,null)),Oo}function Io(){return Eo||(Eo=new DOMParser),Eo}function Ho(e,t){let a={};const r=e.childNodes.length,s=e.childNodes[0],n=s&&1===r&&s.nodeType===Node.TEXT_NODE&&s.nodeValue||void 0,i=function(e){return function(e){return!!e.attributes}(e)&&e.hasAttributes()?e:void 0}(e);if(i){a[o]={};for(let e=0;e<i.attributes.length;e++){const t=i.attributes[e];a[o][t.nodeName]=t.nodeValue}n&&(a[t.xmlCharKey]=n)}else 0===r?a="":n&&(a=n);if(!n)for(let s=0;s<r;s++){const r=e.childNodes[s];if(r.nodeType!==Node.TEXT_NODE){const e=Ho(r,t);a[r.nodeName]?Array.isArray(a[r.nodeName])?a[r.nodeName].push(e):a[r.nodeName]=[a[r.nodeName],e]:a[r.nodeName]=e}}return a}function Ao(e,t={}){var a,r,s;const n={rootName:null!==(a=t.rootName)&&void 0!==a?a:"root",includeRoot:null!==(r=t.includeRoot)&&void 0!==r&&r,xmlCharKey:null!==(s=t.xmlCharKey)&&void 0!==s?s:m},i=Do(e,n.rootName,n)[0];return'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+(qo||(qo=new XMLSerializer),qo).serializeToString(i)}function ko(e){const t=[];for(const a of Object.keys(e)){const r=Mo().createAttribute(a);r.value=e[a].toString(),t.push(r)}return t}function Do(e,t,a){if(null==e||"string"==typeof e||"number"==typeof e||"boolean"==typeof e){const a=Mo().createElement(t);return a.textContent=null==e?"":e.toString(),[a]}if(Array.isArray(e)){const r=[];for(const s of e)for(const e of Do(s,t,a))r.push(e);return r}if("object"==typeof e){const r=Mo().createElement(t);for(const t of Object.keys(e))if(t===o)for(const a of ko(e[t]))r.attributes.setNamedItem(a);else if(t===a.xmlCharKey)r.textContent=e[t].toString();else for(const s of Do(e[t],t,a))r.appendChild(s);return[r]}throw new Error(`Illegal value passed to buildObject: ${e}`)}function Lo(e,t){return{create:(a,r)=>new Uo(a,r,e,t)}}void 0!==self.trustedTypes&&(Bo=self.trustedTypes.createPolicy("@azure/core-http#xml.browser",{createHTML:e=>e}));const _o=["application/json","text/json"],jo=["application/xml","application/atom+xml"];class Uo extends qi{constructor(e,t,a,r={}){var s;super(e,t),this.jsonContentTypes=a&&a.json||_o,this.xmlContentTypes=a&&a.xml||jo,this.xmlCharKey=null!==(s=r.xmlCharKey)&&void 0!==s?s:m}async sendRequest(e){return this._nextPolicy.sendRequest(e).then((e=>function(e,t,a,r={}){var s,n,i;const o={rootName:null!==(s=r.rootName)&&void 0!==s?s:"",includeRoot:null!==(n=r.includeRoot)&&void 0!==n&&n,xmlCharKey:null!==(i=r.xmlCharKey)&&void 0!==i?i:m};return function(e,t,a,r){var s;const n=e=>{const t=`Error "${e}" occurred while parsing the response body - ${a.bodyAsText}.`,r=e.code||wo.PARSE_ERROR,s=new wo(t,r,a.status,a.request,a);return Promise.reject(s)};if(!((null===(s=a.request.streamResponseStatusCodes)||void 0===s?void 0:s.has(a.status))||a.request.streamResponseBody)&&a.bodyAsText){const s=a.bodyAsText,i=a.headers.get("Content-Type")||"",o=i?i.split(";").map((e=>e.toLowerCase())):[];if(0===o.length||o.some((t=>-1!==e.indexOf(t))))return new Promise((e=>{a.parsedBody=JSON.parse(s),e(a)})).catch(n);if(o.some((e=>-1!==t.indexOf(e))))return function(e,t={}){var a,r,s,n;try{const i={rootName:null!==(a=t.rootName)&&void 0!==a?a:"",includeRoot:null!==(r=t.includeRoot)&&void 0!==r&&r,xmlCharKey:null!==(s=t.xmlCharKey)&&void 0!==s?s:m},o=Io().parseFromString(null!==(n=null==Bo?void 0:Bo.createHTML(e))&&void 0!==n?n:e,"application/xml");let l;return function(e){const t=e.getElementsByTagName("parsererror");if(t.length>0&&function(){var e,t;if(void 0===To)try{const a=null!==(e=null==Bo?void 0:Bo.createHTML("INVALID"))&&void 0!==e?e:"INVALID";To=null!==(t=Io().parseFromString(a,"text/xml").getElementsByTagName("parsererror")[0].namespaceURI)&&void 0!==t?t:""}catch(e){To=""}return To}())for(let e=0;e<t.length;e++)if(t[e].namespaceURI===To)throw new Error(t[e].innerHTML)}(o),l=i.includeRoot?Ho(o,i):Ho(o.childNodes[0],i),Promise.resolve(l)}catch(e){return Promise.reject(e)}}(s,r).then((e=>(a.parsedBody=e,a))).catch(n)}return Promise.resolve(a)}(e,t,a,o).then((e=>{if(!function(e){const t=e.request.shouldDeserialize;let a;return a=void 0===t||("boolean"==typeof t?t:t(e)),a}(e))return e;const t=e.request.operationSpec;if(!t||!t.responses)return e;const s=function(e){let t;const a=e.request,r=a.operationSpec;if(r){const s=a.operationResponseGetter;t=s?s(r,e):r.responses[e.status]}return t}(e),{error:n,shouldReturnResponse:i}=function(e,t,a){var r;const s=200<=e.status&&e.status<300,n=function(e){const t=Object.keys(e.responses);return 0===t.length||1===t.length&&"default"===t[0]}(t)?s:!!a;if(n){if(!a)return{error:null,shouldReturnResponse:!1};if(!a.isError)return{error:null,shouldReturnResponse:!1}}const i=null!=a?a:t.responses.default,o=(null===(r=e.request.streamResponseStatusCodes)||void 0===r?void 0:r.has(e.status))||e.request.streamResponseBody?`Unexpected status code: ${e.status}`:e.bodyAsText,m=new wo(o,void 0,e.status,e.request,e);if(!i)throw m;const l=i.bodyMapper,d=i.headersMapper;try{if(e.parsedBody){const a=e.parsedBody;let r;if(l){let e=a;t.isXML&&l.type.name===De.Sequence&&(e="object"==typeof a?a[l.xmlElementName]:[]),r=t.serializer.deserialize(l,e,"error.response.parsedBody")}const s=a.error||r||a;m.code=s.code,s.message&&(m.message=s.message),l&&(m.response.parsedBody=r)}e.headers&&d&&(m.response.parsedHeaders=t.serializer.deserialize(d,e.headers.toJson(),"operationRes.parsedHeaders"))}catch(t){m.message=`Error "${t.message}" occurred in deserializing the responseBody - "${e.bodyAsText}" for the default response.`}return{error:m,shouldReturnResponse:!1}}(e,t,s);if(n)throw n;if(i)return e;if(s){if(s.bodyMapper){let a=e.parsedBody;t.isXML&&s.bodyMapper.type.name===De.Sequence&&(a="object"==typeof a?a[s.bodyMapper.xmlElementName]:[]);try{e.parsedBody=t.serializer.deserialize(s.bodyMapper,a,"operationRes.parsedBody",r)}catch(t){throw new wo(`Error ${t} occurred in deserializing the responseBody - ${e.bodyAsText}`,void 0,e.status,e.request,e)}}else"HEAD"===t.httpMethod&&(e.parsedBody=a.status>=200&&a.status<300);s.headersMapper&&(e.parsedHeaders=t.serializer.deserialize(s.headersMapper,e.headers.toJson(),"operationRes.parsedHeaders",r))}return e}))}(this.jsonContentTypes,this.xmlContentTypes,e,{xmlCharKey:this.xmlCharKey})))}}function Vo(e={}){return{create:(t,a)=>new Fo(t,a,e)}}class Fo extends qi{constructor(e,t,{logger:a=ao.info,allowedHeaderNames:r=[],allowedQueryParameters:s=[]}={}){super(e,t),this.logger=a,this.sanitizer=new Po({allowedHeaderNames:r,allowedQueryParameters:s})}get allowedHeaderNames(){return this.sanitizer.allowedHeaderNames}set allowedHeaderNames(e){this.sanitizer.allowedHeaderNames=e}get allowedQueryParameters(){return this.sanitizer.allowedQueryParameters}set allowedQueryParameters(e){this.sanitizer.allowedQueryParameters=e}sendRequest(e){return this.logger.enabled?(this.logRequest(e),this._nextPolicy.sendRequest(e).then((e=>this.logResponse(e)))):this._nextPolicy.sendRequest(e)}logRequest(e){this.logger(`Request: ${this.sanitizer.sanitize(e)}`)}logResponse(e){return this.logger(`Response status code: ${e.status}`),this.logger(`Headers: ${this.sanitizer.sanitize(e.headers)}`),e}}const $o=new Error("DisableResponseDecompressionPolicy is not supported in browser environment"),Ko=Ji("storage-blob"),Go="2021-10-04",Qo=268435456,Xo=4194304,Wo="https://storage.azure.com/.default",Jo="_",Yo="snapshot",Zo="versionid",em="timeout",tm="Content-ID",am="User-Agent",rm="",sm="\r\n",nm="HTTP/1.1",im=["Access-Control-Allow-Origin","Cache-Control","Content-Length","Content-Type","Date","Request-Id","traceparent","Transfer-Encoding","User-Agent","x-ms-client-request-id","x-ms-date","x-ms-error-code","x-ms-request-id","x-ms-return-client-request-id","x-ms-version","Accept-Ranges","Content-Disposition","Content-Encoding","Content-Language","Content-MD5","Content-Range","ETag","Last-Modified","Server","Vary","x-ms-content-crc64","x-ms-copy-action","x-ms-copy-completion-time","x-ms-copy-id","x-ms-copy-progress","x-ms-copy-status","x-ms-has-immutability-policy","x-ms-has-legal-hold","x-ms-lease-state","x-ms-lease-status","x-ms-range","x-ms-request-server-encrypted","x-ms-server-encrypted","x-ms-snapshot","x-ms-source-range","If-Match","If-Modified-Since","If-None-Match","If-Unmodified-Since","x-ms-access-tier","x-ms-access-tier-change-time","x-ms-access-tier-inferred","x-ms-account-kind","x-ms-archive-status","x-ms-blob-append-offset","x-ms-blob-cache-control","x-ms-blob-committed-block-count","x-ms-blob-condition-appendpos","x-ms-blob-condition-maxsize","x-ms-blob-content-disposition","x-ms-blob-content-encoding","x-ms-blob-content-language","x-ms-blob-content-length","x-ms-blob-content-md5","x-ms-blob-content-type","x-ms-blob-public-access","x-ms-blob-sequence-number","x-ms-blob-type","x-ms-copy-destination-snapshot","x-ms-creation-time","x-ms-default-encryption-scope","x-ms-delete-snapshots","x-ms-delete-type-permanent","x-ms-deny-encryption-scope-override","x-ms-encryption-algorithm","x-ms-if-sequence-number-eq","x-ms-if-sequence-number-le","x-ms-if-sequence-number-lt","x-ms-incremental-copy","x-ms-lease-action","x-ms-lease-break-period","x-ms-lease-duration","x-ms-lease-id","x-ms-lease-time","x-ms-page-write","x-ms-proposed-lease-id","x-ms-range-get-content-md5","x-ms-rehydrate-priority","x-ms-sequence-number-action","x-ms-sku-name","x-ms-source-content-md5","x-ms-source-if-match","x-ms-source-if-modified-since","x-ms-source-if-none-match","x-ms-source-if-unmodified-since","x-ms-tag-count","x-ms-encryption-key-sha256","x-ms-if-tags","x-ms-source-if-tags"],om=["comp","maxresults","rscc","rscd","rsce","rscl","rsct","se","si","sip","sp","spr","sr","srt","ss","st","sv","include","marker","prefix","copyid","restype","blockid","blocklisttype","delimiter","prevsnapshot","ske","skoid","sks","skt","sktid","skv","snapshot"],mm=["10000","10001","10002","10003","10004","10100","10101","10102","10103","10104","11000","11001","11002","11003","11004","11100","11101","11102","11103","11104"];function lm(e,t){const a=e.split(";");for(const e of a)if(e.trim().startsWith(t))return e.trim().match(t+"=(.*)")[1];return""}function dm(e){let t="";e.startsWith("UseDevelopmentStorage=true")&&(t=function(e){let t="";if(-1!==e.search("DevelopmentStorageProxyUri=")){const a=e.split(";");for(const e of a)e.trim().startsWith("DevelopmentStorageProxyUri=")&&(t=e.trim().match("DevelopmentStorageProxyUri=(.*)")[1])}return t}(e),e="DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;");let a=lm(e,"BlobEndpoint");if(a=a.endsWith("/")?a.slice(0,-1):a,-1!==e.search("DefaultEndpointsProtocol=")&&-1!==e.search("AccountKey=")){let r="",s="",n=Buffer.from("accountKey","base64"),i="";if(s=lm(e,"AccountName"),n=Buffer.from(lm(e,"AccountKey"),"base64"),!a){r=lm(e,"DefaultEndpointsProtocol");const t=r.toLowerCase();if("https"!==t&&"http"!==t)throw new Error("Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'");if(i=lm(e,"EndpointSuffix"),!i)throw new Error("Invalid EndpointSuffix in the provided Connection String");a=`${r}://${s}.blob.${i}`}if(!s)throw new Error("Invalid AccountName in the provided Connection String");if(0===n.length)throw new Error("Invalid AccountKey in the provided Connection String");return{kind:"AccountConnString",url:a,accountName:s,accountKey:n,proxyUri:t}}{const t=lm(e,"SharedAccessSignature"),r=fm(a);if(!a)throw new Error("Invalid BlobEndpoint in the provided SAS Connection String");if(!t)throw new Error("Invalid SharedAccessSignature in the provided SAS Connection String");return{kind:"SASConnString",url:a,accountName:r,accountSas:t}}}function cm(e,t){const a=po.parse(e);let r=a.getPath();return r=r?r.endsWith("/")?`${r}${t}`:`${r}/${t}`:t,a.setPath(r),a.toString()}function pm(e,t,a){const r=po.parse(e);return r.setQueryParameter(t,a),r.toString()}function um(e,t){return po.parse(e).getQueryParameterValue(t)}function ym(e){return po.parse(e).getPath()}function gm(e){const t=po.parse(e),a=t.getPath();if(!a)throw new RangeError("Invalid url without valid path.");let r=t.getQuery()||"";return r=r.trim(),""!==r&&(r=r.startsWith("?")?r:`?${r}`),`${a}${r}`}function hm(e,t){const a=po.parse(e);let r=a.getQuery();return r?r+="&"+t:r=t,a.setQuery(r),a.toString()}function xm(e,t=!0){const a=e.toISOString();return t?a.substring(0,a.length-1)+"0000Z":a.substring(0,a.length-5)+"Z"}function bm(e,t){e.length>42&&(e=e.slice(0,42));return a=e+function(e,t,a=" "){return String.prototype.padStart?e.padStart(t,a):(a=a||" ",e.length>t?e:((t-=e.length)>a.length&&(a+=a.repeat(t/a.length)),a.slice(0,t)+e))}(t.toString(),48-e.length,"0"),b?Buffer.from(a).toString("base64"):btoa(a);var a}function Nm(e,t){return e.toLocaleLowerCase()===t.toLocaleLowerCase()}function fm(e){const t=po.parse(e);let a;try{return a="blob"===t.getHost().split(".")[1]?t.getHost().split(".")[0]:Sm(t)?t.getPath().split("/")[1]:"",a}catch(e){throw new Error("Unable to extract accountName with provided information.")}}function Sm(e){if(void 0===e.getHost())return!1;const t=e.getHost()+(void 0===e.getPort()?"":":"+e.getPort());return/^.*:.*:.*$|^localhost(:[0-9]+)?$|^(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])(\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])){3}(:[0-9]+)?$/.test(t)||void 0!==e.getPort()&&mm.includes(e.getPort())}function vm(e){if(void 0===e)return;const t=[];for(const a in e)if(Object.prototype.hasOwnProperty.call(e,a)){const r=e[a];t.push(`${encodeURIComponent(a)}=${encodeURIComponent(r)}`)}return t.join("&")}function Cm(e){if(void 0===e)return;const t={blobTagSet:[]};for(const a in e)if(Object.prototype.hasOwnProperty.call(e,a)){const r=e[a];t.blobTagSet.push({key:a,value:r})}return t}function Pm(e){if(void 0===e)return;const t={};for(const a of e.blobTagSet)t[a.key]=a.value;return t}function zm(e){if(void 0!==e)switch(e.kind){case"csv":return{format:{type:"delimited",delimitedTextConfiguration:{columnSeparator:e.columnSeparator||",",fieldQuote:e.fieldQuote||"",recordSeparator:e.recordSeparator,escapeChar:e.escapeCharacter||"",headersPresent:e.hasHeaders||!1}}};case"json":return{format:{type:"json",jsonTextConfiguration:{recordSeparator:e.recordSeparator}}};case"arrow":return{format:{type:"arrow",arrowConfiguration:{schema:e.schema}}};case"parquet":return{format:{type:"parquet"}};default:throw Error("Invalid BlobQueryTextConfiguration.")}}function Rm(e){if(!e)return;if("policy-id"in e)return;const t=[];for(const a in e){const r=a.split("_"),s="or-";r[0].startsWith(s)&&(r[0]=r[0].substring(s.length));const n={ruleId:r[1],replicationStatus:e[a]},i=t.findIndex((e=>e.policyId===r[0]));i>-1?t[i].rules.push(n):t.push({policyId:r[0],rules:[n]})}return t}function wm(e,t){return e.credential=t,e}function Om(e){return e?e.scheme+" "+e.value:void 0}function Em(e){return e.encoded?decodeURIComponent(e.content):e.content}function qm(e){var t;return Object.assign(Object.assign({},e),{segment:{blobPrefixes:null===(t=e.segment.blobPrefixes)||void 0===t?void 0:t.map((e=>({name:Em(e.name)}))),blobItems:e.segment.blobItems.map((e=>Object.assign(Object.assign({},e),{name:Em(e.name)})))}})}function Bm(e){if(void 0!==e)return"true"===e||"false"!==e&&void 0}function Tm(e){return void 0!==e.$&&void 0!==e["#"]?{encoded:Bm(e.$.Encoded),content:e["#"]}:{encoded:!1,content:e}}function Mm(e){const t=e;return t.properties=function(e){const t=e;return e["Creation-Time"]&&(t.createdOn=new Date(e["Creation-Time"]),delete t["Creation-Time"]),e["Last-Modified"]&&(t.lastModified=new Date(e["Last-Modified"]),delete t["Last-Modified"]),e.Etag&&(t.etag=e.Etag,delete t.Etag),e["Content-Length"]&&(t.contentLength=parseFloat(e["Content-Length"]),delete t["Content-Length"]),e["Content-Type"]&&(t.contentType=e["Content-Type"],delete t["Content-Type"]),e["Content-Encoding"]&&(t.contentEncoding=e["Content-Encoding"],delete t["Content-Encoding"]),e["Content-Language"]&&(t.contentLanguage=e["Content-Language"],delete t["Content-Language"]),e["Content-MD5"]&&(t.contentMD5=function(e){if(b)return Buffer.from(e,"base64");{const t=atob(e),a=new Uint8Array(t.length);for(let e=0;e<t.length;e++)a[e]=t.charCodeAt(e);return a}}(e["Content-MD5"]),delete t["Content-MD5"]),e["Content-Disposition"]&&(t.contentDisposition=e["Content-Disposition"],delete t["Content-Disposition"]),e["Cache-Control"]&&(t.cacheControl=e["Cache-Control"],delete t["Cache-Control"]),e["x-ms-blob-sequence-number"]&&(t.blobSequenceNumber=parseFloat(e["x-ms-blob-sequence-number"]),delete t["x-ms-blob-sequence-number"]),e.BlobType&&(t.blobType=e.BlobType,delete t.BlobType),e.LeaseStatus&&(t.leaseStatus=e.LeaseStatus,delete t.LeaseStatus),e.LeaseState&&(t.leaseState=e.LeaseState,delete t.LeaseState),e.LeaseDuration&&(t.leaseDuration=e.LeaseDuration,delete t.LeaseDuration),e.CopyId&&(t.copyId=e.CopyId,delete t.CopyId),e.CopyStatus&&(t.copyStatus=e.CopyStatus,delete t.CopyStatus),e.CopySource&&(t.copySource=e.CopySource,delete t.CopySource),e.CopyProgress&&(t.copyProgress=e.CopyProgress,delete t.CopyProgress),e.CopyCompletionTime&&(t.copyCompletedOn=new Date(e.CopyCompletionTime),delete t.CopyCompletionTime),e.CopyStatusDescription&&(t.copyStatusDescription=e.CopyStatusDescription,delete t.CopyStatusDescription),e.ServerEncrypted&&(t.serverEncrypted=Bm(e.ServerEncrypted),delete t.ServerEncrypted),e.IncrementalCopy&&(t.incrementalCopy=Bm(e.IncrementalCopy),delete t.IncrementalCopy),e.DestinationSnapshot&&(t.destinationSnapshot=e.DestinationSnapshot,delete t.DestinationSnapshot),e.DeletedTime&&(t.deletedOn=new Date(e.DeletedTime),delete t.DeletedTime),e.RemainingRetentionDays&&(t.remainingRetentionDays=parseFloat(e.RemainingRetentionDays),delete t.RemainingRetentionDays),e.AccessTier&&(t.accessTier=e.AccessTier,delete t.AccessTier),e.AccessTierInferred&&(t.accessTierInferred=Bm(e.AccessTierInferred),delete t.AccessTierInferred),e.ArchiveStatus&&(t.archiveStatus=e.ArchiveStatus,delete t.ArchiveStatus),e.CustomerProvidedKeySha256&&(t.customerProvidedKeySha256=e.CustomerProvidedKeySha256,delete t.CustomerProvidedKeySha256),e.EncryptionScope&&(t.encryptionScope=e.EncryptionScope,delete t.EncryptionScope),e.AccessTierChangeTime&&(t.accessTierChangedOn=new Date(e.AccessTierChangeTime),delete t.AccessTierChangeTime),e.TagCount&&(t.tagCount=parseFloat(e.TagCount),delete t.TagCount),e["Expiry-Time"]&&(t.expiresOn=new Date(e["Expiry-Time"]),delete t["Expiry-Time"]),e.Sealed&&(t.isSealed=Bm(e.Sealed),delete t.Sealed),e.RehydratePriority&&(t.rehydratePriority=e.RehydratePriority,delete t.RehydratePriority),e.LastAccessTime&&(t.lastAccessedOn=new Date(e.LastAccessTime),delete t.LastAccessTime),e.ImmutabilityPolicyUntilDate&&(t.immutabilityPolicyExpiresOn=new Date(e.ImmutabilityPolicyUntilDate),delete t.ImmutabilityPolicyUntilDate),e.ImmutabilityPolicyMode&&(t.immutabilityPolicyMode=e.ImmutabilityPolicyMode,delete t.ImmutabilityPolicyMode),e.LegalHold&&(t.legalHold=Bm(e.LegalHold),delete t.LegalHold),t}(e.Properties),delete t.Properties,t.name=Tm(e.Name),delete t.Name,t.deleted=Bm(e.Deleted),delete t.Deleted,e.Snapshot&&(t.snapshot=e.Snapshot,delete t.Snapshot),e.VersionId&&(t.versionId=e.VersionId,delete t.VersionId),e.IsCurrentVersion&&(t.isCurrentVersion=Bm(e.IsCurrentVersion),delete t.IsCurrentVersion),e.Metadata&&(t.metadata=e.Metadata,delete t.Metadata),e.Tags&&(t.blobTags=function(e){if(void 0===e||void 0===e.TagSet||void 0===e.TagSet.Tag)return;const t=[];return e.TagSet.Tag instanceof Array?e.TagSet.Tag.forEach((e=>{t.push(Hm(e))})):t.push(Hm(e.TagSet.Tag)),{blobTagSet:t}}(e.Tags),delete t.Tags),e.OrMetadata&&(t.objectReplicationMetadata=e.OrMetadata,delete t.OrMetadata),e.HasVersionsOnly&&(t.hasVersionsOnly=Bm(e.HasVersionsOnly),delete t.HasVersionsOnly),t}function Im(e){return{name:Tm(e.Name)}}function Hm(e){return{key:e.Key,value:e.Value}}function Am(e){const t=[];return e instanceof Array?e.forEach((e=>{t.push(Mm(e))})):t.push(Mm(e)),t}function*km(e){let t=[],a=[];e.pageRange&&(t=e.pageRange),e.clearRange&&(a=e.clearRange);let r=0,s=0;for(;r<t.length&&s<a.length;)t[r].start<a[s].start?(yield{start:t[r].start,end:t[r].end,isClear:!1},++r):(yield{start:a[s].start,end:a[s].end,isClear:!0},++s);for(;r<t.length;++r)yield{start:t[r].start,end:t[r].end,isClear:!1};for(;s<a.length;++s)yield{start:a[s].start,end:a[s].end,isClear:!0}}function Dm(e){const t=e.split("/");for(let e=0;e<t.length;e++)t[e]=encodeURIComponent(t[e]);return t.join("/")}class Lm extends qi{constructor(e,t){super(e,t)}async sendRequest(e){return b||("GET"!==e.method.toUpperCase()&&"HEAD"!==e.method.toUpperCase()||(e.url=pm(e.url,Jo,(new Date).getTime().toString())),e.headers.remove("Cookie"),e.headers.remove("Content-Length")),this._nextPolicy.sendRequest(e)}}class _m{create(e,t){return new Lm(e,t)}}class jm extends Error{constructor(e){super(e),this.name="AbortError"}}var Um;!function(e){e[e.EXPONENTIAL=0]="EXPONENTIAL",e[e.FIXED=1]="FIXED"}(Um||(Um={}));const Vm={maxRetryDelayInMs:12e4,maxTries:4,retryDelayInMs:4e3,retryPolicyType:Um.EXPONENTIAL,secondaryHost:"",tryTimeoutInMs:void 0},Fm=new jm("The operation was aborted.");class $m extends qi{constructor(e,t,a=Vm){super(e,t),this.retryOptions={retryPolicyType:a.retryPolicyType?a.retryPolicyType:Vm.retryPolicyType,maxTries:a.maxTries&&a.maxTries>=1?Math.floor(a.maxTries):Vm.maxTries,tryTimeoutInMs:a.tryTimeoutInMs&&a.tryTimeoutInMs>=0?a.tryTimeoutInMs:Vm.tryTimeoutInMs,retryDelayInMs:a.retryDelayInMs&&a.retryDelayInMs>=0?Math.min(a.retryDelayInMs,a.maxRetryDelayInMs?a.maxRetryDelayInMs:Vm.maxRetryDelayInMs):Vm.retryDelayInMs,maxRetryDelayInMs:a.maxRetryDelayInMs&&a.maxRetryDelayInMs>=0?a.maxRetryDelayInMs:Vm.maxRetryDelayInMs,secondaryHost:a.secondaryHost?a.secondaryHost:Vm.secondaryHost}}async sendRequest(e){return this.attemptSendRequest(e,!1,1)}async attemptSendRequest(e,t,a){const r=e.clone(),s=t||!this.retryOptions.secondaryHost||!("GET"===e.method||"HEAD"===e.method||"OPTIONS"===e.method)||a%2==1;let n;s||(r.url=function(e,t){const a=po.parse(e);return a.setHost(t),a.toString()}(r.url,this.retryOptions.secondaryHost)),this.retryOptions.tryTimeoutInMs&&(r.url=pm(r.url,em,Math.floor(this.retryOptions.tryTimeoutInMs/1e3).toString()));try{if(Ko.info(`RetryPolicy: =====> Try=${a} ${s?"Primary":"Secondary"}`),n=await this._nextPolicy.sendRequest(r),!this.shouldRetry(s,a,n))return n;t=t||!s&&404===n.status}catch(e){if(Ko.error(`RetryPolicy: Caught error, message: ${e.message}, code: ${e.code}`),!this.shouldRetry(s,a,n,e))throw e}return await this.delay(s,a,e.abortSignal),this.attemptSendRequest(e,t,++a)}shouldRetry(e,t,a,r){if(t>=this.retryOptions.maxTries)return Ko.info(`RetryPolicy: Attempt(s) ${t} >= maxTries ${this.retryOptions.maxTries}, no further try.`),!1;const s=["ETIMEDOUT","ESOCKETTIMEDOUT","ECONNREFUSED","ECONNRESET","ENOENT","ENOTFOUND","TIMEOUT","EPIPE","REQUEST_SEND_ERROR"];if(r)for(const e of s)if(r.name.toUpperCase().includes(e)||r.message.toUpperCase().includes(e)||r.code&&r.code.toString().toUpperCase()===e)return Ko.info(`RetryPolicy: Network error ${e} found, will retry.`),!0;if(a||r){const t=a?a.status:r?r.statusCode:0;if(!e&&404===t)return Ko.info("RetryPolicy: Secondary access with 404, will retry."),!0;if(503===t||500===t)return Ko.info(`RetryPolicy: Will retry for status code ${t}.`),!0}return!("PARSE_ERROR"!==(null==r?void 0:r.code)||!(null==r?void 0:r.message.startsWith('Error "Error: Unclosed root tag'))||(Ko.info("RetryPolicy: Incomplete XML response likely due to service timeout, will retry."),0))}async delay(e,t,a){let r=0;if(e)switch(this.retryOptions.retryPolicyType){case Um.EXPONENTIAL:r=Math.min((Math.pow(2,t-1)-1)*this.retryOptions.retryDelayInMs,this.retryOptions.maxRetryDelayInMs);break;case Um.FIXED:r=this.retryOptions.retryDelayInMs}else r=1e3*Math.random();return Ko.info(`RetryPolicy: Delay for ${r}ms`),async function(e,t,a){return new Promise(((r,s)=>{let n;const i=()=>{void 0!==n&&clearTimeout(n),s(a)};n=setTimeout((()=>{void 0!==t&&t.removeEventListener("abort",i),r()}),e),void 0!==t&&t.addEventListener("abort",i)}))}(r,a,Fm)}}class Km{constructor(e){this.retryOptions=e}create(e,t){return new $m(e,t,this.retryOptions)}}class Gm extends qi{sendRequest(e){return this._nextPolicy.sendRequest(this.signRequest(e))}signRequest(e){return e}}class Qm extends Gm{constructor(e,t){super(e,t)}}class Xm{create(e,t){throw new Error("Method should be implemented in children classes.")}}class Wm extends Xm{create(e,t){return new Qm(e,t)}}var Jm=a(598);function Ym(e){return e.toLowerCase()}function Zm(e){if(e&&"object"==typeof e){const t=e;if("function"==typeof t.rawHeaders&&"function"==typeof t.clone&&"function"==typeof t.get&&"function"==typeof t.set&&"function"==typeof t.contains&&"function"==typeof t.remove&&"function"==typeof t.headersArray&&"function"==typeof t.headerValues&&"function"==typeof t.headerNames&&"function"==typeof t.toJson)return!0}return!1}class el{constructor(e){if(this._headersMap={},e)for(const t in e)this.set(t,e[t])}set(e,t){this._headersMap[Ym(e)]={name:e,value:t.toString()}}get(e){const t=this._headersMap[Ym(e)];return t?t.value:void 0}contains(e){return!!this._headersMap[Ym(e)]}remove(e){const t=this.contains(e);return delete this._headersMap[Ym(e)],t}rawHeaders(){return this.toJson({preserveCase:!0})}headersArray(){const e=[];for(const t in this._headersMap)e.push(this._headersMap[t]);return e}headerNames(){const e=[],t=this.headersArray();for(let a=0;a<t.length;++a)e.push(t[a].name);return e}headerValues(){const e=[],t=this.headersArray();for(let a=0;a<t.length;++a)e.push(t[a].value);return e}toJson(e={}){const t={};if(e.preserveCase)for(const e in this._headersMap){const a=this._headersMap[e];t[a.name]=a.value}else for(const e in this._headersMap){const a=this._headersMap[e];t[Ym(a.name)]=a.value}return t}toString(){return JSON.stringify(this.toJson({preserveCase:!0}))}clone(){const e={};for(const t in this._headersMap){const a=this._headersMap[t];e[a.name]=a.value}return new el(e)}}class tl extends qi{constructor(e,t,a){super(e,t),this.telemetry=a}async sendRequest(e){return b&&(e.headers||(e.headers=new el),e.headers.get(am)||e.headers.set(am,this.telemetry)),this._nextPolicy.sendRequest(e)}}class al{constructor(e){const t=[];if(b){if(e){const a=e.userAgentPrefix||"";a.length>0&&-1===t.indexOf(a)&&t.push(a)}const a="azsdk-js-storageblob/12.12.0";-1===t.indexOf(a)&&t.push(a);let r=`(NODE-VERSION ${process.version})`;Jm&&(r=`(NODE-VERSION ${process.version}; ${Jm.type()} ${Jm.release()})`),-1===t.indexOf(r)&&t.push(r)}this.telemetryString=t.join(" ")}create(e,t){return new tl(e,t,this.telemetryString)}}class rl{sendRequest(e){var t;const a=new XMLHttpRequest;if(e.proxySettings)throw new Error("HTTP proxy is not supported in browser environment");const r=e.abortSignal;if(r){if(r.aborted)return Promise.reject(new jm("The operation was aborted."));const e=()=>{a.abort()};r.addEventListener("abort",e),a.addEventListener("readystatechange",(()=>{a.readyState===XMLHttpRequest.DONE&&r.removeEventListener("abort",e)}))}if(sl(a.upload,e.onUploadProgress),sl(a,e.onDownloadProgress),e.formData){const t=e.formData,a=new FormData,r=(e,t)=>{t&&Object.prototype.hasOwnProperty.call(t,"value")&&Object.prototype.hasOwnProperty.call(t,"options")?a.append(e,t.value,t.options):a.append(e,t)};for(const e of Object.keys(t)){const a=t[e];if(Array.isArray(a))for(let t=0;t<a.length;t++)r(e,a[t]);else r(e,a)}e.body=a,e.formData=void 0;const s=e.headers.get("Content-Type");s&&-1!==s.indexOf("multipart/form-data")&&e.headers.remove("Content-Type")}a.open(e.method,e.url),a.timeout=e.timeout,a.withCredentials=e.withCredentials;for(const t of e.headers.headersArray())a.setRequestHeader(t.name,t.value);return a.responseType=(null===(t=e.streamResponseStatusCodes)||void 0===t?void 0:t.size)||e.streamResponseBody?"blob":"text",a.send(void 0===e.body?null:e.body),"blob"===a.responseType?new Promise(((t,r)=>{!function(e,t,a,r){e.addEventListener("readystatechange",(()=>{var s;if(e.readyState===XMLHttpRequest.HEADERS_RECEIVED)if(t.streamResponseBody||(null===(s=t.streamResponseStatusCodes)||void 0===s?void 0:s.has(e.status))){const r=new Promise(((a,r)=>{e.addEventListener("load",(()=>{a(e.response)})),il(t,e,r)}));a({request:t,status:e.status,headers:nl(e),blobBody:r})}else e.addEventListener("load",(()=>{if(e.response){const s=new FileReader;s.onload=function(r){var s;const n=null===(s=r.target)||void 0===s?void 0:s.result;a({request:t,status:e.status,headers:nl(e),bodyAsText:n})},s.onerror=function(e){r(s.error)},s.readAsText(e.response,"UTF-8")}else a({request:t,status:e.status,headers:nl(e)})}))}))}(a,e,t,r),il(e,a,r)})):new Promise((function(t,r){a.addEventListener("load",(()=>t({request:e,status:a.status,headers:nl(a),bodyAsText:a.responseText}))),il(e,a,r)}))}}function sl(e,t){t&&e.addEventListener("progress",(e=>t({loadedBytes:e.loaded})))}function nl(e){const t=new el,a=e.getAllResponseHeaders().trim().split(/[\r\n]+/);for(const e of a){const a=e.indexOf(":"),r=e.slice(0,a),s=e.slice(a+2);t.set(r,s)}return t}function il(e,t,a){t.addEventListener("error",(()=>a(new wo(`Failed to send request to ${e.url}`,wo.REQUEST_SEND_ERROR,void 0,e))));const r=new jm("The operation was aborted.");t.addEventListener("abort",(()=>a(r))),t.addEventListener("timeout",(()=>a(r)))}const ol=new rl;function ml(e,t){return new Promise(((a,r)=>{let s,n;const i=()=>{var e;return r(new jm(null!==(e=null==t?void 0:t.abortErrorMsg)&&void 0!==e?e:"The operation was aborted."))},o=()=>{(null==t?void 0:t.abortSignal)&&n&&t.abortSignal.removeEventListener("abort",n)};if(n=()=>(null!=s&&clearTimeout(s),o(),i()),(null==t?void 0:t.abortSignal)&&t.abortSignal.aborted)return i();s=setTimeout((()=>{o(),a()}),e),(null==t?void 0:t.abortSignal)&&t.abortSignal.addEventListener("abort",n)}))}const ll="authorization",dl={forcedRefreshWindowInMs:1e3,retryIntervalInMs:3e3,refreshWindowInMs:12e4};function cl(e,t,a){let r=null,s=null;const n=Object.assign(Object.assign({},dl),a),i={get isRefreshing(){return null!==r},get shouldRefresh(){var e;return!i.isRefreshing&&(null!==(e=null==s?void 0:s.expiresOnTimestamp)&&void 0!==e?e:0)-n.refreshWindowInMs<Date.now()},get mustRefresh(){return null===s||s.expiresOnTimestamp-n.forcedRefreshWindowInMs<Date.now()}};function o(a){var o;return i.isRefreshing||(r=async function(e,t,a){async function r(){if(!(Date.now()<a)){const t=await e();if(null===t)throw new Error("Failed to refresh access token.");return t}try{return await e()}catch(e){return null}}let s=await r();for(;null===s;)await ml(t),s=await r();return s}((()=>e.getToken(t,a)),n.retryIntervalInMs,null!==(o=null==s?void 0:s.expiresOnTimestamp)&&void 0!==o?o:Date.now()).then((e=>(r=null,s=e,s))).catch((e=>{throw r=null,s=null,e}))),r}return async e=>i.mustRefresh?o(e):(i.shouldRefresh&&o(e),s)}function pl(e){if(!e||"object"!=typeof e)return!1;const t=e;return Array.isArray(t.factories)&&"object"==typeof t.options&&"function"==typeof t.toServiceClientOptions}class ul{constructor(e,t={}){this.factories=e,this.options=Object.assign(Object.assign({},t),{httpClient:t.httpClient||ol})}toServiceClientOptions(){return{httpClient:this.options.httpClient,requestPolicyFactories:this.factories}}}function yl(e,t={}){var a;void 0===e&&(e=new Wm);const r=new al(t.userAgentOptions),s=[so({userAgent:r.telemetryString}),(n=t.keepAliveOptions,{create:(e,t)=>new oo(e,t,n||io)}),r,mo(),new _m,new Km(t.retryOptions),Lo(void 0,{xmlCharKey:"#"}),Vo({logger:Ko.info,allowedHeaderNames:im,allowedQueryParameters:om})];var n;return b&&(s.push(P(t.proxyOptions)),s.push({create:(e,t)=>{throw $o}})),s.push(v(e)?wm(function(e,t){let a=cl(e,t);class r extends qi{constructor(e,t){super(e,t)}async sendRequest(t){if(!t.url.toLowerCase().startsWith("https://"))throw new Error("Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.");const r=a,s=(await r({abortSignal:t.abortSignal,tracingOptions:{tracingContext:t.tracingContext}})).token;t.headers.set(ll,`Bearer ${s}`);const n=await this._nextPolicy.sendRequest(t);if(401===(null==n?void 0:n.status)){const r=function(e){const t=e.headers.get("WWW-Authenticate");if(401===e.status&&t)return t}(n);if(r){const s=function(e){return`${e.slice("Bearer ".length).trim()} `.split(" ").filter((e=>e)).map((e=>(([e,t])=>({[e]:t}))(e.trim().split("=")))).reduce(((e,t)=>Object.assign(Object.assign({},e),t)),{})}(r),n=s.resource_id+"/.default",i=po.parse(s.authorization_uri).getPath().split("/")[1],o=cl(e,n),m=(await o({abortSignal:t.abortSignal,tracingOptions:{tracingContext:t.tracingContext},tenantId:i})).token;return a=o,t.headers.set(ll,`Bearer ${m}`),this._nextPolicy.sendRequest(t)}}return n}}return{create:(e,t)=>new r(e,t)}}(e,null!==(a=t.audience)&&void 0!==a?a:Wo),e):e),new ul(s,t)}class gl{}const hl=["GET","HEAD"];class xl extends qi{constructor(e,t,a=20){super(e,t),this.maxRetries=a}sendRequest(e){return this._nextPolicy.sendRequest(e).then((e=>bl(this,e,0)))}}function bl(e,t,a){const{request:r,status:s}=t,n=t.headers.get("location");if(n&&(300===s||301===s&&hl.includes(r.method)||302===s&&hl.includes(r.method)||303===s&&"POST"===r.method||307===s)&&(!e.maxRetries||a<e.maxRetries)){const t=po.parse(r.url);return t.setPath(n),r.url=t.toString(),303===s&&(r.method="GET",delete r.body),e._nextPolicy.sendRequest(r).then((t=>bl(e,t,a+1)))}return Promise.resolve(t)}function Nl(e){return"number"==typeof e}function fl(e,t,a,r,s){return!!t(r,s)&&a.retryCount<e}function Sl(e,t={retryCount:0,retryInterval:0},a){a&&(t.error&&(a.innerError=t.error),t.error=a),t.retryCount++;let r=Math.pow(2,t.retryCount-1)-1;return r*=.8*e.retryInterval+Math.floor(Math.random()*(.4*e.retryInterval)),t.retryInterval=Math.min(e.minRetryInterval+r,e.maxRetryInterval),t}const vl="authorization",Cl="Retry-After";var Pl;!function(e){e[e.Exponential=0]="Exponential"}(Pl||(Pl={}));class zl extends qi{constructor(e,t,a,r,s){super(e,t),this.retryCount=Nl(a)?a:3,this.retryInterval=Nl(r)?r:3e4,this.maxRetryInterval=Nl(s)?s:9e4}sendRequest(e){return this._nextPolicy.sendRequest(e.clone()).then((t=>Rl(this,e,t))).catch((t=>Rl(this,e,t.response,void 0,t)))}}async function Rl(e,t,a,r,s){r=Sl({retryInterval:e.retryInterval,minRetryInterval:0,maxRetryInterval:e.maxRetryInterval},r,s);const n=t.abortSignal&&t.abortSignal.aborted;if(n||!fl(e.retryCount,(function(e){const t=null==e?void 0:e.status;return!(503===t&&(null==a?void 0:a.headers.get(Cl))||void 0===t||t<500&&408!==t||501===t||505===t)}),r,a)){if(n||s||!a)throw r.error||new wo("Failed to send the request.",wo.REQUEST_SEND_ERROR,a&&a.status,a&&a.request,a);return a}ao.info(`Retrying request in ${r.retryInterval}`);try{await ml(r.retryInterval);const a=await e._nextPolicy.sendRequest(t.clone());return Rl(e,t,a,r)}catch(s){return Rl(e,t,a,r,s)}}function wl(e){return Ol(e.parameterPath,e.mapper)}function Ol(e,t){let a;return a="string"==typeof e?e:Array.isArray(e)?e.join("."):t.serializedName,a}class El{constructor(e,t,a,r,s,n,i,o,m,l,d,c,p,u,y){this.streamResponseBody=n,this.streamResponseStatusCodes=y,this.url=e||"",this.method=t||"GET",this.headers=Zm(s)?s:new el(s),this.body=a,this.query=r,this.formData=void 0,this.withCredentials=i||!1,this.abortSignal=o,this.timeout=m||0,this.onUploadProgress=l,this.onDownloadProgress=d,this.proxySettings=c,this.keepAlive=p,this.decompressResponse=u,this.requestId=this.headers.get("x-ms-client-request-id")||N()}validateRequestProperties(){if(!this.method)throw new Error("WebResource.method is required.");if(!this.url)throw new Error("WebResource.url is required.")}prepare(e){if(!e)throw new Error("options object is required");if(void 0===e.method||null===e.method||"string"!=typeof e.method.valueOf())throw new Error("options.method must be a string.");if(e.url&&e.pathTemplate)throw new Error("options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.");if(!(void 0!==e.pathTemplate&&null!==e.pathTemplate&&"string"==typeof e.pathTemplate.valueOf()||void 0!==e.url&&null!==e.url&&"string"==typeof e.url.valueOf()))throw new Error("Please provide exactly one of options.pathTemplate or options.url.");if(e.url){if("string"!=typeof e.url)throw new Error('options.url must be of type "string".');this.url=e.url}if(e.method){const t=["GET","PUT","HEAD","DELETE","OPTIONS","POST","PATCH","TRACE"];if(-1===t.indexOf(e.method.toUpperCase()))throw new Error('The provided method "'+e.method+'" is invalid. Supported HTTP methods are: '+JSON.stringify(t))}if(this.method=e.method.toUpperCase(),e.pathTemplate){const{pathTemplate:t,pathParameters:a}=e;if("string"!=typeof t)throw new Error('options.pathTemplate must be of type "string".');e.baseUrl||(e.baseUrl="https://management.azure.com");const r=e.baseUrl;let s=r+(r.endsWith("/")?"":"/")+(t.startsWith("/")?t.slice(1):t);const n=s.match(/({[\w-]*\s*[\w-]*})/gi);if(n&&n.length){if(!a)throw new Error(`pathTemplate: ${t} has been provided. Hence, options.pathParameters must also be provided.`);n.forEach((function(e){const r=e.slice(1,-1),n=a[r];if(null==n||"string"!=typeof n&&"object"!=typeof n){const e=JSON.stringify(a,void 0,2);throw new Error(`pathTemplate: ${t} contains the path parameter ${r} however, it is not present in parameters: ${e}.The value of the path parameter can either be a "string" of the form { ${r}: "some sample value" } or it can be an "object" of the form { "${r}": { value: "some sample value", skipUrlEncoding: true } }.`)}if("string"==typeof n.valueOf()&&(s=s.replace(e,encodeURIComponent(n))),"object"==typeof n.valueOf()){if(!n.value)throw new Error(`options.pathParameters[${r}] is of type "object" but it does not contain a "value" property.`);s=n.skipUrlEncoding?s.replace(e,n.value):s.replace(e,encodeURIComponent(n.value))}}))}this.url=s}if(e.queryParameters){const t=e.queryParameters;if("object"!=typeof t)throw new Error('options.queryParameters must be of type object. It should be a JSON object of "query-parameter-name" as the key and the "query-parameter-value" as the value. The "query-parameter-value" may be fo type "string" or an "object" of the form { value: "query-parameter-value", skipUrlEncoding: true }.');this.url&&-1===this.url.indexOf("?")&&(this.url+="?");const a=[];this.query={};for(const e in t){const r=t[e];if(r)if("string"==typeof r)a.push(e+"="+encodeURIComponent(r)),this.query[e]=encodeURIComponent(r);else if("object"==typeof r){if(!r.value)throw new Error(`options.queryParameters[${e}] is of type "object" but it does not contain a "value" property.`);r.skipUrlEncoding?(a.push(e+"="+r.value),this.query[e]=r.value):(a.push(e+"="+encodeURIComponent(r.value)),this.query[e]=encodeURIComponent(r.value))}}this.url+=a.join("&")}if(e.headers){const t=e.headers;for(const a of Object.keys(e.headers))this.headers.set(a,t[a])}return this.headers.get("accept-language")||this.headers.set("accept-language","en-US"),this.headers.get("x-ms-client-request-id")||e.disableClientRequestId||this.headers.set("x-ms-client-request-id",this.requestId),this.headers.get("Content-Type")||this.headers.set("Content-Type","application/json; charset=utf-8"),this.body=e.body,void 0!==e.body&&null!==e.body&&(e.bodyIsStream?(this.headers.get("Transfer-Encoding")||this.headers.set("Transfer-Encoding","chunked"),"application/octet-stream"!==this.headers.get("Content-Type")&&this.headers.set("Content-Type","application/octet-stream")):(e.serializationMapper&&(this.body=new Ee(e.mappers).serialize(e.serializationMapper,e.body,"requestBody")),e.disableJsonStringifyOnBody||(this.body=JSON.stringify(e.body)))),e.spanOptions&&(this.spanOptions=e.spanOptions),e.tracingContext&&(this.tracingContext=e.tracingContext),this.abortSignal=e.abortSignal,this.onDownloadProgress=e.onDownloadProgress,this.onUploadProgress=e.onUploadProgress,this}clone(){const e=new El(this.url,this.method,this.body,this.query,this.headers&&this.headers.clone(),this.streamResponseBody,this.withCredentials,this.abortSignal,this.timeout,this.onUploadProgress,this.onDownloadProgress,this.proxySettings,this.keepAlive,this.decompressResponse,this.streamResponseStatusCodes);return this.formData&&(e.formData=this.formData),this.operationSpec&&(e.operationSpec=this.operationSpec),this.shouldDeserialize&&(e.shouldDeserialize=this.shouldDeserialize),this.operationResponseGetter&&(e.operationResponseGetter=this.operationResponseGetter),e}}const ql=function(){return"x-ms-useragent"};function Bl(){const e=[{key:"core-http",value:"2.3.1"}],t=function(){const e=self.navigator;return[{key:"OS",value:(e.oscpu||e.platform).replace(" ","")}]}();return function(e,t=" ",a="/"){return e.map((e=>{const t=e.value?`${a}${e.value}`:"";return`${e.key}${t}`})).join(t)}(e.concat(t))}class Tl extends qi{constructor(e,t,a,r){super(e,t),this._nextPolicy=e,this._options=t,this.headerKey=a,this.headerValue=r}sendRequest(e){return this.addUserAgentHeader(e),this._nextPolicy.sendRequest(e)}addUserAgentHeader(e){e.headers||(e.headers=new el),!e.headers.get(this.headerKey)&&this.headerValue&&e.headers.set(this.headerKey,this.headerValue)}}const Ml={forcedRefreshWindowInMs:1e3,retryIntervalInMs:3e3,refreshWindowInMs:12e4};function Il(e,t){const a=function(e,t,a){let r=null,s=null;const n=Object.assign(Object.assign({},Ml),a),i={get isRefreshing(){return null!==r},get shouldRefresh(){var e;return!i.isRefreshing&&(null!==(e=null==s?void 0:s.expiresOnTimestamp)&&void 0!==e?e:0)-n.refreshWindowInMs<Date.now()},get mustRefresh(){return null===s||s.expiresOnTimestamp-n.forcedRefreshWindowInMs<Date.now()}};function o(a){var o;return i.isRefreshing||(r=async function(e,t,a){async function r(){if(!(Date.now()<a)){const t=await e();if(null===t)throw new Error("Failed to refresh access token.");return t}try{return await e()}catch(e){return null}}let s=await r();for(;null===s;)await ml(t),s=await r();return s}((()=>e.getToken(t,a)),n.retryIntervalInMs,null!==(o=null==s?void 0:s.expiresOnTimestamp)&&void 0!==o?o:Date.now()).then((e=>(r=null,s=e,s))).catch((e=>{throw r=null,s=null,e}))),r}return async e=>i.mustRefresh?o(e):(i.shouldRefresh&&o(e),s)}(e,t);class r extends qi{constructor(e,t){super(e,t)}async sendRequest(e){if(!e.url.toLowerCase().startsWith("https://"))throw new Error("Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.");const{token:t}=await a({abortSignal:e.abortSignal,tracingOptions:{tracingContext:e.tracingContext}});return e.headers.set(vl,`Bearer ${t}`),this._nextPolicy.sendRequest(e)}}return{create:(e,t)=>new r(e,t)}}let Hl;class Al extends qi{constructor(e,t,a=30){super(e,t),this._retryTimeout=a}sendRequest(e){return this._nextPolicy.sendRequest(e.clone()).then((t=>function(e,t,a){if(409===a.status){const r=function(e){let t,a;if(e){try{a=JSON.parse(e)}catch(e){}if(a&&a.error&&a.error.message&&a.error.code&&"MissingSubscriptionRegistration"===a.error.code){const e=a.error.message.match(/.*'(.*)'/i);e&&(t=e.pop())}}return t}(a.bodyAsText);if(r){const s=function(e){let t;const a=e.match(/.*\/subscriptions\/[a-f0-9-]+\//gi);if(!a||!a[0])throw new Error(`Unable to extract subscriptionId from the given url - ${e}.`);return t=a[0],t}(t.url);return async function(e,t,a,r){const s=`${t}providers/${a}/register?api-version=2016-02-01`,n=`${t}providers/${a}?api-version=2016-02-01`,i=kl(r);i.method="POST",i.url=s;if(200!==(await e._nextPolicy.sendRequest(i)).status)throw new Error(`Autoregistration of ${a} failed. Please try registering manually.`);return Dl(e,n,r)}(e,s,r,t).catch((()=>!1)).then((r=>r?(t.headers.set("x-ms-client-request-id",N()),e._nextPolicy.sendRequest(t.clone())):a))}}return Promise.resolve(a)}(this,e,t)))}}function kl(e,t=!1){const a=e.clone();return t&&(a.url=e.url),a.headers.set("x-ms-client-request-id",N()),a.headers.set("Content-Type","application/json; charset=utf-8"),a}async function Dl(e,t,a){const r=kl(a);r.url=t,r.method="GET";const s=await e._nextPolicy.sendRequest(r),n=s.parsedBody;return!(!s.parsedBody||!n.registrationState||"Registered"!==n.registrationState)||(await ml(1e3*e._retryTimeout),Dl(e,t,a))}class Ll extends qi{constructor(e,t,a){super(e,t),this.authenticationProvider=a}signRequest(e){return this.authenticationProvider.signRequest(e)}sendRequest(e){return this.signRequest(e).then((e=>this._nextPolicy.sendRequest(e)))}}class _l extends qi{constructor(e,t,a,r,s,n){super(e,t),this.retryCount=Nl(a)?a:3,this.retryInterval=Nl(r)?r:3e4,this.minRetryInterval=Nl(s)?s:3e3,this.maxRetryInterval=Nl(n)?n:9e4}sendRequest(e){return this._nextPolicy.sendRequest(e.clone()).catch((t=>jl(this,e,t.response,t)))}}async function jl(e,t,a,r,s){if(s=Sl(e,s,r),!fl(e.retryCount,(function(e,t){return!(!t||!t.code||"ETIMEDOUT"!==t.code&&"ESOCKETTIMEDOUT"!==t.code&&"ECONNREFUSED"!==t.code&&"ECONNRESET"!==t.code&&"ENOENT"!==t.code)}),s,a,r))return r?Promise.reject(s.error):a;try{return await ml(s.retryInterval),e._nextPolicy.sendRequest(t.clone())}catch(r){return jl(e,t,a,r,s)}}const Ul={TooManyRequests:429,ServiceUnavailable:503},Vl="The operation was aborted.";class Fl extends qi{constructor(e,t,a){super(e,t),this.numberOfRetries=0,this._handleResponse=a||this._defaultResponseHandler}async sendRequest(e){const t=await this._nextPolicy.sendRequest(e.clone());return t.status!==Ul.TooManyRequests&&t.status!==Ul.ServiceUnavailable?t:this._handleResponse(e,t)}async _defaultResponseHandler(e,t){var a;const r=t.headers.get(Cl);if(r){const t=Fl.parseRetryAfterHeader(r);if(t){if(this.numberOfRetries+=1,await ml(t,{abortSignal:e.abortSignal,abortErrorMsg:Vl}),null===(a=e.abortSignal)||void 0===a?void 0:a.aborted)throw new jm(Vl);return this.numberOfRetries<3?this.sendRequest(e):this._nextPolicy.sendRequest(e)}}return t}static parseRetryAfterHeader(e){const t=Number(e);return Number.isNaN(t)?Fl.parseDateRetryAfterHeader(e):1e3*t}static parseDateRetryAfterHeader(e){try{const t=Date.now(),a=Date.parse(e)-t;return Number.isNaN(a)?void 0:a}catch(e){return}}}class $l{constructor(e,t){let a;if(t||(t={}),this._withCredentials=t.withCredentials||!1,this._httpClient=t.httpClient||(Hl||(Hl=new rl),Hl),this._requestPolicyOptions=new Bi(t.httpPipelineLogger),Array.isArray(t.requestPolicyFactories))ao.info("ServiceClient: using custom request policies"),a=t.requestPolicyFactories;else{let s;if(v(e)){ao.info("ServiceClient: creating bearer token authentication policy from provided credentials");const a=()=>{let a;const r=this,s=t;return{create(t,n){const i=function(e,t){if(null==e?void 0:e.credentialScopes){const t=e.credentialScopes;return Array.isArray(t)?t.map((e=>new URL(e).toString())):new URL(t).toString()}if(t)return`${t}/.default`}(s,r.baseUri);if(!i)throw new Error("When using credential, the ServiceClient must contain a baseUri or a credentialScopes in ServiceClientOptions. Unable to create a bearerTokenAuthenticationPolicy");return null==a&&(a=Il(e,i)),a.create(t,n)}}};s=a()}else if(e&&"function"==typeof e.signRequest)ao.info("ServiceClient: creating signing policy from provided credentials"),r=e,s={create:(e,t)=>new Ll(e,t,r)};else if(null!=e)throw new Error("The credentials argument must implement the TokenCredential interface");if(ao.info("ServiceClient: using default request policies"),a=function(e,t){const a=[];t.generateClientRequestIdHeader&&a.push(mo(t.clientRequestIdHeaderName)),e&&a.push(e);const r=Kl(t.userAgentHeaderName,ql),s=Kl(t.userAgent,Bl);return r&&s&&a.push(function(e){const t=e&&null!=e.key?e.key:"x-ms-useragent",a=e&&null!=e.value?e.value:Bl();return{create:(e,r)=>new Tl(e,r,t,a)}}({key:r,value:s})),a.push(function(e=20){return{create:(t,a)=>new xl(t,a,e)}}()),a.push(function(e=30){return{create:(t,a)=>new Al(t,a,e)}}(t.rpRegistrationRetryTimeout)),t.noRetryPolicy||(a.push({create:(e,t)=>new zl(e,t,undefined,undefined,undefined)}),a.push({create:(e,t)=>new _l(e,t,void 0,void 0,void 0,void 0)}),a.push({create:(e,t)=>new Fl(e,t)})),a.push(Lo(t.deserializationContentTypes)),b&&a.push(P(t.proxySettings)),a.push(Vo({logger:ao.info})),a}(s,t),t.requestPolicyFactories){const e=t.requestPolicyFactories(a);e&&(a=e)}}var r;this._requestPolicyFactories=a}sendRequest(e){if(null==e||"object"!=typeof e)throw new Error("options cannot be null or undefined and it must be of type object.");let t;try{!function(e){if(e&&"object"==typeof e){const t=e;if("string"==typeof t.url&&"string"==typeof t.method&&"object"==typeof t.headers&&Zm(t.headers)&&"function"==typeof t.validateRequestProperties&&"function"==typeof t.prepare&&"function"==typeof t.clone)return!0}return!1}(e)?(t=new El,t=t.prepare(e)):(e.validateRequestProperties(),t=e)}catch(e){return Promise.reject(e)}let a=this._httpClient;if(this._requestPolicyFactories&&this._requestPolicyFactories.length>0)for(let e=this._requestPolicyFactories.length-1;e>=0;--e)a=this._requestPolicyFactories[e].create(a,this._requestPolicyOptions);return a.sendRequest(t)}async sendOperationRequest(e,t,a){var r;"function"==typeof e.options&&(a=e.options,e.options=void 0);const s=null===(r=e.options)||void 0===r?void 0:r.serializerOptions,n=new El;let i;try{const a=t.baseUrl||this.baseUri;if(!a)throw new Error("If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.");n.method=t.httpMethod,n.operationSpec=t;const r=po.parse(a);if(t.path&&r.appendPath(t.path),t.urlParameters&&t.urlParameters.length>0)for(const a of t.urlParameters){let n=Gl(this,e,a,t.serializer);n=t.serializer.serialize(a.mapper,n,wl(a),s),a.skipEncoding||(n=encodeURIComponent(n)),r.replaceAll(`{${a.mapper.serializedName||wl(a)}}`,n)}if(t.queryParameters&&t.queryParameters.length>0)for(const a of t.queryParameters){let n=Gl(this,e,a,t.serializer);if(null!=n){if(n=t.serializer.serialize(a.mapper,n,wl(a),s),void 0!==a.collectionFormat&&null!==a.collectionFormat)if(a.collectionFormat===as.Multi){if(0===n.length)continue;for(const e in n){const t=n[e];n[e]=null==t?"":t.toString()}}else a.collectionFormat!==as.Ssv&&a.collectionFormat!==as.Tsv||(n=n.join(a.collectionFormat));if(!a.skipEncoding)if(Array.isArray(n))for(const e in n)void 0!==n[e]&&null!==n[e]&&(n[e]=encodeURIComponent(n[e]));else n=encodeURIComponent(n);void 0!==a.collectionFormat&&null!==a.collectionFormat&&a.collectionFormat!==as.Multi&&a.collectionFormat!==as.Ssv&&a.collectionFormat!==as.Tsv&&(n=n.join(a.collectionFormat)),r.setQueryParameter(a.mapper.serializedName||wl(a),n)}}n.url=r.toString();const l=t.contentType||this.requestContentType;if(l&&t.requestBody&&n.headers.set("Content-Type",l),t.headerParameters)for(const a of t.headerParameters){let r=Gl(this,e,a,t.serializer);if(null!=r){r=t.serializer.serialize(a.mapper,r,wl(a),s);const e=a.mapper.headerCollectionPrefix;if(e)for(const t of Object.keys(r))n.headers.set(e+t,r[t]);else n.headers.set(a.mapper.serializedName||wl(a),r)}}const d=e.options;if(d){if(d.customHeaders)for(const e in d.customHeaders)n.headers.set(e,d.customHeaders[e]);d.abortSignal&&(n.abortSignal=d.abortSignal),d.timeout&&(n.timeout=d.timeout),d.onUploadProgress&&(n.onUploadProgress=d.onUploadProgress),d.onDownloadProgress&&(n.onDownloadProgress=d.onDownloadProgress),d.spanOptions&&(n.spanOptions=d.spanOptions),d.tracingContext&&(n.tracingContext=d.tracingContext),void 0!==d.shouldDeserialize&&null!==d.shouldDeserialize&&(n.shouldDeserialize=d.shouldDeserialize)}let c,p;n.withCredentials=this._withCredentials,function(e,t,a,r){var s,n,i,l,d,c;const p=null!==(n=null===(s=a.options)||void 0===s?void 0:s.serializerOptions)&&void 0!==n?n:{},u={rootName:null!==(i=p.rootName)&&void 0!==i?i:"",includeRoot:null!==(l=p.includeRoot)&&void 0!==l&&l,xmlCharKey:null!==(d=p.xmlCharKey)&&void 0!==d?d:m},y=p.xmlCharKey;if(r.requestBody&&r.requestBody.mapper){t.body=Gl(e,a,r.requestBody,r.serializer);const s=r.requestBody.mapper,{required:n,xmlName:i,xmlElementName:m,serializedName:l,xmlNamespace:d,xmlNamespacePrefix:p}=s,g=s.type.name;try{if(void 0!==t.body&&null!==t.body||n){const e=wl(r.requestBody);t.body=r.serializer.serialize(s,t.body,e,u);const a=g===De.Stream;if(r.isXML){const e=p?`xmlns:${p}`:"xmlns",r=function(e,t,a,r,s){if(e&&!["Composite","Sequence","Dictionary"].includes(a)){const a={};return a[s.xmlCharKey]=r,a[o]={[t]:e},a}return r}(d,e,g,t.body,u);g===De.Sequence?t.body=Ao(function(e,t,a,r){if(Array.isArray(e)||(e=[e]),!a||!r)return{[t]:e};const s={[t]:e};return s[o]={[a]:r},s}(r,m||i||l,e,d),{rootName:i||l,xmlCharKey:y}):a||(t.body=Ao(r,{rootName:i||l,xmlCharKey:y}))}else{if(g===De.String&&((null===(c=r.contentType)||void 0===c?void 0:c.match("text/plain"))||"text"===r.mediaType))return;a||(t.body=JSON.stringify(t.body))}}}catch(e){throw new Error(`Error "${e.message}" occurred in serializing the payload - ${JSON.stringify(l,void 0,"  ")}.`)}}else if(r.formDataParameters&&r.formDataParameters.length>0){t.formData={};for(const s of r.formDataParameters){const n=Gl(e,a,s,r.serializer);if(null!=n){const e=s.mapper.serializedName||wl(s);t.formData[e]=r.serializer.serialize(s.mapper,n,wl(s),u)}}}}(this,n,e,t),void 0===n.streamResponseStatusCodes&&(n.streamResponseStatusCodes=function(e){const t=new Set;for(const a in e.responses){const r=e.responses[a];r.bodyMapper&&r.bodyMapper.type.name===De.Stream&&t.add(Number(a))}return t}(t));try{c=await this.sendRequest(n)}catch(e){p=e}p?(p.response&&(p.details=Wl(p.response,t.responses[p.statusCode]||t.responses.default)),i=Promise.reject(p)):i=Promise.resolve(Wl(c,t.responses[c.status]))}catch(e){i=Promise.reject(e)}const l=a;return l&&i.then((e=>l(null,e._response.parsedBody,e._response.request,e._response))).catch((e=>l(e))),i}}function Kl(e,t){let a;return"string"==typeof e?a=e:(a=t(),"function"==typeof e&&(a=e(a))),a}function Gl(e,t,a,r){return Ql(e,t,a.parameterPath,a.mapper,r)}function Ql(e,t,a,r,s){var n;let i;"string"==typeof a&&(a=[a]);const o=null===(n=t.options)||void 0===n?void 0:n.serializerOptions;if(Array.isArray(a)){if(a.length>0){if(r.isConstant)i=r.defaultValue;else{let s=Xl(t,a);s.propertyFound||(s=Xl(e,a));let n=!1;s.propertyFound||(n=r.required||"options"===a[0]&&2===a.length),i=n?r.defaultValue:s.propertyValue}const n=Ol(a,r);s.serialize(r,i,n,o)}}else{r.required&&(i={});for(const n in a){const m=r.type.modelProperties[n],l=a[n],d=Ql(e,t,l,m,s),c=Ol(l,m);s.serialize(m,d,c,o),null!=d&&(i||(i={}),i[n]=d)}}return i}function Xl(e,t){const a={propertyFound:!1};let r=0;for(;r<t.length;++r){const a=t[r];if(null==e||!(a in e))break;e=e[a]}return r===t.length&&(a.propertyValue=e,a.propertyFound=!0),a}function Wl(e,t){const a=e.parsedHeaders,r=t&&t.bodyMapper,s=t=>Object.defineProperty(t,"_response",{value:e});if(r){const t=r.type.name;if("Stream"===t)return s(Object.assign(Object.assign({},a),{blobBody:e.blobBody,readableStreamBody:e.readableStreamBody}));const n="Composite"===t&&r.type.modelProperties||{},i=Object.keys(n).some((e=>""===n[e].serializedName));if("Sequence"===t||i){const t=[...e.parsedBody||[]];for(const a of Object.keys(n))n[a].serializedName&&(t[a]=e.parsedBody[a]);if(a)for(const e of Object.keys(a))t[e]=a[e];return s(t),t}if("Composite"===t||"Dictionary"===t)return s(Object.assign(Object.assign({},a),e.parsedBody))}return r||"HEAD"===e.request.method||"object"!=typeof(n=e.parsedBody)&&"function"!=typeof n||null===n?s(Object.assign(Object.assign({},a),{body:e.parsedBody})):s(Object.assign(Object.assign({},a),e.parsedBody));var n}class Jl extends $l{constructor(e,t){if(void 0===e)throw new Error("'url' cannot be null");if(t||(t={}),!t.userAgent){const e=Bl();t.userAgent=`azure-storage-blob/12.12.0 ${e}`}super(void 0,t),this.requestContentType="application/json; charset=utf-8",this.baseUri=t.endpoint||"{url}",this.url=e,this.version=t.version||"2021-10-04"}}class Yl{constructor(e,t){this.url=function(e){const t=po.parse(e);let a=t.getPath();return a=a||"/",a=encodeURIComponent(a).replace(/%2F/g,"/").replace(/'/g,"%27").replace(/\+/g,"%20").replace(/%25/g,"%"),t.setPath(a),t.toString()}(e),this.accountName=fm(e),this.pipeline=t,this.storageClientContext=new Jl(this.url,t.toServiceClientOptions()),this.isHttps=Nm(function(e){return po.parse(e).getScheme()}(this.url)||"","https"),this.credential=new Wm;for(const e of this.pipeline.factories)b&&e instanceof gl||e instanceof Wm?this.credential=e:v(e.credential)&&(this.credential=e.credential);this.storageClientContext.requestContentType=void 0}}const Zl=Ti({packagePrefix:"Azure.Storage.Blob",namespace:"Microsoft.Storage"});function ed(e){var t,a;return{spanOptions:null===(t=null==e?void 0:e.tracingOptions)||void 0===t?void 0:t.spanOptions,tracingContext:null===(a=null==e?void 0:e.tracingOptions)||void 0===a?void 0:a.tracingContext}}class td{constructor(){this.read=!1,this.add=!1,this.create=!1,this.write=!1,this.delete=!1,this.deleteVersion=!1,this.tag=!1,this.move=!1,this.execute=!1,this.setImmutabilityPolicy=!1,this.permanentDelete=!1}static parse(e){const t=new td;for(const a of e)switch(a){case"r":t.read=!0;break;case"a":t.add=!0;break;case"c":t.create=!0;break;case"w":t.write=!0;break;case"d":t.delete=!0;break;case"x":t.deleteVersion=!0;break;case"t":t.tag=!0;break;case"m":t.move=!0;break;case"e":t.execute=!0;break;case"i":t.setImmutabilityPolicy=!0;break;case"y":t.permanentDelete=!0;break;default:throw new RangeError(`Invalid permission: ${a}`)}return t}static from(e){const t=new td;return e.read&&(t.read=!0),e.add&&(t.add=!0),e.create&&(t.create=!0),e.write&&(t.write=!0),e.delete&&(t.delete=!0),e.deleteVersion&&(t.deleteVersion=!0),e.tag&&(t.tag=!0),e.move&&(t.move=!0),e.execute&&(t.execute=!0),e.setImmutabilityPolicy&&(t.setImmutabilityPolicy=!0),e.permanentDelete&&(t.permanentDelete=!0),t}toString(){const e=[];return this.read&&e.push("r"),this.add&&e.push("a"),this.create&&e.push("c"),this.write&&e.push("w"),this.delete&&e.push("d"),this.deleteVersion&&e.push("x"),this.tag&&e.push("t"),this.move&&e.push("m"),this.execute&&e.push("e"),this.setImmutabilityPolicy&&e.push("i"),this.permanentDelete&&e.push("y"),e.join("")}}class ad{constructor(){this.read=!1,this.add=!1,this.create=!1,this.write=!1,this.delete=!1,this.deleteVersion=!1,this.list=!1,this.tag=!1,this.move=!1,this.execute=!1,this.setImmutabilityPolicy=!1,this.permanentDelete=!1,this.filterByTags=!1}static parse(e){const t=new ad;for(const a of e)switch(a){case"r":t.read=!0;break;case"a":t.add=!0;break;case"c":t.create=!0;break;case"w":t.write=!0;break;case"d":t.delete=!0;break;case"l":t.list=!0;break;case"t":t.tag=!0;break;case"x":t.deleteVersion=!0;break;case"m":t.move=!0;break;case"e":t.execute=!0;break;case"i":t.setImmutabilityPolicy=!0;break;case"y":t.permanentDelete=!0;break;case"f":t.filterByTags=!0;break;default:throw new RangeError(`Invalid permission ${a}`)}return t}static from(e){const t=new ad;return e.read&&(t.read=!0),e.add&&(t.add=!0),e.create&&(t.create=!0),e.write&&(t.write=!0),e.delete&&(t.delete=!0),e.list&&(t.list=!0),e.deleteVersion&&(t.deleteVersion=!0),e.tag&&(t.tag=!0),e.move&&(t.move=!0),e.execute&&(t.execute=!0),e.setImmutabilityPolicy&&(t.setImmutabilityPolicy=!0),e.permanentDelete&&(t.permanentDelete=!0),e.filterByTags&&(t.filterByTags=!0),t}toString(){const e=[];return this.read&&e.push("r"),this.add&&e.push("a"),this.create&&e.push("c"),this.write&&e.push("w"),this.delete&&e.push("d"),this.deleteVersion&&e.push("x"),this.list&&e.push("l"),this.tag&&e.push("t"),this.move&&e.push("m"),this.execute&&e.push("e"),this.setImmutabilityPolicy&&e.push("i"),this.permanentDelete&&e.push("y"),this.filterByTags&&e.push("f"),e.join("")}}class rd{}function sd(e){return e.end?`${e.start}-${e.end}`:e.start}var nd;!function(e){e.Https="https",e.HttpsAndHttp="https,http"}(nd||(nd={}));class id{constructor(e,t,a,r,s,n,i,o,m,l,d,c,p,u,y,g,h,x,b,N){this.version=e,this.signature=t,void 0!==a&&"string"!=typeof a?(this.permissions=a.permissions,this.services=a.services,this.resourceTypes=a.resourceTypes,this.protocol=a.protocol,this.startsOn=a.startsOn,this.expiresOn=a.expiresOn,this.ipRangeInner=a.ipRange,this.identifier=a.identifier,this.encryptionScope=a.encryptionScope,this.resource=a.resource,this.cacheControl=a.cacheControl,this.contentDisposition=a.contentDisposition,this.contentEncoding=a.contentEncoding,this.contentLanguage=a.contentLanguage,this.contentType=a.contentType,a.userDelegationKey&&(this.signedOid=a.userDelegationKey.signedObjectId,this.signedTenantId=a.userDelegationKey.signedTenantId,this.signedStartsOn=a.userDelegationKey.signedStartsOn,this.signedExpiresOn=a.userDelegationKey.signedExpiresOn,this.signedService=a.userDelegationKey.signedService,this.signedVersion=a.userDelegationKey.signedVersion,this.preauthorizedAgentObjectId=a.preauthorizedAgentObjectId,this.correlationId=a.correlationId)):(this.services=r,this.resourceTypes=s,this.expiresOn=o,this.permissions=a,this.protocol=n,this.startsOn=i,this.ipRangeInner=m,this.encryptionScope=N,this.identifier=l,this.resource=d,this.cacheControl=c,this.contentDisposition=p,this.contentEncoding=u,this.contentLanguage=y,this.contentType=g,h&&(this.signedOid=h.signedObjectId,this.signedTenantId=h.signedTenantId,this.signedStartsOn=h.signedStartsOn,this.signedExpiresOn=h.signedExpiresOn,this.signedService=h.signedService,this.signedVersion=h.signedVersion,this.preauthorizedAgentObjectId=x,this.correlationId=b))}get ipRange(){if(this.ipRangeInner)return{end:this.ipRangeInner.end,start:this.ipRangeInner.start}}toString(){const e=["sv","ss","srt","spr","st","se","sip","si","ses","skoid","sktid","skt","ske","sks","skv","sr","sp","sig","rscc","rscd","rsce","rscl","rsct","saoid","scid"],t=[];for(const a of e)switch(a){case"sv":this.tryAppendQueryParameter(t,a,this.version);break;case"ss":this.tryAppendQueryParameter(t,a,this.services);break;case"srt":this.tryAppendQueryParameter(t,a,this.resourceTypes);break;case"spr":this.tryAppendQueryParameter(t,a,this.protocol);break;case"st":this.tryAppendQueryParameter(t,a,this.startsOn?xm(this.startsOn,!1):void 0);break;case"se":this.tryAppendQueryParameter(t,a,this.expiresOn?xm(this.expiresOn,!1):void 0);break;case"sip":this.tryAppendQueryParameter(t,a,this.ipRange?sd(this.ipRange):void 0);break;case"si":this.tryAppendQueryParameter(t,a,this.identifier);break;case"ses":this.tryAppendQueryParameter(t,a,this.encryptionScope);break;case"skoid":this.tryAppendQueryParameter(t,a,this.signedOid);break;case"sktid":this.tryAppendQueryParameter(t,a,this.signedTenantId);break;case"skt":this.tryAppendQueryParameter(t,a,this.signedStartsOn?xm(this.signedStartsOn,!1):void 0);break;case"ske":this.tryAppendQueryParameter(t,a,this.signedExpiresOn?xm(this.signedExpiresOn,!1):void 0);break;case"sks":this.tryAppendQueryParameter(t,a,this.signedService);break;case"skv":this.tryAppendQueryParameter(t,a,this.signedVersion);break;case"sr":this.tryAppendQueryParameter(t,a,this.resource);break;case"sp":this.tryAppendQueryParameter(t,a,this.permissions);break;case"sig":this.tryAppendQueryParameter(t,a,this.signature);break;case"rscc":this.tryAppendQueryParameter(t,a,this.cacheControl);break;case"rscd":this.tryAppendQueryParameter(t,a,this.contentDisposition);break;case"rsce":this.tryAppendQueryParameter(t,a,this.contentEncoding);break;case"rscl":this.tryAppendQueryParameter(t,a,this.contentLanguage);break;case"rsct":this.tryAppendQueryParameter(t,a,this.contentType);break;case"saoid":this.tryAppendQueryParameter(t,a,this.preauthorizedAgentObjectId);break;case"scid":this.tryAppendQueryParameter(t,a,this.correlationId)}return t.join("&")}tryAppendQueryParameter(e,t,a){a&&(t=encodeURIComponent(t),a=encodeURIComponent(a),t.length>0&&a.length>0&&e.push(`${t}=${a}`))}}function od(e,t,a){const r=e.version?e.version:Go,s=t instanceof gl?t:void 0;let n;if(void 0===s&&void 0!==a&&(n=new rd(a,t)),void 0===s&&void 0===n)throw TypeError("Invalid sharedKeyCredential, userDelegationKey or accountName.");if(r>="2020-12-06")return void 0!==s?function(e,t){if(!((e=ld(e)).identifier||e.permissions&&e.expiresOn))throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");let a,r="c",s=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",s=e.versionId)),e.permissions&&(a=e.blobName?td.parse(e.permissions.toString()).toString():ad.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?xm(e.startsOn,!1):"",e.expiresOn?xm(e.expiresOn,!1):"",md(t.accountName,e.containerName,e.blobName),e.identifier,e.ipRange?sd(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,s,e.encryptionScope,e.cacheControl?e.cacheControl:"",e.contentDisposition?e.contentDisposition:"",e.contentEncoding?e.contentEncoding:"",e.contentLanguage?e.contentLanguage:"",e.contentType?e.contentType:""].join("\n"),i=t.computeHMACSHA256(n);return new id(e.version,i,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType,void 0,void 0,void 0,e.encryptionScope)}(e,s):function(e,t){if(!(e=ld(e)).permissions||!e.expiresOn)throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");let a,r="c",s=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",s=e.versionId)),e.permissions&&(a=e.blobName?td.parse(e.permissions.toString()).toString():ad.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?xm(e.startsOn,!1):"",e.expiresOn?xm(e.expiresOn,!1):"",md(t.accountName,e.containerName,e.blobName),t.userDelegationKey.signedObjectId,t.userDelegationKey.signedTenantId,t.userDelegationKey.signedStartsOn?xm(t.userDelegationKey.signedStartsOn,!1):"",t.userDelegationKey.signedExpiresOn?xm(t.userDelegationKey.signedExpiresOn,!1):"",t.userDelegationKey.signedService,t.userDelegationKey.signedVersion,e.preauthorizedAgentObjectId,void 0,e.correlationId,e.ipRange?sd(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,s,e.encryptionScope,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType].join("\n"),i=t.computeHMACSHA256(n);return new id(e.version,i,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType,t.userDelegationKey,e.preauthorizedAgentObjectId,e.correlationId,e.encryptionScope)}(e,n);if(r>="2018-11-09")return void 0!==s?function(e,t){if(!((e=ld(e)).identifier||e.permissions&&e.expiresOn))throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");let a,r="c",s=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",s=e.versionId)),e.permissions&&(a=e.blobName?td.parse(e.permissions.toString()).toString():ad.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?xm(e.startsOn,!1):"",e.expiresOn?xm(e.expiresOn,!1):"",md(t.accountName,e.containerName,e.blobName),e.identifier,e.ipRange?sd(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,s,e.cacheControl?e.cacheControl:"",e.contentDisposition?e.contentDisposition:"",e.contentEncoding?e.contentEncoding:"",e.contentLanguage?e.contentLanguage:"",e.contentType?e.contentType:""].join("\n"),i=t.computeHMACSHA256(n);return new id(e.version,i,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType)}(e,s):r>="2020-02-10"?function(e,t){if(!(e=ld(e)).permissions||!e.expiresOn)throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");let a,r="c",s=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",s=e.versionId)),e.permissions&&(a=e.blobName?td.parse(e.permissions.toString()).toString():ad.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?xm(e.startsOn,!1):"",e.expiresOn?xm(e.expiresOn,!1):"",md(t.accountName,e.containerName,e.blobName),t.userDelegationKey.signedObjectId,t.userDelegationKey.signedTenantId,t.userDelegationKey.signedStartsOn?xm(t.userDelegationKey.signedStartsOn,!1):"",t.userDelegationKey.signedExpiresOn?xm(t.userDelegationKey.signedExpiresOn,!1):"",t.userDelegationKey.signedService,t.userDelegationKey.signedVersion,e.preauthorizedAgentObjectId,void 0,e.correlationId,e.ipRange?sd(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,s,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType].join("\n"),i=t.computeHMACSHA256(n);return new id(e.version,i,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType,t.userDelegationKey,e.preauthorizedAgentObjectId,e.correlationId)}(e,n):function(e,t){if(!(e=ld(e)).permissions||!e.expiresOn)throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");let a,r="c",s=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",s=e.versionId)),e.permissions&&(a=e.blobName?td.parse(e.permissions.toString()).toString():ad.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?xm(e.startsOn,!1):"",e.expiresOn?xm(e.expiresOn,!1):"",md(t.accountName,e.containerName,e.blobName),t.userDelegationKey.signedObjectId,t.userDelegationKey.signedTenantId,t.userDelegationKey.signedStartsOn?xm(t.userDelegationKey.signedStartsOn,!1):"",t.userDelegationKey.signedExpiresOn?xm(t.userDelegationKey.signedExpiresOn,!1):"",t.userDelegationKey.signedService,t.userDelegationKey.signedVersion,e.ipRange?sd(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,s,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType].join("\n"),i=t.computeHMACSHA256(n);return new id(e.version,i,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType,t.userDelegationKey)}(e,n);if(r>="2015-04-05"){if(void 0!==s)return function(e,t){if(!((e=ld(e)).identifier||e.permissions&&e.expiresOn))throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");let a,r="c";e.blobName&&(r="b"),e.permissions&&(a=e.blobName?td.parse(e.permissions.toString()).toString():ad.parse(e.permissions.toString()).toString());const s=[a||"",e.startsOn?xm(e.startsOn,!1):"",e.expiresOn?xm(e.expiresOn,!1):"",md(t.accountName,e.containerName,e.blobName),e.identifier,e.ipRange?sd(e.ipRange):"",e.protocol?e.protocol:"",e.version,e.cacheControl?e.cacheControl:"",e.contentDisposition?e.contentDisposition:"",e.contentEncoding?e.contentEncoding:"",e.contentLanguage?e.contentLanguage:"",e.contentType?e.contentType:""].join("\n"),n=t.computeHMACSHA256(s);return new id(e.version,n,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType)}(e,s);throw new RangeError("'version' must be >= '2018-11-09' when generating user delegation SAS using user delegation key.")}throw new RangeError("'version' must be >= '2015-04-05'.")}function md(e,t,a){const r=[`/blob/${e}/${t}`];return a&&r.push(`/${a}`),r.join("")}function ld(e){const t=e.version?e.version:Go;if(e.snapshotTime&&t<"2018-11-09")throw RangeError("'version' must be >= '2018-11-09' when providing 'snapshotTime'.");if(void 0===e.blobName&&e.snapshotTime)throw RangeError("Must provide 'blobName' when providing 'snapshotTime'.");if(e.versionId&&t<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when providing 'versionId'.");if(void 0===e.blobName&&e.versionId)throw RangeError("Must provide 'blobName' when providing 'versionId'.");if(e.permissions&&e.permissions.setImmutabilityPolicy&&t<"2020-08-04")throw RangeError("'version' must be >= '2020-08-04' when provided 'i' permission.");if(e.permissions&&e.permissions.deleteVersion&&t<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when providing 'x' permission.");if(e.permissions&&e.permissions.permanentDelete&&t<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when providing 'y' permission.");if(e.permissions&&e.permissions.tag&&t<"2019-12-12")throw RangeError("'version' must be >= '2019-12-12' when providing 't' permission.");if(t<"2020-02-10"&&e.permissions&&(e.permissions.move||e.permissions.execute))throw RangeError("'version' must be >= '2020-02-10' when providing the 'm' or 'e' permission.");if(t<"2021-04-10"&&e.permissions&&e.permissions.filterByTags)throw RangeError("'version' must be >= '2021-04-10' when providing the 'f' permission.");if(t<"2020-02-10"&&(e.preauthorizedAgentObjectId||e.correlationId))throw RangeError("'version' must be >= '2020-02-10' when providing 'preauthorizedAgentObjectId' or 'correlationId'.");if(e.encryptionScope&&t<"2020-12-06")throw RangeError("'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.");return e.version=t,e}class dd{constructor(e){this.client=e}download(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,pd)}getProperties(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,ud)}delete(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,yd)}undelete(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,gd)}setExpiry(e,t){const a={expiryOptions:e,options:Re(t||{})};return this.client.sendOperationRequest(a,hd)}setHttpHeaders(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,xd)}setImmutabilityPolicy(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,bd)}deleteImmutabilityPolicy(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,Nd)}setLegalHold(e,t){const a={legalHold:e,options:Re(t||{})};return this.client.sendOperationRequest(a,fd)}setMetadata(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,Sd)}acquireLease(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,vd)}releaseLease(e,t){const a={leaseId:e,options:Re(t||{})};return this.client.sendOperationRequest(a,Cd)}renewLease(e,t){const a={leaseId:e,options:Re(t||{})};return this.client.sendOperationRequest(a,Pd)}changeLease(e,t,a){const r={leaseId:e,proposedLeaseId:t,options:Re(a||{})};return this.client.sendOperationRequest(r,zd)}breakLease(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,Rd)}createSnapshot(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,wd)}startCopyFromURL(e,t){const a={copySource:e,options:Re(t||{})};return this.client.sendOperationRequest(a,Od)}copyFromURL(e,t){const a={copySource:e,options:Re(t||{})};return this.client.sendOperationRequest(a,Ed)}abortCopyFromURL(e,t){const a={copyId:e,options:Re(t||{})};return this.client.sendOperationRequest(a,qd)}setTier(e,t){const a={tier:e,options:Re(t||{})};return this.client.sendOperationRequest(a,Bd)}getAccountInfo(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,Td)}query(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,Md)}getTags(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,Id)}setTags(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,Hd)}}const cd=new Ee(e,!0),pd={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:Pa},206:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:Pa},default:{bodyMapper:$e,headersMapper:za}},queryParameters:[ls,Gs,Qs],urlParameters:[is],headerParameters:[ds,cs,ps,Es,qs,Bs,Xs,{parameterPath:["options","rangeGetContentMD5"],mapper:{serializedName:"x-ms-range-get-content-md5",xmlName:"x-ms-range-get-content-md5",type:{name:"Boolean"}}},{parameterPath:["options","rangeGetContentCRC64"],mapper:{serializedName:"x-ms-range-get-content-crc64",xmlName:"x-ms-range-get-content-crc64",type:{name:"Boolean"}}},Ws,Js,Ys,Zs,en,tn],isXML:!0,serializer:cd},ud={path:"/{containerName}/{blob}",httpMethod:"HEAD",responses:{200:{headersMapper:Ra},default:{bodyMapper:$e,headersMapper:wa}},queryParameters:[ls,Gs,Qs],urlParameters:[is],headerParameters:[ds,cs,ps,Es,qs,Bs,Ws,Js,Ys,Zs,en,tn],isXML:!0,serializer:cd},yd={path:"/{containerName}/{blob}",httpMethod:"DELETE",responses:{202:{headersMapper:Oa},default:{bodyMapper:$e,headersMapper:Ea}},queryParameters:[ls,Gs,Qs,{parameterPath:["options","blobDeleteType"],mapper:{serializedName:"deletetype",xmlName:"deletetype",type:{name:"String"}}}],urlParameters:[is],headerParameters:[ds,cs,ps,Es,qs,Bs,Zs,en,tn,{parameterPath:["options","deleteSnapshots"],mapper:{serializedName:"x-ms-delete-snapshots",xmlName:"x-ms-delete-snapshots",type:{name:"Enum",allowedValues:["include","only"]}}}],isXML:!0,serializer:cd},gd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:qa},default:{bodyMapper:$e,headersMapper:Ba}},queryParameters:[ls,Is],urlParameters:[is],headerParameters:[ds,cs,ps],isXML:!0,serializer:cd},hd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Ta},default:{bodyMapper:$e,headersMapper:Ma}},queryParameters:[ls,{parameterPath:"comp",mapper:{defaultValue:"expiry",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[is],headerParameters:[ds,cs,ps,{parameterPath:"expiryOptions",mapper:{serializedName:"x-ms-expiry-option",required:!0,xmlName:"x-ms-expiry-option",type:{name:"String"}}},{parameterPath:["options","expiresOn"],mapper:{serializedName:"x-ms-expiry-time",xmlName:"x-ms-expiry-time",type:{name:"String"}}}],isXML:!0,serializer:cd},xd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Ia},default:{bodyMapper:$e,headersMapper:Ha}},queryParameters:[ms,ls],urlParameters:[is],headerParameters:[ds,cs,ps,Es,qs,Bs,Zs,en,tn,an,rn,sn,nn,on,mn],isXML:!0,serializer:cd},bd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Aa},default:{bodyMapper:$e,headersMapper:ka}},queryParameters:[ls,ln],urlParameters:[is],headerParameters:[ds,cs,ps,Bs,dn,cn],isXML:!0,serializer:cd},Nd={path:"/{containerName}/{blob}",httpMethod:"DELETE",responses:{200:{headersMapper:Da},default:{bodyMapper:$e,headersMapper:La}},queryParameters:[ls,ln],urlParameters:[is],headerParameters:[ds,cs,ps],isXML:!0,serializer:cd},fd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:_a},default:{bodyMapper:$e,headersMapper:ja}},queryParameters:[ls,{parameterPath:"comp",mapper:{defaultValue:"legalhold",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[is],headerParameters:[ds,cs,ps,{parameterPath:"legalHold",mapper:{serializedName:"x-ms-legal-hold",required:!0,xmlName:"x-ms-legal-hold",type:{name:"Boolean"}}}],isXML:!0,serializer:cd},Sd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Ua},default:{bodyMapper:$e,headersMapper:Va}},queryParameters:[ls,Ts],urlParameters:[is],headerParameters:[ds,cs,ps,ws,Es,qs,Bs,Ws,Js,Ys,Zs,en,tn,pn],isXML:!0,serializer:cd},vd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Fa},default:{bodyMapper:$e,headersMapper:$a}},queryParameters:[ls,Hs],urlParameters:[is],headerParameters:[ds,cs,ps,qs,Bs,As,ks,Ds,Zs,en,tn],isXML:!0,serializer:cd},Cd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Ka},default:{bodyMapper:$e,headersMapper:Ga}},queryParameters:[ls,Hs],urlParameters:[is],headerParameters:[ds,cs,ps,qs,Bs,Ls,_s,Zs,en,tn],isXML:!0,serializer:cd},Pd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Qa},default:{bodyMapper:$e,headersMapper:Xa}},queryParameters:[ls,Hs],urlParameters:[is],headerParameters:[ds,cs,ps,qs,Bs,_s,js,Zs,en,tn],isXML:!0,serializer:cd},zd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Wa},default:{bodyMapper:$e,headersMapper:Ja}},queryParameters:[ls,Hs],urlParameters:[is],headerParameters:[ds,cs,ps,qs,Bs,_s,Fs,$s,Zs,en,tn],isXML:!0,serializer:cd},Rd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:Ya},default:{bodyMapper:$e,headersMapper:Za}},queryParameters:[ls,Hs],urlParameters:[is],headerParameters:[ds,cs,ps,qs,Bs,Us,Vs,Zs,en,tn],isXML:!0,serializer:cd},wd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:er},default:{bodyMapper:$e,headersMapper:tr}},queryParameters:[ls,{parameterPath:"comp",mapper:{defaultValue:"snapshot",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[is],headerParameters:[ds,cs,ps,ws,Es,qs,Bs,Ws,Js,Ys,Zs,en,tn,pn],isXML:!0,serializer:cd},Od={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:ar},default:{bodyMapper:$e,headersMapper:rr}},queryParameters:[ls],urlParameters:[is],headerParameters:[ds,cs,ps,ws,Es,qs,Bs,Zs,en,tn,dn,cn,un,yn,gn,hn,xn,bn,Nn,fn,Sn,{parameterPath:["options","sealBlob"],mapper:{serializedName:"x-ms-seal-blob",xmlName:"x-ms-seal-blob",type:{name:"Boolean"}}},vn],isXML:!0,serializer:cd},Ed={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:sr},default:{bodyMapper:$e,headersMapper:nr}},queryParameters:[ls],urlParameters:[is],headerParameters:[ds,cs,ps,ws,Es,qs,Bs,Zs,en,tn,dn,cn,pn,un,gn,hn,xn,bn,fn,Sn,vn,{parameterPath:"xMsRequiresSync",mapper:{defaultValue:"true",isConstant:!0,serializedName:"x-ms-requires-sync",type:{name:"String"}}},Cn,Pn,zn],isXML:!0,serializer:cd},qd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{204:{headersMapper:ir},default:{bodyMapper:$e,headersMapper:or}},queryParameters:[ls,{parameterPath:"comp",mapper:{defaultValue:"copy",isConstant:!0,serializedName:"comp",type:{name:"String"}}},{parameterPath:"copyId",mapper:{serializedName:"copyid",required:!0,xmlName:"copyid",type:{name:"String"}}}],urlParameters:[is],headerParameters:[ds,cs,ps,Es,{parameterPath:"copyActionAbortConstant",mapper:{defaultValue:"abort",isConstant:!0,serializedName:"x-ms-copy-action",type:{name:"String"}}}],isXML:!0,serializer:cd},Bd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:mr},202:{headersMapper:mr},default:{bodyMapper:$e,headersMapper:lr}},queryParameters:[ls,Gs,Qs,{parameterPath:"comp",mapper:{defaultValue:"tier",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[is],headerParameters:[ds,cs,ps,Es,tn,yn,{parameterPath:"tier",mapper:{serializedName:"x-ms-access-tier",required:!0,xmlName:"x-ms-access-tier",type:{name:"Enum",allowedValues:["P4","P6","P10","P15","P20","P30","P40","P50","P60","P70","P80","Hot","Cool","Archive"]}}}],isXML:!0,serializer:cd},Td={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{headersMapper:dr},default:{bodyMapper:$e,headersMapper:cr}},queryParameters:[ms,Ns],urlParameters:[is],headerParameters:[ds,ps],isXML:!0,serializer:cd},Md={path:"/{containerName}/{blob}",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:pr},206:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:pr},default:{bodyMapper:$e,headersMapper:ur}},requestBody:Rn,queryParameters:[ls,Gs,{parameterPath:"comp",mapper:{defaultValue:"query",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[is],headerParameters:[rs,ns,ds,cs,Es,qs,Bs,Ws,Js,Ys,Zs,en,tn],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:cd},Id={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:tt,headersMapper:yr},default:{bodyMapper:$e,headersMapper:gr}},queryParameters:[ls,Gs,Qs,wn],urlParameters:[is],headerParameters:[ds,cs,ps,Es,tn],isXML:!0,serializer:cd},Hd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{204:{headersMapper:hr},default:{bodyMapper:$e,headersMapper:xr}},requestBody:On,queryParameters:[ls,Qs,wn],urlParameters:[is],headerParameters:[rs,ns,ds,cs,Es,tn,En,qn],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:cd};class Ad{constructor(e,t){const a=new Jl(e.url,e.pipeline.toServiceClientOptions());this._url=e.url,void 0===e.name?(this._isContainer=!0,this._containerOrBlobOperation=new li(a)):(this._isContainer=!1,this._containerOrBlobOperation=new dd(a)),t||(t=N()),this._leaseId=t}get leaseId(){return this._leaseId}get url(){return this._url}async acquireLease(e,t={}){var a,r,s,n,i,o;const{span:m,updatedOptions:l}=Zl("BlobLeaseClient-acquireLease",t);if(this._isContainer&&((null===(a=t.conditions)||void 0===a?void 0:a.ifMatch)&&(null===(r=t.conditions)||void 0===r?void 0:r.ifMatch)!==rm||(null===(s=t.conditions)||void 0===s?void 0:s.ifNoneMatch)&&(null===(n=t.conditions)||void 0===n?void 0:n.ifNoneMatch)!==rm||(null===(i=t.conditions)||void 0===i?void 0:i.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");try{return await this._containerOrBlobOperation.acquireLease(Object.assign({abortSignal:t.abortSignal,duration:e,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(o=t.conditions)||void 0===o?void 0:o.tagConditions}),proposedLeaseId:this._leaseId},ed(l)))}catch(e){throw m.setStatus({code:ze.ERROR,message:e.message}),e}finally{m.end()}}async changeLease(e,t={}){var a,r,s,n,i,o;const{span:m,updatedOptions:l}=Zl("BlobLeaseClient-changeLease",t);if(this._isContainer&&((null===(a=t.conditions)||void 0===a?void 0:a.ifMatch)&&(null===(r=t.conditions)||void 0===r?void 0:r.ifMatch)!==rm||(null===(s=t.conditions)||void 0===s?void 0:s.ifNoneMatch)&&(null===(n=t.conditions)||void 0===n?void 0:n.ifNoneMatch)!==rm||(null===(i=t.conditions)||void 0===i?void 0:i.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");try{const a=await this._containerOrBlobOperation.changeLease(this._leaseId,e,Object.assign({abortSignal:t.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(o=t.conditions)||void 0===o?void 0:o.tagConditions})},ed(l)));return this._leaseId=e,a}catch(e){throw m.setStatus({code:ze.ERROR,message:e.message}),e}finally{m.end()}}async releaseLease(e={}){var t,a,r,s,n,i;const{span:o,updatedOptions:m}=Zl("BlobLeaseClient-releaseLease",e);if(this._isContainer&&((null===(t=e.conditions)||void 0===t?void 0:t.ifMatch)&&(null===(a=e.conditions)||void 0===a?void 0:a.ifMatch)!==rm||(null===(r=e.conditions)||void 0===r?void 0:r.ifNoneMatch)&&(null===(s=e.conditions)||void 0===s?void 0:s.ifNoneMatch)!==rm||(null===(n=e.conditions)||void 0===n?void 0:n.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");try{return await this._containerOrBlobOperation.releaseLease(this._leaseId,Object.assign({abortSignal:e.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(i=e.conditions)||void 0===i?void 0:i.tagConditions})},ed(m)))}catch(e){throw o.setStatus({code:ze.ERROR,message:e.message}),e}finally{o.end()}}async renewLease(e={}){var t,a,r,s,n,i;const{span:o,updatedOptions:m}=Zl("BlobLeaseClient-renewLease",e);if(this._isContainer&&((null===(t=e.conditions)||void 0===t?void 0:t.ifMatch)&&(null===(a=e.conditions)||void 0===a?void 0:a.ifMatch)!==rm||(null===(r=e.conditions)||void 0===r?void 0:r.ifNoneMatch)&&(null===(s=e.conditions)||void 0===s?void 0:s.ifNoneMatch)!==rm||(null===(n=e.conditions)||void 0===n?void 0:n.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");try{return await this._containerOrBlobOperation.renewLease(this._leaseId,Object.assign({abortSignal:e.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(i=e.conditions)||void 0===i?void 0:i.tagConditions})},ed(m)))}catch(e){throw o.setStatus({code:ze.ERROR,message:e.message}),e}finally{o.end()}}async breakLease(e,t={}){var a,r,s,n,i,o;const{span:m,updatedOptions:l}=Zl("BlobLeaseClient-breakLease",t);if(this._isContainer&&((null===(a=t.conditions)||void 0===a?void 0:a.ifMatch)&&(null===(r=t.conditions)||void 0===r?void 0:r.ifMatch)!==rm||(null===(s=t.conditions)||void 0===s?void 0:s.ifNoneMatch)&&(null===(n=t.conditions)||void 0===n?void 0:n.ifNoneMatch)!==rm||(null===(i=t.conditions)||void 0===i?void 0:i.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");try{const a=Object.assign({abortSignal:t.abortSignal,breakPeriod:e,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(o=t.conditions)||void 0===o?void 0:o.tagConditions})},ed(l));return await this._containerOrBlobOperation.breakLease(a)}catch(e){throw m.setStatus({code:ze.ERROR,message:e.message}),e}finally{m.end()}}}class kd{constructor(e,t={}){this.originalResponse=e}get acceptRanges(){return this.originalResponse.acceptRanges}get cacheControl(){return this.originalResponse.cacheControl}get contentDisposition(){return this.originalResponse.contentDisposition}get contentEncoding(){return this.originalResponse.contentEncoding}get contentLanguage(){return this.originalResponse.contentLanguage}get blobSequenceNumber(){return this.originalResponse.blobSequenceNumber}get blobType(){return this.originalResponse.blobType}get contentLength(){return this.originalResponse.contentLength}get contentMD5(){return this.originalResponse.contentMD5}get contentRange(){return this.originalResponse.contentRange}get contentType(){return this.originalResponse.contentType}get copyCompletedOn(){}get copyId(){return this.originalResponse.copyId}get copyProgress(){return this.originalResponse.copyProgress}get copySource(){return this.originalResponse.copySource}get copyStatus(){return this.originalResponse.copyStatus}get copyStatusDescription(){return this.originalResponse.copyStatusDescription}get leaseDuration(){return this.originalResponse.leaseDuration}get leaseState(){return this.originalResponse.leaseState}get leaseStatus(){return this.originalResponse.leaseStatus}get date(){return this.originalResponse.date}get blobCommittedBlockCount(){return this.originalResponse.blobCommittedBlockCount}get etag(){return this.originalResponse.etag}get errorCode(){return this.originalResponse.errorCode}get isServerEncrypted(){return this.originalResponse.isServerEncrypted}get blobContentMD5(){return this.originalResponse.blobContentMD5}get lastModified(){return this.originalResponse.lastModified}get metadata(){return this.originalResponse.metadata}get requestId(){return this.originalResponse.requestId}get clientRequestId(){return this.originalResponse.clientRequestId}get version(){return this.originalResponse.version}get encryptionKeySha256(){return this.originalResponse.encryptionKeySha256}get contentCrc64(){return this.originalResponse.contentCrc64}get blobBody(){throw Error("Quick query in browser is not supported yet.")}get readableStreamBody(){}get _response(){return this.originalResponse._response}}class Dd{constructor(e){this.client=e}create(e,t){const a={contentLength:e,options:Re(t||{})};return this.client.sendOperationRequest(a,jd)}appendBlock(e,t,a){const r={contentLength:e,body:t,options:Re(a||{})};return this.client.sendOperationRequest(r,Ud)}appendBlockFromUrl(e,t,a){const r={sourceUrl:e,contentLength:t,options:Re(a||{})};return this.client.sendOperationRequest(r,Vd)}seal(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,Fd)}}const Ld=new Ee(e,!0),_d=new Ee(e,!1),jd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Ar},default:{bodyMapper:$e,headersMapper:kr}},queryParameters:[ls],urlParameters:[is],headerParameters:[ds,cs,ps,vs,ws,Es,qs,Bs,Ws,Js,Ys,Zs,en,tn,an,rn,sn,nn,on,mn,dn,cn,pn,Sn,vn,{parameterPath:"blobType",mapper:{defaultValue:"AppendBlob",isConstant:!0,serializedName:"x-ms-blob-type",type:{name:"String"}}}],isXML:!0,serializer:Ld},Ud={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Dr},default:{bodyMapper:$e,headersMapper:Lr}},requestBody:In,queryParameters:[ls,Fn],urlParameters:[is],headerParameters:[ds,cs,vs,Es,qs,Bs,Ws,Js,Ys,Zs,en,tn,pn,En,qn,Mn,Hn,$n,Kn],mediaType:"binary",serializer:_d},Vd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:_r},default:{bodyMapper:$e,headersMapper:jr}},queryParameters:[ls,Fn],urlParameters:[is],headerParameters:[ds,cs,ps,vs,Es,qs,Bs,Ws,Js,Ys,Zs,en,tn,pn,gn,hn,xn,bn,Cn,Pn,En,jn,Un,$n,Kn,Gn],isXML:!0,serializer:Ld},Fd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Ur},default:{bodyMapper:$e,headersMapper:Vr}},queryParameters:[ls,{parameterPath:"comp",mapper:{defaultValue:"seal",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[is],headerParameters:[ds,cs,ps,Es,qs,Bs,Zs,en,Kn],isXML:!0,serializer:Ld};class $d{constructor(e){this.client=e}upload(e,t,a){const r={contentLength:e,body:t,options:Re(a||{})};return this.client.sendOperationRequest(r,Qd)}putBlobFromUrl(e,t,a){const r={contentLength:e,copySource:t,options:Re(a||{})};return this.client.sendOperationRequest(r,Xd)}stageBlock(e,t,a,r){const s={blockId:e,contentLength:t,body:a,options:Re(r||{})};return this.client.sendOperationRequest(s,Wd)}stageBlockFromURL(e,t,a,r){const s={blockId:e,contentLength:t,sourceUrl:a,options:Re(r||{})};return this.client.sendOperationRequest(s,Jd)}commitBlockList(e,t){const a={blocks:e,options:Re(t||{})};return this.client.sendOperationRequest(a,Yd)}getBlockList(e,t){const a={listType:e,options:Re(t||{})};return this.client.sendOperationRequest(a,Zd)}}const Kd=new Ee(e,!0),Gd=new Ee(e,!1),Qd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Fr},default:{bodyMapper:$e,headersMapper:$r}},requestBody:In,queryParameters:[ls],urlParameters:[is],headerParameters:[ds,cs,vs,ws,Es,qs,Bs,Ws,Js,Ys,Zs,en,tn,an,rn,sn,nn,on,mn,dn,cn,pn,un,Sn,vn,En,Mn,Hn,Qn],mediaType:"binary",serializer:Gd},Xd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Kr},default:{bodyMapper:$e,headersMapper:Gr}},queryParameters:[ls],urlParameters:[is],headerParameters:[ds,cs,ps,vs,ws,Es,qs,Bs,Ws,Js,Ys,Zs,en,tn,an,rn,sn,nn,on,mn,pn,un,gn,hn,xn,bn,Nn,fn,Sn,Cn,Pn,zn,En,Qn,{parameterPath:["options","copySourceBlobProperties"],mapper:{serializedName:"x-ms-copy-source-blob-properties",xmlName:"x-ms-copy-source-blob-properties",type:{name:"Boolean"}}}],isXML:!0,serializer:Kd},Wd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Qr},default:{bodyMapper:$e,headersMapper:Xr}},requestBody:In,queryParameters:[ls,Xn,Wn],urlParameters:[is],headerParameters:[ds,cs,vs,Es,Ws,Js,Ys,pn,En,qn,Mn,Hn],mediaType:"binary",serializer:Gd},Jd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Wr},default:{bodyMapper:$e,headersMapper:Jr}},queryParameters:[ls,Xn,Wn],urlParameters:[is],headerParameters:[ds,cs,ps,vs,Es,Ws,Js,Ys,pn,gn,hn,xn,bn,Cn,Pn,jn,Un,Gn],isXML:!0,serializer:Kd},Yd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Yr},default:{bodyMapper:$e,headersMapper:Zr}},requestBody:Jn,queryParameters:[ls,Yn],urlParameters:[is],headerParameters:[rs,ns,ds,cs,ws,Es,qs,Bs,Ws,Js,Ys,Zs,en,tn,an,rn,sn,nn,on,mn,dn,cn,pn,un,Sn,vn,En,qn],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:Kd},Zd={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:yt,headersMapper:es},default:{bodyMapper:$e,headersMapper:ts}},queryParameters:[ls,Gs,Yn,{parameterPath:"listType",mapper:{defaultValue:"committed",serializedName:"blocklisttype",required:!0,xmlName:"blocklisttype",type:{name:"Enum",allowedValues:["committed","uncommitted","all"]}}}],urlParameters:[is],headerParameters:[ds,cs,ps,Es,tn],isXML:!0,serializer:Kd};class ec{constructor(e){this.client=e}create(e,t,a){const r={contentLength:e,blobContentLength:t,options:Re(a||{})};return this.client.sendOperationRequest(r,rc)}uploadPages(e,t,a){const r={contentLength:e,body:t,options:Re(a||{})};return this.client.sendOperationRequest(r,sc)}clearPages(e,t){const a={contentLength:e,options:Re(t||{})};return this.client.sendOperationRequest(a,nc)}uploadPagesFromURL(e,t,a,r,s){const n={sourceUrl:e,sourceRange:t,contentLength:a,range:r,options:Re(s||{})};return this.client.sendOperationRequest(n,ic)}getPageRanges(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,oc)}getPageRangesDiff(e){const t={options:Re(e||{})};return this.client.sendOperationRequest(t,mc)}resize(e,t){const a={blobContentLength:e,options:Re(t||{})};return this.client.sendOperationRequest(a,lc)}updateSequenceNumber(e,t){const a={sequenceNumberAction:e,options:Re(t||{})};return this.client.sendOperationRequest(a,dc)}copyIncremental(e,t){const a={copySource:e,options:Re(t||{})};return this.client.sendOperationRequest(a,cc)}}const tc=new Ee(e,!0),ac=new Ee(e,!1),rc={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:br},default:{bodyMapper:$e,headersMapper:Nr}},queryParameters:[ls],urlParameters:[is],headerParameters:[ds,cs,ps,vs,ws,Es,qs,Bs,Ws,Js,Ys,Zs,en,tn,an,rn,sn,nn,on,mn,dn,cn,pn,un,Sn,vn,{parameterPath:"blobType",mapper:{defaultValue:"PageBlob",isConstant:!0,serializedName:"x-ms-blob-type",type:{name:"String"}}},Bn,Tn],isXML:!0,serializer:tc},sc={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:fr},default:{bodyMapper:$e,headersMapper:Sr}},requestBody:In,queryParameters:[ls,An],urlParameters:[is],headerParameters:[ds,cs,vs,Es,qs,Bs,Xs,Ws,Js,Ys,Zs,en,tn,pn,En,qn,Mn,Hn,kn,Dn,Ln,_n],mediaType:"binary",serializer:ac},nc={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:vr},default:{bodyMapper:$e,headersMapper:Cr}},queryParameters:[ls,An],urlParameters:[is],headerParameters:[ds,cs,ps,vs,Es,qs,Bs,Xs,Ws,Js,Ys,Zs,en,tn,pn,Dn,Ln,_n,{parameterPath:"pageWrite",mapper:{defaultValue:"clear",isConstant:!0,serializedName:"x-ms-page-write",type:{name:"String"}}}],isXML:!0,serializer:tc},ic={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Pr},default:{bodyMapper:$e,headersMapper:zr}},queryParameters:[ls,An],urlParameters:[is],headerParameters:[ds,cs,ps,vs,Es,qs,Bs,Ws,Js,Ys,Zs,en,tn,pn,gn,hn,xn,bn,Cn,Pn,kn,Dn,Ln,_n,jn,{parameterPath:"sourceRange",mapper:{serializedName:"x-ms-source-range",required:!0,xmlName:"x-ms-source-range",type:{name:"String"}}},Un,{parameterPath:"range",mapper:{serializedName:"x-ms-range",required:!0,xmlName:"x-ms-range",type:{name:"String"}}}],isXML:!0,serializer:tc},oc={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:ht,headersMapper:Rr},default:{bodyMapper:$e,headersMapper:wr}},queryParameters:[ls,gs,hs,Gs,Vn],urlParameters:[is],headerParameters:[ds,cs,ps,Es,qs,Bs,Xs,Zs,en,tn],isXML:!0,serializer:tc},mc={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:ht,headersMapper:Or},default:{bodyMapper:$e,headersMapper:Er}},queryParameters:[ls,gs,hs,Gs,Vn,{parameterPath:["options","prevsnapshot"],mapper:{serializedName:"prevsnapshot",xmlName:"prevsnapshot",type:{name:"String"}}}],urlParameters:[is],headerParameters:[ds,cs,ps,Es,qs,Bs,Xs,Zs,en,tn,{parameterPath:["options","prevSnapshotUrl"],mapper:{serializedName:"x-ms-previous-snapshot-url",xmlName:"x-ms-previous-snapshot-url",type:{name:"String"}}}],isXML:!0,serializer:tc},lc={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:qr},default:{bodyMapper:$e,headersMapper:Br}},queryParameters:[ms,ls],urlParameters:[is],headerParameters:[ds,cs,ps,Es,qs,Bs,Ws,Js,Ys,Zs,en,tn,pn,Bn],isXML:!0,serializer:tc},dc={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Tr},default:{bodyMapper:$e,headersMapper:Mr}},queryParameters:[ms,ls],urlParameters:[is],headerParameters:[ds,cs,ps,Es,qs,Bs,Zs,en,tn,Tn,{parameterPath:"sequenceNumberAction",mapper:{serializedName:"x-ms-sequence-number-action",required:!0,xmlName:"x-ms-sequence-number-action",type:{name:"Enum",allowedValues:["max","update","increment"]}}}],isXML:!0,serializer:tc},cc={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:Ir},default:{bodyMapper:$e,headersMapper:Hr}},queryParameters:[ls,{parameterPath:"comp",mapper:{defaultValue:"incrementalcopy",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[is],headerParameters:[ds,cs,ps,qs,Bs,Zs,en,tn,fn],isXML:!0,serializer:tc};var pc,uc,yc;function gc(e){if(void 0!==e)return e}function hc(e,t){if(e&&!t)throw new RangeError("Customer-provided encryption key must be used over HTTPS.");e&&!e.encryptionAlgorithm&&(e.encryptionAlgorithm="AES256")}function xc(e){const t=(e._response.parsedBody.pageRange||[]).map((e=>({offset:e.start,count:e.end-e.start}))),a=(e._response.parsedBody.clearRange||[]).map((e=>({offset:e.start,count:e.end-e.start})));return Object.assign(Object.assign({},e),{pageRange:t,clearRange:a,_response:Object.assign(Object.assign({},e._response),{parsedBody:{pageRange:t,clearRange:a}})})}!function(e){e.Hot="Hot",e.Cool="Cool",e.Archive="Archive"}(pc||(pc={})),function(e){e.P4="P4",e.P6="P6",e.P10="P10",e.P15="P15",e.P20="P20",e.P30="P30",e.P40="P40",e.P50="P50",e.P60="P60",e.P70="P70",e.P80="P80"}(uc||(uc={})),function(e){e.StorageOAuthScopes="https://storage.azure.com/.default",e.DiskComputeOAuthScopes="https://disk.compute.azure.com/.default"}(yc||(yc={}));class bc extends Error{constructor(e){super(e),this.name="PollerStoppedError",Object.setPrototypeOf(this,bc.prototype)}}class Nc extends Error{constructor(e){super(e),this.name="PollerCancelledError",Object.setPrototypeOf(this,Nc.prototype)}}class fc{constructor(e){this.resolveOnUnsuccessful=!1,this.stopped=!0,this.pollProgressCallbacks=[],this.operation=e,this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t})),this.promise.catch((()=>{}))}async startPolling(e={}){for(this.stopped&&(this.stopped=!1);!this.isStopped()&&!this.isDone();)await this.poll(e),await this.delay()}async pollOnce(e={}){this.isDone()||(this.operation=await this.operation.update({abortSignal:e.abortSignal,fireProgress:this.fireProgress.bind(this)})),this.processUpdatedState()}fireProgress(e){for(const t of this.pollProgressCallbacks)t(e)}async cancelOnce(e={}){this.operation=await this.operation.cancel(e)}poll(e={}){if(!this.pollOncePromise){this.pollOncePromise=this.pollOnce(e);const t=()=>{this.pollOncePromise=void 0};this.pollOncePromise.then(t,t).catch(this.reject)}return this.pollOncePromise}processUpdatedState(){if(this.operation.state.error&&(this.stopped=!0,!this.resolveOnUnsuccessful))throw this.reject(this.operation.state.error),this.operation.state.error;if(this.operation.state.isCancelled&&(this.stopped=!0,!this.resolveOnUnsuccessful)){const e=new Nc("Operation was canceled");throw this.reject(e),e}this.isDone()&&this.resolve&&this.resolve(this.getResult())}async pollUntilDone(e={}){return this.stopped&&this.startPolling(e).catch(this.reject),this.processUpdatedState(),this.promise}onProgress(e){return this.pollProgressCallbacks.push(e),()=>{this.pollProgressCallbacks=this.pollProgressCallbacks.filter((t=>t!==e))}}isDone(){const e=this.operation.state;return Boolean(e.isCompleted||e.isCancelled||e.error)}stopPolling(){this.stopped||(this.stopped=!0,this.reject&&this.reject(new bc("This poller is already stopped")))}isStopped(){return this.stopped}cancelOperation(e={}){if(this.cancelPromise){if(e.abortSignal)throw new Error("A cancel request is currently pending")}else this.cancelPromise=this.cancelOnce(e);return this.cancelPromise}getOperationState(){return this.operation.state}getResult(){return this.operation.state.result}toString(){return this.operation.toString()}}class Sc extends fc{constructor(e){const{blobClient:t,copySource:a,intervalInMs:r=15e3,onProgress:s,resumeFrom:n,startCopyFromURLOptions:i}=e;let o;n&&(o=JSON.parse(n).state),super(zc(Object.assign(Object.assign({},o),{blobClient:t,copySource:a,startCopyFromURLOptions:i}))),"function"==typeof s&&this.onProgress(s),this.intervalInMs=r}delay(){return ml(this.intervalInMs)}}const vc=async function(e={}){const t=this.state,{copyId:a}=t;return t.isCompleted?zc(t):a?(await t.blobClient.abortCopyFromURL(a,{abortSignal:e.abortSignal}),t.isCancelled=!0,zc(t)):(t.isCancelled=!0,zc(t))},Cc=async function(e={}){const t=this.state,{blobClient:a,copySource:r,startCopyFromURLOptions:s}=t;if(t.isStarted){if(!t.isCompleted)try{const a=await t.blobClient.getProperties({abortSignal:e.abortSignal}),{copyStatus:r,copyProgress:s}=a,n=t.copyProgress;s&&(t.copyProgress=s),"pending"===r&&s!==n&&"function"==typeof e.fireProgress?e.fireProgress(t):"success"===r?(t.result=a,t.isCompleted=!0):"failed"===r&&(t.error=new Error(`Blob copy failed with reason: "${a.copyStatusDescription||"unknown"}"`),t.isCompleted=!0)}catch(e){t.error=e,t.isCompleted=!0}}else{t.isStarted=!0;const e=await a.startCopyFromURL(r,s);t.copyId=e.copyId,"success"===e.copyStatus&&(t.result=e,t.isCompleted=!0)}return zc(t)},Pc=function(){return JSON.stringify({state:this.state},((e,t)=>{if("blobClient"!==e)return t}))};function zc(e){return{state:Object.assign({},e),cancel:vc,toString:Pc,update:Cc}}function Rc(e){if(e.offset<0)throw new RangeError("Range.offset cannot be smaller than 0.");if(e.count&&e.count<=0)throw new RangeError("Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.");return e.count?`bytes=${e.offset}-${e.offset+e.count-1}`:`bytes=${e.offset}-`}var wc,Oc=a(187);!function(e){e[e.Good=0]="Good",e[e.Error=1]="Error"}(wc||(wc={}));class Ec{constructor(e=5){if(this.actives=0,this.completed=0,this.offset=0,this.operations=[],this.state=wc.Good,e<1)throw new RangeError("concurrency must be larger than 0");this.concurrency=e,this.emitter=new Oc.EventEmitter}addOperation(e){this.operations.push((async()=>{try{this.actives++,await e(),this.actives--,this.completed++,this.parallelExecute()}catch(e){this.emitter.emit("error",e)}}))}async do(){return 0===this.operations.length?Promise.resolve():(this.parallelExecute(),new Promise(((e,t)=>{this.emitter.on("finish",e),this.emitter.on("error",(e=>{this.state=wc.Error,t(e)}))})))}nextOperation(){return this.offset<this.operations.length?this.operations[this.offset++]:null}parallelExecute(){if(this.state!==wc.Error)if(this.completed>=this.operations.length)this.emitter.emit("finish");else for(;this.actives<this.concurrency;){const e=this.nextOperation();if(!e)return;e()}}}class qc{}class Bc extends Yl{constructor(e,t,a,r){let s,n;if(r=r||{},pl(t))n=e,s=t;else if(b&&t instanceof gl||t instanceof Wm||v(t))n=e,s=yl(t,r=a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t||!a||"string"!=typeof a)throw new Error("Expecting non-empty strings for containerName and blobName parameters");{const i=t,o=a,m=dm(e);if("AccountConnString"===m.kind){if(!b)throw new Error("Account connection string is only supported in Node.js environment");{const e=new gl(m.accountName,m.accountKey);n=cm(cm(m.url,encodeURIComponent(i)),encodeURIComponent(o)),r.proxyOptions||(r.proxyOptions=void m.proxyUri),s=yl(e,r)}}else{if("SASConnString"!==m.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");n=cm(cm(m.url,encodeURIComponent(i)),encodeURIComponent(o))+"?"+m.accountSas,s=yl(new Wm,r)}}}else n=e,s=yl(new Wm,r);super(n,s),({blobName:this._name,containerName:this._containerName}=this.getBlobAndContainerNamesFromUrl()),this.blobContext=new dd(this.storageClientContext),this._snapshot=um(this.url,Yo),this._versionId=um(this.url,Zo)}get name(){return this._name}get containerName(){return this._containerName}withSnapshot(e){return new Bc(pm(this.url,Yo,0===e.length?void 0:e),this.pipeline)}withVersion(e){return new Bc(pm(this.url,Zo,0===e.length?void 0:e),this.pipeline)}getAppendBlobClient(){return new Tc(this.url,this.pipeline)}getBlockBlobClient(){return new Mc(this.url,this.pipeline)}getPageBlobClient(){return new Ic(this.url,this.pipeline)}async download(e=0,t,a={}){var r;a.conditions=a.conditions||{},a.conditions=a.conditions||{},hc(a.customerProvidedKey,this.isHttps);const{span:s,updatedOptions:n}=Zl("BlobClient-download",a);try{const i=await this.blobContext.download(Object.assign({abortSignal:a.abortSignal,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(r=a.conditions)||void 0===r?void 0:r.tagConditions}),requestOptions:{onDownloadProgress:b?void 0:a.onProgress},range:0!==e||t?Rc({offset:e,count:t}):void 0,rangeGetContentMD5:a.rangeGetContentMD5,rangeGetContentCRC64:a.rangeGetContentCrc64,snapshot:a.snapshot,cpkInfo:a.customerProvidedKey},ed(n))),o=Object.assign(Object.assign({},i),{_response:i._response,objectReplicationDestinationPolicyId:i.objectReplicationPolicyId,objectReplicationSourceProperties:Rm(i.objectReplicationRules)});if(!b)return o;if((void 0===a.maxRetryRequests||a.maxRetryRequests<0)&&(a.maxRetryRequests=5),void 0===i.contentLength)throw new RangeError("File download response doesn't contain valid content length header");if(!i.etag)throw new RangeError("File download response doesn't contain valid etag header");return new 1(o,(async t=>{var r;const s={leaseAccessConditions:a.conditions,modifiedAccessConditions:{ifMatch:a.conditions.ifMatch||i.etag,ifModifiedSince:a.conditions.ifModifiedSince,ifNoneMatch:a.conditions.ifNoneMatch,ifUnmodifiedSince:a.conditions.ifUnmodifiedSince,ifTags:null===(r=a.conditions)||void 0===r?void 0:r.tagConditions},range:Rc({count:e+i.contentLength-t,offset:t}),rangeGetContentMD5:a.rangeGetContentMD5,rangeGetContentCRC64:a.rangeGetContentCrc64,snapshot:a.snapshot,cpkInfo:a.customerProvidedKey};return(await this.blobContext.download(Object.assign({abortSignal:a.abortSignal},s))).readableStreamBody}),e,i.contentLength,{maxRetryRequests:a.maxRetryRequests,onProgress:a.onProgress})}catch(e){throw s.setStatus({code:ze.ERROR,message:e.message}),e}finally{s.end()}}async exists(e={}){const{span:t,updatedOptions:a}=Zl("BlobClient-exists",e);try{return hc(e.customerProvidedKey,this.isHttps),await this.getProperties({abortSignal:e.abortSignal,customerProvidedKey:e.customerProvidedKey,conditions:e.conditions,tracingOptions:a.tracingOptions}),!0}catch(e){if(404===e.statusCode)return!1;if(409===e.statusCode&&("BlobUsesCustomerSpecifiedEncryption"===e.details.errorCode||"BlobDoesNotUseCustomerSpecifiedEncryption"===e.details.errorCode))return!0;throw t.setStatus({code:ze.ERROR,message:e.message}),e}finally{t.end()}}async getProperties(e={}){var t;const{span:a,updatedOptions:r}=Zl("BlobClient-getProperties",e);try{e.conditions=e.conditions||{},hc(e.customerProvidedKey,this.isHttps);const s=await this.blobContext.getProperties(Object.assign({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(t=e.conditions)||void 0===t?void 0:t.tagConditions}),cpkInfo:e.customerProvidedKey},ed(r)));return Object.assign(Object.assign({},s),{_response:s._response,objectReplicationDestinationPolicyId:s.objectReplicationPolicyId,objectReplicationSourceProperties:Rm(s.objectReplicationRules)})}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async delete(e={}){var t;const{span:a,updatedOptions:r}=Zl("BlobClient-delete",e);e.conditions=e.conditions||{};try{return await this.blobContext.delete(Object.assign({abortSignal:e.abortSignal,deleteSnapshots:e.deleteSnapshots,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(t=e.conditions)||void 0===t?void 0:t.tagConditions})},ed(r)))}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async deleteIfExists(e={}){var t,a;const{span:r,updatedOptions:s}=Zl("BlobClient-deleteIfExists",e);try{const e=await this.delete(s);return Object.assign(Object.assign({succeeded:!0},e),{_response:e._response})}catch(e){if("BlobNotFound"===(null===(t=e.details)||void 0===t?void 0:t.errorCode))return r.setStatus({code:ze.ERROR,message:"Expected exception when deleting a blob or snapshot only if it exists."}),Object.assign(Object.assign({succeeded:!1},null===(a=e.response)||void 0===a?void 0:a.parsedHeaders),{_response:e.response});throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}async undelete(e={}){const{span:t,updatedOptions:a}=Zl("BlobClient-undelete",e);try{return await this.blobContext.undelete(Object.assign({abortSignal:e.abortSignal},ed(a)))}catch(e){throw t.setStatus({code:ze.ERROR,message:e.message}),e}finally{t.end()}}async setHTTPHeaders(e,t={}){var a;const{span:r,updatedOptions:s}=Zl("BlobClient-setHTTPHeaders",t);t.conditions=t.conditions||{};try{return hc(t.customerProvidedKey,this.isHttps),await this.blobContext.setHttpHeaders(Object.assign({abortSignal:t.abortSignal,blobHttpHeaders:e,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(a=t.conditions)||void 0===a?void 0:a.tagConditions})},ed(s)))}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}async setMetadata(e,t={}){var a;const{span:r,updatedOptions:s}=Zl("BlobClient-setMetadata",t);t.conditions=t.conditions||{};try{return hc(t.customerProvidedKey,this.isHttps),await this.blobContext.setMetadata(Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,metadata:e,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(a=t.conditions)||void 0===a?void 0:a.tagConditions}),cpkInfo:t.customerProvidedKey,encryptionScope:t.encryptionScope},ed(s)))}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}async setTags(e,t={}){var a;const{span:r,updatedOptions:s}=Zl("BlobClient-setTags",t);try{return await this.blobContext.setTags(Object.assign(Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(a=t.conditions)||void 0===a?void 0:a.tagConditions})},ed(s)),{tags:Cm(e)}))}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}async getTags(e={}){var t;const{span:a,updatedOptions:r}=Zl("BlobClient-getTags",e);try{const s=await this.blobContext.getTags(Object.assign({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(t=e.conditions)||void 0===t?void 0:t.tagConditions})},ed(r)));return Object.assign(Object.assign({},s),{_response:s._response,tags:Pm({blobTagSet:s.blobTagSet})||{}})}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}getBlobLeaseClient(e){return new Ad(this,e)}async createSnapshot(e={}){var t;const{span:a,updatedOptions:r}=Zl("BlobClient-createSnapshot",e);e.conditions=e.conditions||{};try{return hc(e.customerProvidedKey,this.isHttps),await this.blobContext.createSnapshot(Object.assign({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,metadata:e.metadata,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(t=e.conditions)||void 0===t?void 0:t.tagConditions}),cpkInfo:e.customerProvidedKey,encryptionScope:e.encryptionScope},ed(r)))}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async beginCopyFromURL(e,t={}){const a=new Sc({blobClient:{abortCopyFromURL:(...e)=>this.abortCopyFromURL(...e),getProperties:(...e)=>this.getProperties(...e),startCopyFromURL:(...e)=>this.startCopyFromURL(...e)},copySource:e,intervalInMs:t.intervalInMs,onProgress:t.onProgress,resumeFrom:t.resumeFrom,startCopyFromURLOptions:t});return await a.poll(),a}async abortCopyFromURL(e,t={}){const{span:a,updatedOptions:r}=Zl("BlobClient-abortCopyFromURL",t);try{return await this.blobContext.abortCopyFromURL(e,Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions},ed(r)))}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async syncCopyFromURL(e,t={}){var a,r,s;const{span:n,updatedOptions:i}=Zl("BlobClient-syncCopyFromURL",t);t.conditions=t.conditions||{},t.sourceConditions=t.sourceConditions||{};try{return await this.blobContext.copyFromURL(e,Object.assign({abortSignal:t.abortSignal,metadata:t.metadata,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(a=t.conditions)||void 0===a?void 0:a.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:t.sourceConditions.ifMatch,sourceIfModifiedSince:t.sourceConditions.ifModifiedSince,sourceIfNoneMatch:t.sourceConditions.ifNoneMatch,sourceIfUnmodifiedSince:t.sourceConditions.ifUnmodifiedSince},sourceContentMD5:t.sourceContentMD5,copySourceAuthorization:Om(t.sourceAuthorization),blobTagsString:vm(t.tags),immutabilityPolicyExpiry:null===(r=t.immutabilityPolicy)||void 0===r?void 0:r.expiriesOn,immutabilityPolicyMode:null===(s=t.immutabilityPolicy)||void 0===s?void 0:s.policyMode,legalHold:t.legalHold,encryptionScope:t.encryptionScope,copySourceTags:t.copySourceTags},ed(i)))}catch(e){throw n.setStatus({code:ze.ERROR,message:e.message}),e}finally{n.end()}}async setAccessTier(e,t={}){var a;const{span:r,updatedOptions:s}=Zl("BlobClient-setAccessTier",t);try{return await this.blobContext.setTier(gc(e),Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(a=t.conditions)||void 0===a?void 0:a.tagConditions}),rehydratePriority:t.rehydratePriority},ed(s)))}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}async downloadToBuffer(e,t,a,r={}){let s,n=0,i=0,o=r;e instanceof Buffer?(s=e,n=t||0,i="number"==typeof a?a:0):(n="number"==typeof e?e:0,i="number"==typeof t?t:0,o=a||{});const{span:m,updatedOptions:l}=Zl("BlobClient-downloadToBuffer",o);try{if(o.blockSize||(o.blockSize=0),o.blockSize<0)throw new RangeError("blockSize option must be >= 0");if(0===o.blockSize&&(o.blockSize=Xo),n<0)throw new RangeError("offset option must be >= 0");if(i&&i<=0)throw new RangeError("count option must be greater than 0");if(o.conditions||(o.conditions={}),!i){const e=await this.getProperties(Object.assign(Object.assign({},o),{tracingOptions:Object.assign(Object.assign({},o.tracingOptions),ed(l))}));if(i=e.contentLength-n,i<0)throw new RangeError(`offset ${n} shouldn't be larger than blob size ${e.contentLength}`)}if(!s)try{s=Buffer.alloc(i)}catch(e){throw new Error(`Unable to allocate the buffer of size: ${i}(in bytes). Please try passing your own buffer to the "downloadToBuffer" method or try using other methods like "download" or "downloadToFile".\t ${e.message}`)}if(s.length<i)throw new RangeError(`The buffer's size should be equal to or larger than the request count of bytes: ${i}`);let e=0;const t=new Ec(o.concurrency);for(let a=n;a<n+i;a+=o.blockSize)t.addOperation((async()=>{let t=n+i;a+o.blockSize<t&&(t=a+o.blockSize),(await this.download(a,t-a,{abortSignal:o.abortSignal,conditions:o.conditions,maxRetryRequests:o.maxRetryRequestsPerBlock,customerProvidedKey:o.customerProvidedKey,tracingOptions:Object.assign(Object.assign({},o.tracingOptions),ed(l))})).readableStreamBody,await void 0,e+=t-a,o.onProgress&&o.onProgress({loadedBytes:e})}));return await t.do(),s}catch(e){throw m.setStatus({code:ze.ERROR,message:e.message}),e}finally{m.end()}}async downloadToFile(e,t=0,a,r={}){const{span:s,updatedOptions:n}=Zl("BlobClient-downloadToFile",r);try{const e=await this.download(t,a,Object.assign(Object.assign({},r),{tracingOptions:Object.assign(Object.assign({},r.tracingOptions),ed(n))}));return e.readableStreamBody&&await void e.readableStreamBody,e.blobDownloadStream=void 0,e}catch(e){throw s.setStatus({code:ze.ERROR,message:e.message}),e}finally{s.end()}}getBlobAndContainerNamesFromUrl(){let e,t;try{const a=po.parse(this.url);if("blob"===a.getHost().split(".")[1]){const r=a.getPath().match("/([^/]*)(/(.*))?");e=r[1],t=r[3]}else if(Sm(a)){const r=a.getPath().match("/([^/]*)/([^/]*)(/(.*))?");e=r[2],t=r[4]}else{const r=a.getPath().match("/([^/]*)(/(.*))?");e=r[1],t=r[3]}if(e=decodeURIComponent(e),t=decodeURIComponent(t),t=t.replace(/\\/g,"/"),!e)throw new Error("Provided containerName is invalid.");return{blobName:t,containerName:e}}catch(e){throw new Error("Unable to extract blobName and containerName with provided information.")}}async startCopyFromURL(e,t={}){var a,r,s;const{span:n,updatedOptions:i}=Zl("BlobClient-startCopyFromURL",t);t.conditions=t.conditions||{},t.sourceConditions=t.sourceConditions||{};try{return await this.blobContext.startCopyFromURL(e,Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,metadata:t.metadata,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(a=t.conditions)||void 0===a?void 0:a.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:t.sourceConditions.ifMatch,sourceIfModifiedSince:t.sourceConditions.ifModifiedSince,sourceIfNoneMatch:t.sourceConditions.ifNoneMatch,sourceIfUnmodifiedSince:t.sourceConditions.ifUnmodifiedSince,sourceIfTags:t.sourceConditions.tagConditions},immutabilityPolicyExpiry:null===(r=t.immutabilityPolicy)||void 0===r?void 0:r.expiriesOn,immutabilityPolicyMode:null===(s=t.immutabilityPolicy)||void 0===s?void 0:s.policyMode,legalHold:t.legalHold,rehydratePriority:t.rehydratePriority,tier:gc(t.tier),blobTagsString:vm(t.tags),sealBlob:t.sealBlob},ed(i)))}catch(e){throw n.setStatus({code:ze.ERROR,message:e.message}),e}finally{n.end()}}generateSasUrl(e){return new Promise((t=>{if(!(this.credential instanceof gl))throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");const a=od(Object.assign({containerName:this._containerName,blobName:this._name,snapshotTime:this._snapshot,versionId:this._versionId},e),this.credential).toString();t(hm(this.url,a))}))}async deleteImmutabilityPolicy(e){const{span:t,updatedOptions:a}=Zl("BlobClient-deleteImmutabilityPolicy",e);try{return await this.blobContext.deleteImmutabilityPolicy(Object.assign({abortSignal:null==e?void 0:e.abortSignal},ed(a)))}catch(e){throw t.setStatus({code:ze.ERROR,message:e.message}),e}finally{t.end()}}async setImmutabilityPolicy(e,t){const{span:a,updatedOptions:r}=Zl("BlobClient-setImmutabilityPolicy",t);try{return await this.blobContext.setImmutabilityPolicy(Object.assign({abortSignal:null==t?void 0:t.abortSignal,immutabilityPolicyExpiry:e.expiriesOn,immutabilityPolicyMode:e.policyMode,modifiedAccessConditions:null==t?void 0:t.modifiedAccessCondition},ed(r)))}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async setLegalHold(e,t){const{span:a,updatedOptions:r}=Zl("BlobClient-setLegalHold",t);try{return await this.blobContext.setLegalHold(e,Object.assign({abortSignal:null==t?void 0:t.abortSignal},ed(r)))}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}}class Tc extends Bc{constructor(e,t,a,r){let s,n;if(r=r||{},pl(t))n=e,s=t;else if(b&&t instanceof gl||t instanceof Wm||v(t))n=e,s=yl(t,r=a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t||!a||"string"!=typeof a)throw new Error("Expecting non-empty strings for containerName and blobName parameters");{const i=t,o=a,m=dm(e);if("AccountConnString"===m.kind){if(!b)throw new Error("Account connection string is only supported in Node.js environment");{const e=new gl(m.accountName,m.accountKey);n=cm(cm(m.url,encodeURIComponent(i)),encodeURIComponent(o)),r.proxyOptions||(r.proxyOptions=void m.proxyUri),s=yl(e,r)}}else{if("SASConnString"!==m.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");n=cm(cm(m.url,encodeURIComponent(i)),encodeURIComponent(o))+"?"+m.accountSas,s=yl(new Wm,r)}}}else n=e,s=yl(new Wm,r);super(n,s),this.appendBlobContext=new Dd(this.storageClientContext)}withSnapshot(e){return new Tc(pm(this.url,Yo,0===e.length?void 0:e),this.pipeline)}async create(e={}){var t,a,r;const{span:s,updatedOptions:n}=Zl("AppendBlobClient-create",e);e.conditions=e.conditions||{};try{return hc(e.customerProvidedKey,this.isHttps),await this.appendBlobContext.create(0,Object.assign({abortSignal:e.abortSignal,blobHttpHeaders:e.blobHTTPHeaders,leaseAccessConditions:e.conditions,metadata:e.metadata,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(t=e.conditions)||void 0===t?void 0:t.tagConditions}),cpkInfo:e.customerProvidedKey,encryptionScope:e.encryptionScope,immutabilityPolicyExpiry:null===(a=e.immutabilityPolicy)||void 0===a?void 0:a.expiriesOn,immutabilityPolicyMode:null===(r=e.immutabilityPolicy)||void 0===r?void 0:r.policyMode,legalHold:e.legalHold,blobTagsString:vm(e.tags)},ed(n)))}catch(e){throw s.setStatus({code:ze.ERROR,message:e.message}),e}finally{s.end()}}async createIfNotExists(e={}){var t,a;const{span:r,updatedOptions:s}=Zl("AppendBlobClient-createIfNotExists",e),n={ifNoneMatch:"*"};try{const e=await this.create(Object.assign(Object.assign({},s),{conditions:n}));return Object.assign(Object.assign({succeeded:!0},e),{_response:e._response})}catch(e){if("BlobAlreadyExists"===(null===(t=e.details)||void 0===t?void 0:t.errorCode))return r.setStatus({code:ze.ERROR,message:"Expected exception when creating a blob only if it does not already exist."}),Object.assign(Object.assign({succeeded:!1},null===(a=e.response)||void 0===a?void 0:a.parsedHeaders),{_response:e.response});throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}async seal(e={}){var t;const{span:a,updatedOptions:r}=Zl("AppendBlobClient-seal",e);e.conditions=e.conditions||{};try{return await this.appendBlobContext.seal(Object.assign({abortSignal:e.abortSignal,appendPositionAccessConditions:e.conditions,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(t=e.conditions)||void 0===t?void 0:t.tagConditions})},ed(r)))}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async appendBlock(e,t,a={}){var r;const{span:s,updatedOptions:n}=Zl("AppendBlobClient-appendBlock",a);a.conditions=a.conditions||{};try{return hc(a.customerProvidedKey,this.isHttps),await this.appendBlobContext.appendBlock(t,e,Object.assign({abortSignal:a.abortSignal,appendPositionAccessConditions:a.conditions,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(r=a.conditions)||void 0===r?void 0:r.tagConditions}),requestOptions:{onUploadProgress:a.onProgress},transactionalContentMD5:a.transactionalContentMD5,transactionalContentCrc64:a.transactionalContentCrc64,cpkInfo:a.customerProvidedKey,encryptionScope:a.encryptionScope},ed(n)))}catch(e){throw s.setStatus({code:ze.ERROR,message:e.message}),e}finally{s.end()}}async appendBlockFromURL(e,t,a,r={}){var s;const{span:n,updatedOptions:i}=Zl("AppendBlobClient-appendBlockFromURL",r);r.conditions=r.conditions||{},r.sourceConditions=r.sourceConditions||{};try{return hc(r.customerProvidedKey,this.isHttps),await this.appendBlobContext.appendBlockFromUrl(e,0,Object.assign({abortSignal:r.abortSignal,sourceRange:Rc({offset:t,count:a}),sourceContentMD5:r.sourceContentMD5,sourceContentCrc64:r.sourceContentCrc64,leaseAccessConditions:r.conditions,appendPositionAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(s=r.conditions)||void 0===s?void 0:s.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:r.sourceConditions.ifMatch,sourceIfModifiedSince:r.sourceConditions.ifModifiedSince,sourceIfNoneMatch:r.sourceConditions.ifNoneMatch,sourceIfUnmodifiedSince:r.sourceConditions.ifUnmodifiedSince},copySourceAuthorization:Om(r.sourceAuthorization),cpkInfo:r.customerProvidedKey,encryptionScope:r.encryptionScope},ed(i)))}catch(e){throw n.setStatus({code:ze.ERROR,message:e.message}),e}finally{n.end()}}}class Mc extends Bc{constructor(e,t,a,r){let s,n;if(r=r||{},pl(t))n=e,s=t;else if(b&&t instanceof gl||t instanceof Wm||v(t))n=e,s=yl(t,r=a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t||!a||"string"!=typeof a)throw new Error("Expecting non-empty strings for containerName and blobName parameters");{const i=t,o=a,m=dm(e);if("AccountConnString"===m.kind){if(!b)throw new Error("Account connection string is only supported in Node.js environment");{const e=new gl(m.accountName,m.accountKey);n=cm(cm(m.url,encodeURIComponent(i)),encodeURIComponent(o)),r.proxyOptions||(r.proxyOptions=void m.proxyUri),s=yl(e,r)}}else{if("SASConnString"!==m.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");n=cm(cm(m.url,encodeURIComponent(i)),encodeURIComponent(o))+"?"+m.accountSas,s=yl(new Wm,r)}}}else n=e,s=yl(new Wm,r);super(n,s),this.blockBlobContext=new $d(this.storageClientContext),this._blobContext=new dd(this.storageClientContext)}withSnapshot(e){return new Mc(pm(this.url,Yo,0===e.length?void 0:e),this.pipeline)}async query(e,t={}){var a;hc(t.customerProvidedKey,this.isHttps);const{span:r,updatedOptions:s}=Zl("BlockBlobClient-query",t);try{if(!b)throw new Error("This operation currently is only supported in Node.js.");hc(t.customerProvidedKey,this.isHttps);const n=await this._blobContext.query(Object.assign({abortSignal:t.abortSignal,queryRequest:{queryType:"SQL",expression:e,inputSerialization:zm(t.inputTextConfiguration),outputSerialization:zm(t.outputTextConfiguration)},leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(a=t.conditions)||void 0===a?void 0:a.tagConditions}),cpkInfo:t.customerProvidedKey},ed(s)));return new kd(n,{abortSignal:t.abortSignal,onProgress:t.onProgress,onError:t.onError})}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}async upload(e,t,a={}){var r,s,n;a.conditions=a.conditions||{};const{span:i,updatedOptions:o}=Zl("BlockBlobClient-upload",a);try{return hc(a.customerProvidedKey,this.isHttps),await this.blockBlobContext.upload(t,e,Object.assign({abortSignal:a.abortSignal,blobHttpHeaders:a.blobHTTPHeaders,leaseAccessConditions:a.conditions,metadata:a.metadata,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(r=a.conditions)||void 0===r?void 0:r.tagConditions}),requestOptions:{onUploadProgress:a.onProgress},cpkInfo:a.customerProvidedKey,encryptionScope:a.encryptionScope,immutabilityPolicyExpiry:null===(s=a.immutabilityPolicy)||void 0===s?void 0:s.expiriesOn,immutabilityPolicyMode:null===(n=a.immutabilityPolicy)||void 0===n?void 0:n.policyMode,legalHold:a.legalHold,tier:gc(a.tier),blobTagsString:vm(a.tags)},ed(o)))}catch(e){throw i.setStatus({code:ze.ERROR,message:e.message}),e}finally{i.end()}}async syncUploadFromURL(e,t={}){var a,r,s,n,i;t.conditions=t.conditions||{};const{span:o,updatedOptions:m}=Zl("BlockBlobClient-syncUploadFromURL",t);try{return hc(t.customerProvidedKey,this.isHttps),await this.blockBlobContext.putBlobFromUrl(0,e,Object.assign(Object.assign(Object.assign({},t),{blobHttpHeaders:t.blobHTTPHeaders,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:t.conditions.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:null===(a=t.sourceConditions)||void 0===a?void 0:a.ifMatch,sourceIfModifiedSince:null===(r=t.sourceConditions)||void 0===r?void 0:r.ifModifiedSince,sourceIfNoneMatch:null===(s=t.sourceConditions)||void 0===s?void 0:s.ifNoneMatch,sourceIfUnmodifiedSince:null===(n=t.sourceConditions)||void 0===n?void 0:n.ifUnmodifiedSince,sourceIfTags:null===(i=t.sourceConditions)||void 0===i?void 0:i.tagConditions},cpkInfo:t.customerProvidedKey,copySourceAuthorization:Om(t.sourceAuthorization),tier:gc(t.tier),blobTagsString:vm(t.tags),copySourceTags:t.copySourceTags}),ed(m)))}catch(e){throw o.setStatus({code:ze.ERROR,message:e.message}),e}finally{o.end()}}async stageBlock(e,t,a,r={}){const{span:s,updatedOptions:n}=Zl("BlockBlobClient-stageBlock",r);try{return hc(r.customerProvidedKey,this.isHttps),await this.blockBlobContext.stageBlock(e,a,t,Object.assign({abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,requestOptions:{onUploadProgress:r.onProgress},transactionalContentMD5:r.transactionalContentMD5,transactionalContentCrc64:r.transactionalContentCrc64,cpkInfo:r.customerProvidedKey,encryptionScope:r.encryptionScope},ed(n)))}catch(e){throw s.setStatus({code:ze.ERROR,message:e.message}),e}finally{s.end()}}async stageBlockFromURL(e,t,a=0,r,s={}){const{span:n,updatedOptions:i}=Zl("BlockBlobClient-stageBlockFromURL",s);try{return hc(s.customerProvidedKey,this.isHttps),await this.blockBlobContext.stageBlockFromURL(e,0,t,Object.assign({abortSignal:s.abortSignal,leaseAccessConditions:s.conditions,sourceContentMD5:s.sourceContentMD5,sourceContentCrc64:s.sourceContentCrc64,sourceRange:0!==a||r?Rc({offset:a,count:r}):void 0,cpkInfo:s.customerProvidedKey,encryptionScope:s.encryptionScope,copySourceAuthorization:Om(s.sourceAuthorization)},ed(i)))}catch(e){throw n.setStatus({code:ze.ERROR,message:e.message}),e}finally{n.end()}}async commitBlockList(e,t={}){var a,r,s;t.conditions=t.conditions||{};const{span:n,updatedOptions:i}=Zl("BlockBlobClient-commitBlockList",t);try{return hc(t.customerProvidedKey,this.isHttps),await this.blockBlobContext.commitBlockList({latest:e},Object.assign({abortSignal:t.abortSignal,blobHttpHeaders:t.blobHTTPHeaders,leaseAccessConditions:t.conditions,metadata:t.metadata,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(a=t.conditions)||void 0===a?void 0:a.tagConditions}),cpkInfo:t.customerProvidedKey,encryptionScope:t.encryptionScope,immutabilityPolicyExpiry:null===(r=t.immutabilityPolicy)||void 0===r?void 0:r.expiriesOn,immutabilityPolicyMode:null===(s=t.immutabilityPolicy)||void 0===s?void 0:s.policyMode,legalHold:t.legalHold,tier:gc(t.tier),blobTagsString:vm(t.tags)},ed(i)))}catch(e){throw n.setStatus({code:ze.ERROR,message:e.message}),e}finally{n.end()}}async getBlockList(e,t={}){var a;const{span:r,updatedOptions:s}=Zl("BlockBlobClient-getBlockList",t);try{const n=await this.blockBlobContext.getBlockList(e,Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(a=t.conditions)||void 0===a?void 0:a.tagConditions})},ed(s)));return n.committedBlocks||(n.committedBlocks=[]),n.uncommittedBlocks||(n.uncommittedBlocks=[]),n}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}async uploadData(e,t={}){const{span:a,updatedOptions:r}=Zl("BlockBlobClient-uploadData",t);try{if(b){let t;return t=e instanceof Buffer?e:e instanceof ArrayBuffer?Buffer.from(e):Buffer.from(e.buffer,e.byteOffset,e.byteLength),this.uploadSeekableInternal(((e,a)=>t.slice(e,e+a)),t.byteLength,r)}{const t=new Blob([e]);return this.uploadSeekableInternal(((e,a)=>t.slice(e,e+a)),t.size,r)}}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async uploadBrowserData(e,t={}){const{span:a,updatedOptions:r}=Zl("BlockBlobClient-uploadBrowserData",t);try{const t=new Blob([e]);return await this.uploadSeekableInternal(((e,a)=>t.slice(e,e+a)),t.size,r)}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async uploadSeekableInternal(e,t,a={}){if(a.blockSize||(a.blockSize=0),a.blockSize<0||a.blockSize>4194304e3)throw new RangeError("blockSize option must be >= 0 and <= 4194304000");if(0===a.maxSingleShotSize||a.maxSingleShotSize||(a.maxSingleShotSize=Qo),a.maxSingleShotSize<0||a.maxSingleShotSize>Qo)throw new RangeError("maxSingleShotSize option must be >= 0 and <= 268435456");if(0===a.blockSize){if(t>2097152e8)throw new RangeError(`${t} is too larger to upload to a block blob.`);t>a.maxSingleShotSize&&(a.blockSize=Math.ceil(t/5e4),a.blockSize<Xo&&(a.blockSize=Xo))}a.blobHTTPHeaders||(a.blobHTTPHeaders={}),a.conditions||(a.conditions={});const{span:r,updatedOptions:s}=Zl("BlockBlobClient-uploadSeekableInternal",a);try{if(t<=a.maxSingleShotSize)return await this.upload(e(0,t),t,s);const n=Math.floor((t-1)/a.blockSize)+1;if(n>5e4)throw new RangeError("The buffer's size is too big or the BlockSize is too small;the number of blocks must be <= 50000");const i=[],o=N();let m=0;const l=new Ec(a.concurrency);for(let r=0;r<n;r++)l.addOperation((async()=>{const l=bm(o,r),d=a.blockSize*r,c=(r===n-1?t:d+a.blockSize)-d;i.push(l),await this.stageBlock(l,e(d,c),c,{abortSignal:a.abortSignal,conditions:a.conditions,encryptionScope:a.encryptionScope,tracingOptions:s.tracingOptions}),m+=c,a.onProgress&&a.onProgress({loadedBytes:m})}));return await l.do(),this.commitBlockList(i,s)}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}async uploadFile(e,t={}){const{span:a,updatedOptions:r}=Zl("BlockBlobClient-uploadFile",t);try{const e=(await void 0).size;return await this.uploadSeekableInternal(((e,t)=>()=>{}),e,Object.assign(Object.assign({},t),{tracingOptions:Object.assign(Object.assign({},t.tracingOptions),ed(r))}))}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async uploadStream(e,t=8388608,a=5,r={}){r.blobHTTPHeaders||(r.blobHTTPHeaders={}),r.conditions||(r.conditions={});const{span:s,updatedOptions:n}=Zl("BlockBlobClient-uploadStream",r);try{let i=0;const o=N();let m=0;const l=[],d=new qc(e,t,a,(async(e,t)=>{const a=bm(o,i);l.push(a),i++,await this.stageBlock(a,e,t,{conditions:r.conditions,encryptionScope:r.encryptionScope,tracingOptions:n.tracingOptions}),m+=t,r.onProgress&&r.onProgress({loadedBytes:m})}),Math.ceil(a/4*3));return await d.do(),await this.commitBlockList(l,Object.assign(Object.assign({},r),{tracingOptions:Object.assign(Object.assign({},r.tracingOptions),ed(n))}))}catch(e){throw s.setStatus({code:ze.ERROR,message:e.message}),e}finally{s.end()}}}class Ic extends Bc{constructor(e,t,a,r){let s,n;if(r=r||{},pl(t))n=e,s=t;else if(b&&t instanceof gl||t instanceof Wm||v(t))n=e,s=yl(t,r=a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t||!a||"string"!=typeof a)throw new Error("Expecting non-empty strings for containerName and blobName parameters");{const i=t,o=a,m=dm(e);if("AccountConnString"===m.kind){if(!b)throw new Error("Account connection string is only supported in Node.js environment");{const e=new gl(m.accountName,m.accountKey);n=cm(cm(m.url,encodeURIComponent(i)),encodeURIComponent(o)),r.proxyOptions||(r.proxyOptions=void m.proxyUri),s=yl(e,r)}}else{if("SASConnString"!==m.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");n=cm(cm(m.url,encodeURIComponent(i)),encodeURIComponent(o))+"?"+m.accountSas,s=yl(new Wm,r)}}}else n=e,s=yl(new Wm,r);super(n,s),this.pageBlobContext=new ec(this.storageClientContext)}withSnapshot(e){return new Ic(pm(this.url,Yo,0===e.length?void 0:e),this.pipeline)}async create(e,t={}){var a,r,s;t.conditions=t.conditions||{};const{span:n,updatedOptions:i}=Zl("PageBlobClient-create",t);try{return hc(t.customerProvidedKey,this.isHttps),await this.pageBlobContext.create(0,e,Object.assign({abortSignal:t.abortSignal,blobHttpHeaders:t.blobHTTPHeaders,blobSequenceNumber:t.blobSequenceNumber,leaseAccessConditions:t.conditions,metadata:t.metadata,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(a=t.conditions)||void 0===a?void 0:a.tagConditions}),cpkInfo:t.customerProvidedKey,encryptionScope:t.encryptionScope,immutabilityPolicyExpiry:null===(r=t.immutabilityPolicy)||void 0===r?void 0:r.expiriesOn,immutabilityPolicyMode:null===(s=t.immutabilityPolicy)||void 0===s?void 0:s.policyMode,legalHold:t.legalHold,tier:gc(t.tier),blobTagsString:vm(t.tags)},ed(i)))}catch(e){throw n.setStatus({code:ze.ERROR,message:e.message}),e}finally{n.end()}}async createIfNotExists(e,t={}){var a,r;const{span:s,updatedOptions:n}=Zl("PageBlobClient-createIfNotExists",t);try{const a={ifNoneMatch:"*"},r=await this.create(e,Object.assign(Object.assign({},t),{conditions:a,tracingOptions:n.tracingOptions}));return Object.assign(Object.assign({succeeded:!0},r),{_response:r._response})}catch(e){if("BlobAlreadyExists"===(null===(a=e.details)||void 0===a?void 0:a.errorCode))return s.setStatus({code:ze.ERROR,message:"Expected exception when creating a blob only if it does not already exist."}),Object.assign(Object.assign({succeeded:!1},null===(r=e.response)||void 0===r?void 0:r.parsedHeaders),{_response:e.response});throw s.setStatus({code:ze.ERROR,message:e.message}),e}finally{s.end()}}async uploadPages(e,t,a,r={}){var s;r.conditions=r.conditions||{};const{span:n,updatedOptions:i}=Zl("PageBlobClient-uploadPages",r);try{return hc(r.customerProvidedKey,this.isHttps),await this.pageBlobContext.uploadPages(a,e,Object.assign({abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(s=r.conditions)||void 0===s?void 0:s.tagConditions}),requestOptions:{onUploadProgress:r.onProgress},range:Rc({offset:t,count:a}),sequenceNumberAccessConditions:r.conditions,transactionalContentMD5:r.transactionalContentMD5,transactionalContentCrc64:r.transactionalContentCrc64,cpkInfo:r.customerProvidedKey,encryptionScope:r.encryptionScope},ed(i)))}catch(e){throw n.setStatus({code:ze.ERROR,message:e.message}),e}finally{n.end()}}async uploadPagesFromURL(e,t,a,r,s={}){var n;s.conditions=s.conditions||{},s.sourceConditions=s.sourceConditions||{};const{span:i,updatedOptions:o}=Zl("PageBlobClient-uploadPagesFromURL",s);try{return hc(s.customerProvidedKey,this.isHttps),await this.pageBlobContext.uploadPagesFromURL(e,Rc({offset:t,count:r}),0,Rc({offset:a,count:r}),Object.assign({abortSignal:s.abortSignal,sourceContentMD5:s.sourceContentMD5,sourceContentCrc64:s.sourceContentCrc64,leaseAccessConditions:s.conditions,sequenceNumberAccessConditions:s.conditions,modifiedAccessConditions:Object.assign(Object.assign({},s.conditions),{ifTags:null===(n=s.conditions)||void 0===n?void 0:n.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:s.sourceConditions.ifMatch,sourceIfModifiedSince:s.sourceConditions.ifModifiedSince,sourceIfNoneMatch:s.sourceConditions.ifNoneMatch,sourceIfUnmodifiedSince:s.sourceConditions.ifUnmodifiedSince},cpkInfo:s.customerProvidedKey,encryptionScope:s.encryptionScope,copySourceAuthorization:Om(s.sourceAuthorization)},ed(o)))}catch(e){throw i.setStatus({code:ze.ERROR,message:e.message}),e}finally{i.end()}}async clearPages(e=0,t,a={}){var r;a.conditions=a.conditions||{};const{span:s,updatedOptions:n}=Zl("PageBlobClient-clearPages",a);try{return await this.pageBlobContext.clearPages(0,Object.assign({abortSignal:a.abortSignal,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(r=a.conditions)||void 0===r?void 0:r.tagConditions}),range:Rc({offset:e,count:t}),sequenceNumberAccessConditions:a.conditions,cpkInfo:a.customerProvidedKey,encryptionScope:a.encryptionScope},ed(n)))}catch(e){throw s.setStatus({code:ze.ERROR,message:e.message}),e}finally{s.end()}}async getPageRanges(e=0,t,a={}){var r;a.conditions=a.conditions||{};const{span:s,updatedOptions:n}=Zl("PageBlobClient-getPageRanges",a);try{return await this.pageBlobContext.getPageRanges(Object.assign({abortSignal:a.abortSignal,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(r=a.conditions)||void 0===r?void 0:r.tagConditions}),range:Rc({offset:e,count:t})},ed(n))).then(xc)}catch(e){throw s.setStatus({code:ze.ERROR,message:e.message}),e}finally{s.end()}}async listPageRangesSegment(e=0,t,a,r={}){var s;const{span:n,updatedOptions:i}=Zl("PageBlobClient-getPageRangesSegment",r);try{return await this.pageBlobContext.getPageRanges(Object.assign({abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(s=r.conditions)||void 0===s?void 0:s.tagConditions}),range:Rc({offset:e,count:t}),marker:a,maxPageSize:r.maxPageSize},ed(i)))}catch(e){throw n.setStatus({code:ze.ERROR,message:e.message}),e}finally{n.end()}}listPageRangeItemSegments(e=0,a,r,n={}){return s(this,arguments,(function*(){let s;if(r||void 0===r)do{s=yield t(this.listPageRangesSegment(e,a,r,n)),r=s.continuationToken,yield yield t(yield t(s))}while(r)}))}listPageRangeItems(e=0,a,r={}){return s(this,arguments,(function*(){var s,o;try{for(var m,l=i(this.listPageRangeItemSegments(e,a,void 0,r));!(m=yield t(l.next())).done;){const e=m.value;yield t(yield*n(i(km(e))))}}catch(e){s={error:e}}finally{try{m&&!m.done&&(o=l.return)&&(yield t(o.call(l)))}finally{if(s)throw s.error}}}))}listPageRanges(e=0,t,a={}){a.conditions=a.conditions||{};const r=this.listPageRangeItems(e,t,a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(r={})=>this.listPageRangeItemSegments(e,t,r.continuationToken,Object.assign({maxPageSize:r.maxPageSize},a))}}async getPageRangesDiff(e,t,a,r={}){var s;r.conditions=r.conditions||{};const{span:n,updatedOptions:i}=Zl("PageBlobClient-getPageRangesDiff",r);try{return await this.pageBlobContext.getPageRangesDiff(Object.assign({abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(s=r.conditions)||void 0===s?void 0:s.tagConditions}),prevsnapshot:a,range:Rc({offset:e,count:t})},ed(i))).then(xc)}catch(e){throw n.setStatus({code:ze.ERROR,message:e.message}),e}finally{n.end()}}async listPageRangesDiffSegment(e,t,a,r,s){var n;const{span:i,updatedOptions:o}=Zl("PageBlobClient-getPageRangesDiffSegment",s);try{return await this.pageBlobContext.getPageRangesDiff(Object.assign({abortSignal:null==s?void 0:s.abortSignal,leaseAccessConditions:null==s?void 0:s.conditions,modifiedAccessConditions:Object.assign(Object.assign({},null==s?void 0:s.conditions),{ifTags:null===(n=null==s?void 0:s.conditions)||void 0===n?void 0:n.tagConditions}),prevsnapshot:a,range:Rc({offset:e,count:t}),marker:r,maxPageSize:null==s?void 0:s.maxPageSize},ed(o)))}catch(e){throw i.setStatus({code:ze.ERROR,message:e.message}),e}finally{i.end()}}listPageRangeDiffItemSegments(e,a,r,n,i){return s(this,arguments,(function*(){let s;if(n||void 0===n)do{s=yield t(this.listPageRangesDiffSegment(e,a,r,n,i)),n=s.continuationToken,yield yield t(yield t(s))}while(n)}))}listPageRangeDiffItems(e,a,r,o){return s(this,arguments,(function*(){var s,m;try{for(var l,d=i(this.listPageRangeDiffItemSegments(e,a,r,void 0,o));!(l=yield t(d.next())).done;){const e=l.value;yield t(yield*n(i(km(e))))}}catch(e){s={error:e}}finally{try{l&&!l.done&&(m=d.return)&&(yield t(m.call(d)))}finally{if(s)throw s.error}}}))}listPageRangesDiff(e,t,a,r={}){r.conditions=r.conditions||{};const s=this.listPageRangeDiffItems(e,t,a,Object.assign({},r));return{next:()=>s.next(),[Symbol.asyncIterator](){return this},byPage:(s={})=>this.listPageRangeDiffItemSegments(e,t,a,s.continuationToken,Object.assign({maxPageSize:s.maxPageSize},r))}}async getPageRangesDiffForManagedDisks(e,t,a,r={}){var s;r.conditions=r.conditions||{};const{span:n,updatedOptions:i}=Zl("PageBlobClient-GetPageRangesDiffForManagedDisks",r);try{return await this.pageBlobContext.getPageRangesDiff(Object.assign({abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(s=r.conditions)||void 0===s?void 0:s.tagConditions}),prevSnapshotUrl:a,range:Rc({offset:e,count:t})},ed(i))).then(xc)}catch(e){throw n.setStatus({code:ze.ERROR,message:e.message}),e}finally{n.end()}}async resize(e,t={}){var a;t.conditions=t.conditions||{};const{span:r,updatedOptions:s}=Zl("PageBlobClient-resize",t);try{return await this.pageBlobContext.resize(e,Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(a=t.conditions)||void 0===a?void 0:a.tagConditions}),encryptionScope:t.encryptionScope},ed(s)))}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}async updateSequenceNumber(e,t,a={}){var r;a.conditions=a.conditions||{};const{span:s,updatedOptions:n}=Zl("PageBlobClient-updateSequenceNumber",a);try{return await this.pageBlobContext.updateSequenceNumber(e,Object.assign({abortSignal:a.abortSignal,blobSequenceNumber:t,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(r=a.conditions)||void 0===r?void 0:r.tagConditions})},ed(n)))}catch(e){throw s.setStatus({code:ze.ERROR,message:e.message}),e}finally{s.end()}}async startCopyIncremental(e,t={}){var a;const{span:r,updatedOptions:s}=Zl("PageBlobClient-startCopyIncremental",t);try{return await this.pageBlobContext.copyIncremental(e,Object.assign({abortSignal:t.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(a=t.conditions)||void 0===a?void 0:a.tagConditions})},ed(s)))}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}}const Hc=": ";class Ac{constructor(e,t){if(!e||!e.contentType)throw new RangeError("batchResponse is malformed or doesn't contain valid content-type.");if(!t||0===t.size)throw new RangeError("Invalid state: subRequests is not provided or size is 0.");this.batchResponse=e,this.subRequests=t,this.responseBatchBoundary=this.batchResponse.contentType.split("=")[1],this.perResponsePrefix=`--${this.responseBatchBoundary}${sm}`,this.batchResponseEnding=`--${this.responseBatchBoundary}--`}async parseBatchResponse(){if(202!==this.batchResponse._response.status)throw new Error(`Invalid state: batch request failed with status: '${this.batchResponse._response.status}'.`);const e=(await async function(e){return async function(e){const t=new FileReader;return new Promise(((a,r)=>{t.onloadend=e=>{a(e.target.result)},t.onerror=r,t.readAsText(e)}))}(await e.blobBody)}(this.batchResponse)).split(this.batchResponseEnding)[0].split(this.perResponsePrefix).slice(1),t=e.length;if(t!==this.subRequests.size&&1!==t)throw new Error("Invalid state: sub responses' count is not equal to sub requests' count.");const a=new Array(t);let r=0,s=0;for(let n=0;n<t;n++){const t=e[n],i={};i.headers=new el;const o=t.split(`${sm}`);let m=!1,l=!1,d=!1,c=-1;for(const e of o)if(m)if(""!==e.trim())if(l)i.bodyAsText||(i.bodyAsText=""),i.bodyAsText+=e;else{if(-1===e.indexOf(Hc))throw new Error(`Invalid state: find non-empty line '${e}' without HTTP header delimiter '${Hc}'.`);const t=e.split(Hc);i.headers.set(t[0],t[1]),"x-ms-error-code"===t[0]&&(i.errorCode=t[1],d=!0)}else l||(l=!0);else if(e.startsWith(tm)&&(c=parseInt(e.split(Hc)[1])),e.startsWith(nm)){m=!0;const t=e.split(" ");i.status=parseInt(t[1]),i.statusMessage=t.slice(2).join(" ")}-1!==c&&Number.isInteger(c)&&c>=0&&c<this.subRequests.size&&void 0===a[c]?(i._request=this.subRequests.get(c),a[c]=i):Ko.error(`subResponses[${n}] is dropped as the Content-ID is not found or invalid, Content-ID: ${c}`),d?s++:r++}return{subResponses:a,subResponsesSucceededCount:r,subResponsesFailedCount:s}}}var kc;!function(e){e[e.LOCKED=0]="LOCKED",e[e.UNLOCKED=1]="UNLOCKED"}(kc||(kc={}));class Dc{static async lock(e){return new Promise((t=>{void 0===this.keys[e]||this.keys[e]===kc.UNLOCKED?(this.keys[e]=kc.LOCKED,t()):this.onUnlockEvent(e,(()=>{this.keys[e]=kc.LOCKED,t()}))}))}static async unlock(e){return new Promise((t=>{this.keys[e]===kc.LOCKED&&this.emitUnlockEvent(e),delete this.keys[e],t()}))}static onUnlockEvent(e,t){void 0===this.listeners[e]?this.listeners[e]=[t]:this.listeners[e].push(t)}static emitUnlockEvent(e){if(void 0!==this.listeners[e]&&this.listeners[e].length>0){const t=this.listeners[e].shift();setImmediate((()=>{t.call(this)}))}}}Dc.keys={},Dc.listeners={};class Lc{constructor(){this.batch="batch",this.batchRequest=new _c}getMultiPartContentType(){return this.batchRequest.getMultipartContentType()}getHttpRequestBody(){return this.batchRequest.getHttpRequestBody()}getSubRequests(){return this.batchRequest.getSubRequests()}async addSubRequestInternal(e,t){await Dc.lock(this.batch);try{this.batchRequest.preAddSubRequest(e),await t(),this.batchRequest.postAddSubRequest(e)}finally{await Dc.unlock(this.batch)}}setBatchType(e){if(this.batchType||(this.batchType=e),this.batchType!==e)throw new RangeError(`BlobBatch only supports one operation type per batch and it already is being used for ${this.batchType} operations.`)}async deleteBlob(e,t,a){let r,s;if("string"==typeof e&&(b&&t instanceof gl||t instanceof Wm||v(t)))r=e,s=t;else{if(!(e instanceof Bc))throw new RangeError("Invalid arguments. Either url and credential, or BlobClient need be provided.");r=e.url,s=e.credential,a=t}a||(a={});const{span:n,updatedOptions:i}=Zl("BatchDeleteRequest-addSubRequest",a);try{this.setBatchType("delete"),await this.addSubRequestInternal({url:r,credential:s},(async()=>{await new Bc(r,this.batchRequest.createPipeline(s)).delete(i)}))}catch(e){throw n.setStatus({code:ze.ERROR,message:e.message}),e}finally{n.end()}}async setBlobAccessTier(e,t,a,r){let s,n,i;if("string"==typeof e&&(b&&t instanceof gl||t instanceof Wm||v(t)))s=e,n=t,i=a;else{if(!(e instanceof Bc))throw new RangeError("Invalid arguments. Either url and credential, or BlobClient need be provided.");s=e.url,n=e.credential,i=t,r=a}r||(r={});const{span:o,updatedOptions:m}=Zl("BatchSetTierRequest-addSubRequest",r);try{this.setBatchType("setAccessTier"),await this.addSubRequestInternal({url:s,credential:n},(async()=>{await new Bc(s,this.batchRequest.createPipeline(n)).setAccessTier(i,m)}))}catch(e){throw o.setStatus({code:ze.ERROR,message:e.message}),e}finally{o.end()}}}class _c{constructor(){this.operationCount=0,this.body="";const e=N();this.boundary=`batch_${e}`,this.subRequestPrefix=`--${this.boundary}${sm}Content-Type: application/http${sm}Content-Transfer-Encoding: binary`,this.multipartContentType=`multipart/mixed; boundary=${this.boundary}`,this.batchRequestEnding=`--${this.boundary}--`,this.subRequests=new Map}createPipeline(e){const t=e instanceof Wm,a=3+(t?0:1),r=new Array(a);return r[0]=Lo(),r[1]=new Fc,t||(r[2]=v(e)?wm(Il(e,Wo),e):e),r[a-1]=new Uc(this),new ul(r,{})}appendSubRequestToBody(e){this.body+=[this.subRequestPrefix,`${tm}: ${this.operationCount}`,"",`${e.method.toString()} ${gm(e.url)} ${nm}${sm}`].join(sm);for(const t of e.headers.headersArray())this.body+=`${t.name}: ${t.value}${sm}`;this.body+=sm}preAddSubRequest(e){if(this.operationCount>=256)throw new RangeError("Cannot exceed 256 sub requests in a single batch");const t=ym(e.url);if(!t||""===t)throw new RangeError(`Invalid url for sub request: '${e.url}'`)}postAddSubRequest(e){this.subRequests.set(this.operationCount,e),this.operationCount++}getHttpRequestBody(){return`${this.body}${this.batchRequestEnding}${sm}`}getMultipartContentType(){return this.multipartContentType}getSubRequests(){return this.subRequests}}class jc extends qi{constructor(e,t,a){super(t,a),this.dummyResponse={request:new El,status:200,headers:new el},this.batchRequest=e}async sendRequest(e){return await this.batchRequest.appendSubRequestToBody(e),this.dummyResponse}}class Uc{constructor(e){this.batchRequest=e}create(e,t){return new jc(this.batchRequest,e,t)}}class Vc extends qi{constructor(e,t){super(e,t)}async sendRequest(e){let t="";for(const a of e.headers.headersArray())Nm(a.name,"x-ms-version")&&(t=a.name);return""!==t&&e.headers.remove(t),this._nextPolicy.sendRequest(e)}}class Fc{create(e,t){return new Vc(e,t)}}class $c{constructor(e,t,a){let r;r=pl(t)?t:yl(t||new Wm,a);const s=new Jl(e,r.toServiceClientOptions()),n=ym(e);this.serviceOrContainerContext=n&&"/"!==n?new li(s):new Zn(s)}createBatch(){return new Lc}async deleteBlobs(e,t,a){const r=new Lc;for(const s of e)"string"==typeof s?await r.deleteBlob(s,t,a):await r.deleteBlob(s,t);return this.submitBatch(r)}async setBlobsAccessTier(e,t,a,r){const s=new Lc;for(const n of e)"string"==typeof n?await s.setBlobAccessTier(n,t,a,r):await s.setBlobAccessTier(n,t,a);return this.submitBatch(s)}async submitBatch(e,t={}){if(!e||0===e.getSubRequests().size)throw new RangeError("Batch request should contain one or more sub requests.");const{span:a,updatedOptions:r}=Zl("BlobBatchClient-submitBatch",t);try{const n=e.getHttpRequestBody(),i=await this.serviceOrContainerContext.submitBatch((s=n,new Blob([s]).size),e.getMultiPartContentType(),n,Object.assign(Object.assign({},t),ed(r))),o=new Ac(i,e.getSubRequests()),m=await o.parseBatchResponse();return{_response:i._response,contentType:i.contentType,errorCode:i.errorCode,requestId:i.requestId,clientRequestId:i.clientRequestId,version:i.version,subResponses:m.subResponses,subResponsesSucceededCount:m.subResponsesSucceededCount,subResponsesFailedCount:m.subResponsesFailedCount}}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}var s}}class Kc extends Yl{constructor(e,t,a){let r,s;if(a=a||{},pl(t))s=e,r=t;else if(b&&t instanceof gl||t instanceof Wm||v(t))s=e,r=yl(t,a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t)throw new Error("Expecting non-empty strings for containerName parameter");{const n=t,i=dm(e);if("AccountConnString"===i.kind){if(!b)throw new Error("Account connection string is only supported in Node.js environment");{const e=new gl(i.accountName,i.accountKey);s=cm(i.url,encodeURIComponent(n)),a.proxyOptions||(a.proxyOptions=void i.proxyUri),r=yl(e,a)}}else{if("SASConnString"!==i.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");s=cm(i.url,encodeURIComponent(n))+"?"+i.accountSas,r=yl(new Wm,a)}}}else s=e,r=yl(new Wm,a);super(s,r),this._containerName=this.getContainerNameFromUrl(),this.containerContext=new li(this.storageClientContext)}get containerName(){return this._containerName}async create(e={}){const{span:t,updatedOptions:a}=Zl("ContainerClient-create",e);try{return await this.containerContext.create(Object.assign(Object.assign({},e),ed(a)))}catch(e){throw t.setStatus({code:ze.ERROR,message:e.message}),e}finally{t.end()}}async createIfNotExists(e={}){var t,a;const{span:r,updatedOptions:s}=Zl("ContainerClient-createIfNotExists",e);try{const e=await this.create(s);return Object.assign(Object.assign({succeeded:!0},e),{_response:e._response})}catch(e){if("ContainerAlreadyExists"===(null===(t=e.details)||void 0===t?void 0:t.errorCode))return r.setStatus({code:ze.ERROR,message:"Expected exception when creating a container only if it does not already exist."}),Object.assign(Object.assign({succeeded:!1},null===(a=e.response)||void 0===a?void 0:a.parsedHeaders),{_response:e.response});throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}async exists(e={}){const{span:t,updatedOptions:a}=Zl("ContainerClient-exists",e);try{return await this.getProperties({abortSignal:e.abortSignal,tracingOptions:a.tracingOptions}),!0}catch(e){if(404===e.statusCode)return t.setStatus({code:ze.ERROR,message:"Expected exception when checking container existence"}),!1;throw t.setStatus({code:ze.ERROR,message:e.message}),e}finally{t.end()}}getBlobClient(e){return new Bc(cm(this.url,Dm(e)),this.pipeline)}getAppendBlobClient(e){return new Tc(cm(this.url,Dm(e)),this.pipeline)}getBlockBlobClient(e){return new Mc(cm(this.url,Dm(e)),this.pipeline)}getPageBlobClient(e){return new Ic(cm(this.url,Dm(e)),this.pipeline)}async getProperties(e={}){e.conditions||(e.conditions={});const{span:t,updatedOptions:a}=Zl("ContainerClient-getProperties",e);try{return await this.containerContext.getProperties(Object.assign(Object.assign({abortSignal:e.abortSignal},e.conditions),ed(a)))}catch(e){throw t.setStatus({code:ze.ERROR,message:e.message}),e}finally{t.end()}}async delete(e={}){e.conditions||(e.conditions={});const{span:t,updatedOptions:a}=Zl("ContainerClient-delete",e);try{return await this.containerContext.delete(Object.assign({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,modifiedAccessConditions:e.conditions},ed(a)))}catch(e){throw t.setStatus({code:ze.ERROR,message:e.message}),e}finally{t.end()}}async deleteIfExists(e={}){var t,a;const{span:r,updatedOptions:s}=Zl("ContainerClient-deleteIfExists",e);try{const e=await this.delete(s);return Object.assign(Object.assign({succeeded:!0},e),{_response:e._response})}catch(e){if("ContainerNotFound"===(null===(t=e.details)||void 0===t?void 0:t.errorCode))return r.setStatus({code:ze.ERROR,message:"Expected exception when deleting a container only if it exists."}),Object.assign(Object.assign({succeeded:!1},null===(a=e.response)||void 0===a?void 0:a.parsedHeaders),{_response:e.response});throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}async setMetadata(e,t={}){if(t.conditions||(t.conditions={}),t.conditions.ifUnmodifiedSince)throw new RangeError("the IfUnmodifiedSince must have their default values because they are ignored by the blob service");const{span:a,updatedOptions:r}=Zl("ContainerClient-setMetadata",t);try{return await this.containerContext.setMetadata(Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,metadata:e,modifiedAccessConditions:t.conditions},ed(r)))}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async getAccessPolicy(e={}){e.conditions||(e.conditions={});const{span:t,updatedOptions:a}=Zl("ContainerClient-getAccessPolicy",e);try{const r=await this.containerContext.getAccessPolicy(Object.assign({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions},ed(a))),s={_response:r._response,blobPublicAccess:r.blobPublicAccess,date:r.date,etag:r.etag,errorCode:r.errorCode,lastModified:r.lastModified,requestId:r.requestId,clientRequestId:r.clientRequestId,signedIdentifiers:[],version:r.version};for(const e of r){let t;e.accessPolicy&&(t={permissions:e.accessPolicy.permissions},e.accessPolicy.expiresOn&&(t.expiresOn=new Date(e.accessPolicy.expiresOn)),e.accessPolicy.startsOn&&(t.startsOn=new Date(e.accessPolicy.startsOn))),s.signedIdentifiers.push({accessPolicy:t,id:e.id})}return s}catch(e){throw t.setStatus({code:ze.ERROR,message:e.message}),e}finally{t.end()}}async setAccessPolicy(e,t,a={}){a.conditions=a.conditions||{};const{span:r,updatedOptions:s}=Zl("ContainerClient-setAccessPolicy",a);try{const n=[];for(const e of t||[])n.push({accessPolicy:{expiresOn:e.accessPolicy.expiresOn?xm(e.accessPolicy.expiresOn):"",permissions:e.accessPolicy.permissions,startsOn:e.accessPolicy.startsOn?xm(e.accessPolicy.startsOn):""},id:e.id});return await this.containerContext.setAccessPolicy(Object.assign({abortSignal:a.abortSignal,access:e,containerAcl:n,leaseAccessConditions:a.conditions,modifiedAccessConditions:a.conditions},ed(s)))}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}getBlobLeaseClient(e){return new Ad(this,e)}async uploadBlockBlob(e,t,a,r={}){const{span:s,updatedOptions:n}=Zl("ContainerClient-uploadBlockBlob",r);try{const r=this.getBlockBlobClient(e),i=await r.upload(t,a,n);return{blockBlobClient:r,response:i}}catch(e){throw s.setStatus({code:ze.ERROR,message:e.message}),e}finally{s.end()}}async deleteBlob(e,t={}){const{span:a,updatedOptions:r}=Zl("ContainerClient-deleteBlob",t);try{let s=this.getBlobClient(e);return t.versionId&&(s=s.withVersion(t.versionId)),await s.delete(r)}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async listBlobFlatSegment(e,t={}){const{span:a,updatedOptions:r}=Zl("ContainerClient-listBlobFlatSegment",t);try{const n=await this.containerContext.listBlobFlatSegment(Object.assign(Object.assign({marker:e},t),ed(r)));return n.segment.blobItems=[],void 0!==n.segment.Blob&&(n.segment.blobItems=Am(n.segment.Blob)),Object.assign(Object.assign({},n),{_response:Object.assign(Object.assign({},n._response),{parsedBody:(s=n._response.parsedBody,Object.assign(Object.assign({},s),{segment:{blobItems:s.segment.blobItems.map((e=>Object.assign(Object.assign({},e),{name:Em(e.name)})))}}))}),segment:Object.assign(Object.assign({},n.segment),{blobItems:n.segment.blobItems.map((e=>Object.assign(Object.assign({},e),{name:Em(e.name),tags:Pm(e.blobTags),objectReplicationSourceProperties:Rm(e.objectReplicationMetadata)})))})})}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}var s}async listBlobHierarchySegment(e,t,a={}){var r;const{span:s,updatedOptions:n}=Zl("ContainerClient-listBlobHierarchySegment",a);try{const i=await this.containerContext.listBlobHierarchySegment(e,Object.assign(Object.assign({marker:t},a),ed(n)));return i.segment.blobItems=[],void 0!==i.segment.Blob&&(i.segment.blobItems=Am(i.segment.Blob)),i.segment.blobPrefixes=[],void 0!==i.segment.BlobPrefix&&(i.segment.blobPrefixes=function(e){const t=[];return e instanceof Array?e.forEach((e=>{t.push(Im(e))})):t.push(Im(e)),t}(i.segment.BlobPrefix)),Object.assign(Object.assign({},i),{_response:Object.assign(Object.assign({},i._response),{parsedBody:qm(i._response.parsedBody)}),segment:Object.assign(Object.assign({},i.segment),{blobItems:i.segment.blobItems.map((e=>Object.assign(Object.assign({},e),{name:Em(e.name),tags:Pm(e.blobTags),objectReplicationSourceProperties:Rm(e.objectReplicationMetadata)}))),blobPrefixes:null===(r=i.segment.blobPrefixes)||void 0===r?void 0:r.map((e=>({name:Em(e.name)})))})})}catch(e){throw s.setStatus({code:ze.ERROR,message:e.message}),e}finally{s.end()}}listSegments(e,a={}){return s(this,arguments,(function*(){let r;if(e||void 0===e)do{r=yield t(this.listBlobFlatSegment(e,a)),e=r.continuationToken,yield yield t(yield t(r))}while(e)}))}listItems(e={}){return s(this,arguments,(function*(){var a,r;try{for(var s,o=i(this.listSegments(void 0,e));!(s=yield t(o.next())).done;){const e=s.value;yield t(yield*n(i(e.segment.blobItems)))}}catch(e){a={error:e}}finally{try{s&&!s.done&&(r=o.return)&&(yield t(r.call(o)))}finally{if(a)throw a.error}}}))}listBlobsFlat(e={}){const t=[];e.includeCopy&&t.push("copy"),e.includeDeleted&&t.push("deleted"),e.includeMetadata&&t.push("metadata"),e.includeSnapshots&&t.push("snapshots"),e.includeVersions&&t.push("versions"),e.includeUncommitedBlobs&&t.push("uncommittedblobs"),e.includeTags&&t.push("tags"),e.includeDeletedWithVersions&&t.push("deletedwithversions"),e.includeImmutabilityPolicy&&t.push("immutabilitypolicy"),e.includeLegalHold&&t.push("legalhold"),""===e.prefix&&(e.prefix=void 0);const a=Object.assign(Object.assign({},e),t.length>0?{include:t}:{}),r=this.listItems(a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(e={})=>this.listSegments(e.continuationToken,Object.assign({maxPageSize:e.maxPageSize},a))}}listHierarchySegments(e,a,r={}){return s(this,arguments,(function*(){let s;if(a||void 0===a)do{s=yield t(this.listBlobHierarchySegment(e,a,r)),a=s.continuationToken,yield yield t(yield t(s))}while(a)}))}listItemsByHierarchy(e,a={}){return s(this,arguments,(function*(){var r,s;try{for(var n,o=i(this.listHierarchySegments(e,void 0,a));!(n=yield t(o.next())).done;){const e=n.value.segment;if(e.blobPrefixes)for(const a of e.blobPrefixes)yield yield t(Object.assign({kind:"prefix"},a));for(const a of e.blobItems)yield yield t(Object.assign({kind:"blob"},a))}}catch(e){r={error:e}}finally{try{n&&!n.done&&(s=o.return)&&(yield t(s.call(o)))}finally{if(r)throw r.error}}}))}listBlobsByHierarchy(e,t={}){if(""===e)throw new RangeError("delimiter should contain one or more characters");const a=[];t.includeCopy&&a.push("copy"),t.includeDeleted&&a.push("deleted"),t.includeMetadata&&a.push("metadata"),t.includeSnapshots&&a.push("snapshots"),t.includeVersions&&a.push("versions"),t.includeUncommitedBlobs&&a.push("uncommittedblobs"),t.includeTags&&a.push("tags"),t.includeDeletedWithVersions&&a.push("deletedwithversions"),t.includeImmutabilityPolicy&&a.push("immutabilitypolicy"),t.includeLegalHold&&a.push("legalhold"),""===t.prefix&&(t.prefix=void 0);const r=Object.assign(Object.assign({},t),a.length>0?{include:a}:{}),s=this.listItemsByHierarchy(e,r);return{next:async()=>s.next(),[Symbol.asyncIterator](){return this},byPage:(t={})=>this.listHierarchySegments(e,t.continuationToken,Object.assign({maxPageSize:t.maxPageSize},r))}}async findBlobsByTagsSegment(e,t,a={}){const{span:r,updatedOptions:s}=Zl("ContainerClient-findBlobsByTagsSegment",a);try{const n=await this.containerContext.filterBlobs(Object.assign({abortSignal:a.abortSignal,where:e,marker:t,maxPageSize:a.maxPageSize},ed(s)));return Object.assign(Object.assign({},n),{_response:n._response,blobs:n.blobs.map((e=>{var t;let a="";return 1===(null===(t=e.tags)||void 0===t?void 0:t.blobTagSet.length)&&(a=e.tags.blobTagSet[0].value),Object.assign(Object.assign({},e),{tags:Pm(e.tags),tagValue:a})}))})}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}findBlobsByTagsSegments(e,a,r={}){return s(this,arguments,(function*(){let s;if(a||void 0===a)do{s=yield t(this.findBlobsByTagsSegment(e,a,r)),s.blobs=s.blobs||[],a=s.continuationToken,yield yield t(s)}while(a)}))}findBlobsByTagsItems(e,a={}){return s(this,arguments,(function*(){var r,s;try{for(var o,m=i(this.findBlobsByTagsSegments(e,void 0,a));!(o=yield t(m.next())).done;){const e=o.value;yield t(yield*n(i(e.blobs)))}}catch(e){r={error:e}}finally{try{o&&!o.done&&(s=m.return)&&(yield t(s.call(m)))}finally{if(r)throw r.error}}}))}findBlobsByTags(e,t={}){const a=Object.assign({},t),r=this.findBlobsByTagsItems(e,a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(t={})=>this.findBlobsByTagsSegments(e,t.continuationToken,Object.assign({maxPageSize:t.maxPageSize},a))}}getContainerNameFromUrl(){let e;try{const t=po.parse(this.url);if(e="blob"===t.getHost().split(".")[1]?t.getPath().split("/")[1]:Sm(t)?t.getPath().split("/")[2]:t.getPath().split("/")[1],e=decodeURIComponent(e),!e)throw new Error("Provided containerName is invalid.");return e}catch(e){throw new Error("Unable to extract containerName with provided information.")}}generateSasUrl(e){return new Promise((t=>{if(!(this.credential instanceof gl))throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");const a=od(Object.assign({containerName:this._containerName},e),this.credential).toString();t(hm(this.url,a))}))}getBlobBatchClient(){return new $c(this.url,this.pipeline)}}class Gc{constructor(){this.read=!1,this.write=!1,this.delete=!1,this.deleteVersion=!1,this.list=!1,this.add=!1,this.create=!1,this.update=!1,this.process=!1,this.tag=!1,this.filter=!1,this.setImmutabilityPolicy=!1,this.permanentDelete=!1}static parse(e){const t=new Gc;for(const a of e)switch(a){case"r":t.read=!0;break;case"w":t.write=!0;break;case"d":t.delete=!0;break;case"x":t.deleteVersion=!0;break;case"l":t.list=!0;break;case"a":t.add=!0;break;case"c":t.create=!0;break;case"u":t.update=!0;break;case"p":t.process=!0;break;case"t":t.tag=!0;break;case"f":t.filter=!0;break;case"i":t.setImmutabilityPolicy=!0;break;case"y":t.permanentDelete=!0;break;default:throw new RangeError(`Invalid permission character: ${a}`)}return t}static from(e){const t=new Gc;return e.read&&(t.read=!0),e.write&&(t.write=!0),e.delete&&(t.delete=!0),e.deleteVersion&&(t.deleteVersion=!0),e.filter&&(t.filter=!0),e.tag&&(t.tag=!0),e.list&&(t.list=!0),e.add&&(t.add=!0),e.create&&(t.create=!0),e.update&&(t.update=!0),e.process&&(t.process=!0),e.setImmutabilityPolicy&&(t.setImmutabilityPolicy=!0),e.permanentDelete&&(t.permanentDelete=!0),t}toString(){const e=[];return this.read&&e.push("r"),this.write&&e.push("w"),this.delete&&e.push("d"),this.deleteVersion&&e.push("x"),this.filter&&e.push("f"),this.tag&&e.push("t"),this.list&&e.push("l"),this.add&&e.push("a"),this.create&&e.push("c"),this.update&&e.push("u"),this.process&&e.push("p"),this.setImmutabilityPolicy&&e.push("i"),this.permanentDelete&&e.push("y"),e.join("")}}class Qc{constructor(){this.service=!1,this.container=!1,this.object=!1}static parse(e){const t=new Qc;for(const a of e)switch(a){case"s":t.service=!0;break;case"c":t.container=!0;break;case"o":t.object=!0;break;default:throw new RangeError(`Invalid resource type: ${a}`)}return t}toString(){const e=[];return this.service&&e.push("s"),this.container&&e.push("c"),this.object&&e.push("o"),e.join("")}}class Xc{constructor(){this.blob=!1,this.file=!1,this.queue=!1,this.table=!1}static parse(e){const t=new Xc;for(const a of e)switch(a){case"b":t.blob=!0;break;case"f":t.file=!0;break;case"q":t.queue=!0;break;case"t":t.table=!0;break;default:throw new RangeError(`Invalid service character: ${a}`)}return t}toString(){const e=[];return this.blob&&e.push("b"),this.table&&e.push("t"),this.queue&&e.push("q"),this.file&&e.push("f"),e.join("")}}class Wc extends Yl{constructor(e,t,a){let r;r=pl(t)?t:b&&t instanceof gl||t instanceof Wm||v(t)?yl(t,a):yl(new Wm,a),super(e,r),this.serviceContext=new Zn(this.storageClientContext)}static fromConnectionString(e,t){t=t||{};const a=dm(e);if("AccountConnString"===a.kind){if(b){const e=new gl(a.accountName,a.accountKey);t.proxyOptions||(t.proxyOptions=void a.proxyUri);const r=yl(e,t);return new Wc(a.url,r)}throw new Error("Account connection string is only supported in Node.js environment")}if("SASConnString"===a.kind){const e=yl(new Wm,t);return new Wc(a.url+"?"+a.accountSas,e)}throw new Error("Connection string must be either an Account connection string or a SAS connection string")}getContainerClient(e){return new Kc(cm(this.url,encodeURIComponent(e)),this.pipeline)}async createContainer(e,t={}){const{span:a,updatedOptions:r}=Zl("BlobServiceClient-createContainer",t);try{const t=this.getContainerClient(e),s=await t.create(r);return{containerClient:t,containerCreateResponse:s}}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async deleteContainer(e,t={}){const{span:a,updatedOptions:r}=Zl("BlobServiceClient-deleteContainer",t);try{const t=this.getContainerClient(e);return await t.delete(r)}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async undeleteContainer(e,t,a={}){const{span:r,updatedOptions:s}=Zl("BlobServiceClient-undeleteContainer",a);try{const n=this.getContainerClient(a.destinationContainerName||e),i=new li(n.storageClientContext);return{containerClient:n,containerUndeleteResponse:await i.restore(Object.assign({deletedContainerName:e,deletedContainerVersion:t},s))}}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}async renameContainer(e,t,a={}){var r;const{span:s,updatedOptions:n}=Zl("BlobServiceClient-renameContainer",a);try{const i=this.getContainerClient(t),o=new li(i.storageClientContext);return{containerClient:i,containerRenameResponse:await o.rename(e,Object.assign(Object.assign({},n),{sourceLeaseId:null===(r=a.sourceCondition)||void 0===r?void 0:r.leaseId}))}}catch(e){throw s.setStatus({code:ze.ERROR,message:e.message}),e}finally{s.end()}}async getProperties(e={}){const{span:t,updatedOptions:a}=Zl("BlobServiceClient-getProperties",e);try{return await this.serviceContext.getProperties(Object.assign({abortSignal:e.abortSignal},ed(a)))}catch(e){throw t.setStatus({code:ze.ERROR,message:e.message}),e}finally{t.end()}}async setProperties(e,t={}){const{span:a,updatedOptions:r}=Zl("BlobServiceClient-setProperties",t);try{return await this.serviceContext.setProperties(e,Object.assign({abortSignal:t.abortSignal},ed(r)))}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async getStatistics(e={}){const{span:t,updatedOptions:a}=Zl("BlobServiceClient-getStatistics",e);try{return await this.serviceContext.getStatistics(Object.assign({abortSignal:e.abortSignal},ed(a)))}catch(e){throw t.setStatus({code:ze.ERROR,message:e.message}),e}finally{t.end()}}async getAccountInfo(e={}){const{span:t,updatedOptions:a}=Zl("BlobServiceClient-getAccountInfo",e);try{return await this.serviceContext.getAccountInfo(Object.assign({abortSignal:e.abortSignal},ed(a)))}catch(e){throw t.setStatus({code:ze.ERROR,message:e.message}),e}finally{t.end()}}async listContainersSegment(e,t={}){const{span:a,updatedOptions:r}=Zl("BlobServiceClient-listContainersSegment",t);try{return await this.serviceContext.listContainersSegment(Object.assign(Object.assign(Object.assign({abortSignal:t.abortSignal,marker:e},t),{include:"string"==typeof t.include?[t.include]:t.include}),ed(r)))}catch(e){throw a.setStatus({code:ze.ERROR,message:e.message}),e}finally{a.end()}}async findBlobsByTagsSegment(e,t,a={}){const{span:r,updatedOptions:s}=Zl("BlobServiceClient-findBlobsByTagsSegment",a);try{const n=await this.serviceContext.filterBlobs(Object.assign({abortSignal:a.abortSignal,where:e,marker:t,maxPageSize:a.maxPageSize},ed(s)));return Object.assign(Object.assign({},n),{_response:n._response,blobs:n.blobs.map((e=>{var t;let a="";return 1===(null===(t=e.tags)||void 0===t?void 0:t.blobTagSet.length)&&(a=e.tags.blobTagSet[0].value),Object.assign(Object.assign({},e),{tags:Pm(e.tags),tagValue:a})}))})}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}findBlobsByTagsSegments(e,a,r={}){return s(this,arguments,(function*(){let s;if(a||void 0===a)do{s=yield t(this.findBlobsByTagsSegment(e,a,r)),s.blobs=s.blobs||[],a=s.continuationToken,yield yield t(s)}while(a)}))}findBlobsByTagsItems(e,a={}){return s(this,arguments,(function*(){var r,s;try{for(var o,m=i(this.findBlobsByTagsSegments(e,void 0,a));!(o=yield t(m.next())).done;){const e=o.value;yield t(yield*n(i(e.blobs)))}}catch(e){r={error:e}}finally{try{o&&!o.done&&(s=m.return)&&(yield t(s.call(m)))}finally{if(r)throw r.error}}}))}findBlobsByTags(e,t={}){const a=Object.assign({},t),r=this.findBlobsByTagsItems(e,a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(t={})=>this.findBlobsByTagsSegments(e,t.continuationToken,Object.assign({maxPageSize:t.maxPageSize},a))}}listSegments(e,a={}){return s(this,arguments,(function*(){let r;if(e||void 0===e)do{r=yield t(this.listContainersSegment(e,a)),r.containerItems=r.containerItems||[],e=r.continuationToken,yield yield t(yield t(r))}while(e)}))}listItems(e={}){return s(this,arguments,(function*(){var a,r;try{for(var s,o=i(this.listSegments(void 0,e));!(s=yield t(o.next())).done;){const e=s.value;yield t(yield*n(i(e.containerItems)))}}catch(e){a={error:e}}finally{try{s&&!s.done&&(r=o.return)&&(yield t(r.call(o)))}finally{if(a)throw a.error}}}))}listContainers(e={}){""===e.prefix&&(e.prefix=void 0);const t=[];e.includeDeleted&&t.push("deleted"),e.includeMetadata&&t.push("metadata"),e.includeSystem&&t.push("system");const a=Object.assign(Object.assign({},e),t.length>0?{include:t}:{}),r=this.listItems(a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(e={})=>this.listSegments(e.continuationToken,Object.assign({maxPageSize:e.maxPageSize},a))}}async getUserDelegationKey(e,t,a={}){const{span:r,updatedOptions:s}=Zl("BlobServiceClient-getUserDelegationKey",a);try{const n=await this.serviceContext.getUserDelegationKey({startsOn:xm(e,!1),expiresOn:xm(t,!1)},Object.assign({abortSignal:a.abortSignal},ed(s))),i={signedObjectId:n.signedObjectId,signedTenantId:n.signedTenantId,signedStartsOn:new Date(n.signedStartsOn),signedExpiresOn:new Date(n.signedExpiresOn),signedService:n.signedService,signedVersion:n.signedVersion,value:n.value};return Object.assign({_response:n._response,requestId:n.requestId,clientRequestId:n.clientRequestId,version:n.version,date:n.date,errorCode:n.errorCode},i)}catch(e){throw r.setStatus({code:ze.ERROR,message:e.message}),e}finally{r.end()}}getBlobBatchClient(){return new $c(this.url,this.pipeline)}generateAccountSasUrl(e,t=Gc.parse("r"),a="sco",r={}){if(!(this.credential instanceof gl))throw RangeError("Can only generate the account SAS when the client is initialized with a shared key credential");if(void 0===e){const t=new Date;e=new Date(t.getTime()+36e5)}const s=function(e,t){const a=e.version?e.version:Go;if(e.permissions&&e.permissions.setImmutabilityPolicy&&a<"2020-08-04")throw RangeError("'version' must be >= '2020-08-04' when provided 'i' permission.");if(e.permissions&&e.permissions.deleteVersion&&a<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when provided 'x' permission.");if(e.permissions&&e.permissions.permanentDelete&&a<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when provided 'y' permission.");if(e.permissions&&e.permissions.tag&&a<"2019-12-12")throw RangeError("'version' must be >= '2019-12-12' when provided 't' permission.");if(e.permissions&&e.permissions.filter&&a<"2019-12-12")throw RangeError("'version' must be >= '2019-12-12' when provided 'f' permission.");if(e.encryptionScope&&a<"2020-12-06")throw RangeError("'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.");const r=Gc.parse(e.permissions.toString()),s=Xc.parse(e.services).toString(),n=Qc.parse(e.resourceTypes).toString();let i;i=a>="2020-12-06"?[t.accountName,r,s,n,e.startsOn?xm(e.startsOn,!1):"",xm(e.expiresOn,!1),e.ipRange?sd(e.ipRange):"",e.protocol?e.protocol:"",a,e.encryptionScope?e.encryptionScope:"",""].join("\n"):[t.accountName,r,s,n,e.startsOn?xm(e.startsOn,!1):"",xm(e.expiresOn,!1),e.ipRange?sd(e.ipRange):"",e.protocol?e.protocol:"",a,""].join("\n");const o=t.computeHMACSHA256(i);return new id(a,o,r.toString(),s,n,e.protocol,e.startsOn,e.expiresOn,e.ipRange,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,e.encryptionScope)}(Object.assign({permissions:t,expiresOn:e,resourceTypes:a,services:Xc.parse("b").toString()},r),this.credential).toString();return hm(this.url,s)}}const Jc=async(e,t,a,r)=>{const s=new Wc(`${e}?${t}`).getContainerClient(a),n=document.createElement("progress");document.body.appendChild(n);const i=[];for(const e of r){const t=s.getBlockBlobClient(e.name);i.push(t.uploadData(e,{onProgress:t=>{n.value=t.loadedBytes/e.size}}))}Promise.all(i).then((()=>{console.log("Uploads complete!")})).catch((e=>{console.error("Error uploading files:",e)}))}})(),r})()));